<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="MPAAFilmRating">
		<value condition="String.StartsWith(ListItem.mpaa,Rated G) | String.StartsWith(ListItem.mpaa,Rated: G) | String.StartsWith(ListItem.mpaa, G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated G) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: G) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="[String.StartsWith(ListItem.mpaa,Rated PG) | String.StartsWith(ListItem.mpaa,Rated: PG) | String.StartsWith(ListItem.mpaa, PG)] + !String.StartsWith(ListItem.mpaa,Rated PG-13) + !String.StartsWith(ListItem.mpaa,Rated: PG-13) + !String.StartsWith(ListItem.mpaa, PG-13)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="[String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated PG) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: PG) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), PG)] + !String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated PG-13) + !String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: PG-13) + !String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), PG-13)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(ListItem.mpaa,Rated PG-13) | String.StartsWith(ListItem.mpaa,Rated: PG-13) | String.StartsWith(ListItem.mpaa, PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated PG-13) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: PG-13) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(ListItem.mpaa,Rated R) | String.StartsWith(ListItem.mpaa,Rated: R) | String.StartsWith(ListItem.mpaa, R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated R) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: R) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(ListItem.mpaa,Rated NC-17) | String.StartsWith(ListItem.mpaa,Rated: NC-17) | String.StartsWith(ListItem.mpaa, NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated NC-17) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),Rated: NC-17) | String.StartsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA), NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<variable name="MPAATVRating">
		<value condition="String.Contains(ListItem.MPAA,TV-14)">flags/mpaa/tv/tv-14.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-14) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-14.png</value>
		<value condition="String.Contains(ListItem.MPAA,TV-G)">flags/mpaa/tv/tv-g.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-G) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-g.png</value>
		<value condition="String.Contains(ListItem.MPAA,TV-MA)">flags/mpaa/tv/tv-ma.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-MA) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-ma.png</value>
		<value condition="String.Contains(ListItem.MPAA,TV-PG)">flags/mpaa/tv/tv-pg.png</value>
		<value condition="String.Contains(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-PG) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-pg.png</value>
		<value condition="String.EndsWith(ListItem.MPAA,TV-Y)">flags/mpaa/tv/tv-y.png</value>
		<value condition="String.EndsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-Y) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-y.png</value>
		<value condition="String.EndsWith(ListItem.MPAA,TV-Y7)">flags/mpaa/tv/tv-y7.png</value>
		<value condition="String.EndsWith(Window(Home).Property(TMDbHelper.ListItem.MPAA),TV-Y7) + String.IsEmpty(ListItem.MPAA)">flags/mpaa/tv/tv-y7.png</value>
		<value>flags/mpaa/tv/tv-na.png</value>
	</variable>


	<variable name="MPAAMetadataInfoFilmRating">
		<value condition="String.StartsWith(Window.Property(mpaa),G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),NC17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated NC17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG-13)">flags/mpaa/film/us/rating-pg13.png</value>rating-pg13
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated R)">flags/mpaa/film/us/rating-r.png</value>	
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<include name="FlagsLayout">
			<width>68</width>
			<height>25</height>
			<colordiffuse>viewsinfo</colordiffuse>
	</include>
	<include name="FlagsLayoutAudioChannels">
			<width>40</width>
			<height>25</height>
			<colordiffuse>viewsinfo</colordiffuse>
	</include>

	<include name="AspectRatioFlags">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoAspect,flags/aspect/,.png]</texture>
		</control>
	</include>

	<include name="VideoResFlags">
		<control type="image">
			<description>Video Resolution Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoResolution,flags/res/,.png]</texture>
		</control>
	</include>
	<include name="PlayerVideoResFlags">
		<control type="image" id="1">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[VideoPlayer.VideoResolution,flags/res/,.png]</texture>
		</control>
	</include>

	<include name="VideoCodecFlags">		
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoCodec,flags/video/,.png]</texture>
		</control>
	</include>

	<include name="AudioCodecFlags">
		<control type="image">
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
		</control>
	</include>

	<include name="AudioChannelsFlags">
		<control type="image">
			<include>FlagsLayoutAudioChannels</include>
			<texture fallback="flags/na.png">$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
		</control>
	</include>
	<include name="PlayerAudioChannelsFlags">
		<control type="image" id="1">
			<include>FlagsLayoutAudioChannels</include>
			<texture fallback="flags/na.png">$INFO[VideoPlayer.AudioChannels,flags/channels/,.png]</texture>
		</control>
	</include>

	<include name="VideoStereoscopicsFlags">
		<control type="image">
			<include>FlagsLayout</include>
			<texture>flags/video/3d.png</texture>
			<visible>ListItem.IsStereoscopic | String.Contains(ListItem.FilenameAndPath,.3d.) | String.Contains(ListItem.FilenameAndPath,hsbs) | String.Contains(ListItem.FilenameAndPath,sbs) | String.Contains(ListItem.FilenameAndPath,half-sbs)</visible>
		</control>
	</include>
	<include name="PlayerVideoStereoscopicsFlags">
		<control type="image" id="1">
			<include>FlagsLayout</include>
			<texture>flags/video/3d.png</texture>
			<visible>VideoPlayer.IsStereoscopic | String.Contains(Player.FilenameAndPath,.3d.) | String.Contains(Player.FilenameAndPath,hsbs) | String.Contains(Player.FilenameAndPath,sbs) | String.Contains(Player.FilenameAndPath,half-sbs)</visible>
		</control>
	</include>

	<include name="VideoTypeFlags">
		<control type="image">
			<include>FlagsLayout</include>
			<texture>flags/video/web-dl.png</texture>
			<visible>String.Contains(ListItem.FilenameAndPath,web-dl) | String.Contains(ListItem.FilenameAndPath,web-download) | String.Contains(ListItem.FilenameAndPath,webrip)</visible>
		</control>
		<control type="image">
			<include>FlagsLayout</include>
			<texture>flags/video/bluray.png</texture>
			<visible>[String.Contains(ListItem.FilenameAndPath,bluray) | String.Contains(ListItem.FilenameAndPath,blu-ray) | String.Contains(ListItem.FilenameAndPath,bdrip) | String.Contains(ListItem.FilenameAndPath,brrip) | String.Contains(ListItem.FilenameAndPath,bdremux) | String.Contains(ListItem.FilenameAndPath,bd25) | String.Contains(ListItem.FilenameAndPath,bd50)] + !String.Contains(ListItem.FilenameAndPath,dvdrip)</visible>
		</control>
		<control type="image">
			<include>FlagsLayout</include>
			<texture>flags/video/dvd.png</texture>
			<visible>String.Contains(ListItem.FilenameAndPath,dvd) | String.Contains(ListItem.FilenameAndPath,dvdrip) | String.Contains(ListItem.FileExtension,img) | String.Contains(ListItem.FileExtension,ifo) | String.Contains(ListItem.FileExtension,vob) | String.Contains(ListItem.FilenameAndPath,dvdr5) | String.Contains(ListItem.FilenameAndPath,dvdscreener) | String.Contains(ListItem.FilenameAndPath,dvdscr) | String.Contains(ListItem.FilenameAndPath,hddvd) | String.Contains(ListItem.FilenameAndPath,hd-dvd)</visible>
		</control>
		<control type="image">
			<include>FlagsLayout</include>
			<texture>flags/video/hdtv.png</texture>
			<visible>String.Contains(ListItem.FilenameAndPath,hdtv) | String.Contains(ListItem.FilenameAndPath,hdrip)</visible>
		</control>
	</include>
	<include name="PlayerVideoTypeFlags">
		<control type="image" id="1">
			<include>FlagsLayout</include>
			<texture>flags/video/web-dl.png</texture>
			<visible>String.Contains(Player.FilenameAndPath,web-dl) | String.Contains(Player.FilenameAndPath,web-download) | String.Contains(Player.FilenameAndPath,webrip)</visible>
		</control>
		<control type="image" id="1">
			<include>FlagsLayout</include>
			<texture>flags/video/bluray.png</texture>
			<visible>String.Contains(Player.FilenameAndPath,bluray) | String.Contains(Player.FilenameAndPath,blu-ray) | String.Contains(Player.FilenameAndPath,bdrip) | String.Contains(Player.FilenameAndPath,bdremux) | String.Contains(Player.FilenameAndPath,brrip) | String.Contains(Player.FilenameAndPath,bd25) | String.Contains(Player.FilenameAndPath,bd50)</visible>
		</control>
		<control type="image" id="1">
			<include>FlagsLayout</include>
			<texture>flags/video/dvd.png</texture>
			<visible>String.EndsWith(Player.FilenameAndPath,.img) | String.Contains(Player.FilenameAndPath,dvd) | String.EndsWith(Player.FilenameAndPath,.ifo) | String.EndsWith(Player.FilenameAndPath,.vob) | String.Contains(Player.FilenameAndPath,dvdrip) | String.Contains(Player.FilenameAndPath,dvdr5) | String.Contains(Player.FilenameAndPath,.r5) | String.Contains(Player.FilenameAndPath,dvdscreener) | String.Contains(Player.FilenameAndPath,dvdscr) | String.Contains(Player.FilenameAndPath,screener) | String.Contains(Player.FilenameAndPath,hddvd) | String.Contains(Player.FilenameAndPath,hd-dvd)</visible>
		</control>
		<control type="image" id="1">
			<include>FlagsLayout</include>
			<texture>flags/video/hdtv.png</texture>
			<visible>String.Contains(Player.FilenameAndPath,hdtv) | String.Contains(Player.FilenameAndPath,hdrip)</visible>
		</control>
	</include>


	<include name="VideoLanguageFlagLayout">
			<left>28</left>
			<top>3</top>
			<width>25</width>
			<height>20</height>
	</include>
	<include name="VideoLanguageImageLayout">
			<width>61</width>
			<height>25</height>
			<colordiffuse>viewsinfo</colordiffuse>
	</include>
	<include name="VideoLanguageImageLayoutCount">
			<width>54</width>
			<height>25</height>
			<colordiffuse>viewsinfo</colordiffuse>
	</include>

	<include name="VideoLanguageFlags">
		<!-- Audio Languages -->
		<control type="group">
			<width>61</width>
			<height>25</height>
			<visible>![String.IsEmpty(ListItem.Property(AudioLanguage.1)) | !String.IsEmpty(ListItem.Property(AudioLanguage.2))]</visible>
		  <control type="image">
		    <include>VideoLanguageImageLayout</include>
		    <texture>flags/language/language_flag.png</texture>
		  </control>
		  <control type="image">
		    <include>VideoLanguageFlagLayout</include>
		    <texture>$INFO[ListItem.Property(AudioLanguage.1),resource://resource.images.languageflags.colour/,.png]</texture>
		  </control>
		</control>
		<control type="group">
			<width>54</width>
			<height>25</height>
			<visible>![String.IsEmpty(ListItem.Property(AudioLanguage.1)) | String.IsEmpty(ListItem.Property(AudioLanguage.2))]</visible>
		  <control type="image">
		    <include>VideoLanguageImageLayoutCount</include>
		    <texture>flags/language/language_flag_count.png</texture>
		  </control>
			<control type="label">
				<left>0</left>
				<top>0</top>
				<width>75</width>
				<height>25</height>
				<font>FontSize_18</font>
				<textcolor>viewsinfo</textcolor>
				<align>center</align>
				<label>$VAR[AudioLanguageCount]</label>
			</control>
		</control>
		<!-- Subtitles Languages -->
		<control type="group">
			<width>61</width>
			<height>25</height>
			<visible>![String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) | !String.IsEmpty(ListItem.Property(SubtitleLanguage.2))]</visible>
		  <control type="image">
		    <include>VideoLanguageImageLayout</include>
		    <texture>flags/language/subtitle_flag.png</texture>
		  </control>
		  <control type="image">
		    <include>VideoLanguageFlagLayout</include>
		    <texture>$INFO[ListItem.Property(SubtitleLanguage.1),resource://resource.images.languageflags.colour/,.png]</texture>
		  </control>
		</control>
		<control type="group">
			<width>54</width>
			<height>25</height>
			<visible>![String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) | String.IsEmpty(ListItem.Property(SubtitleLanguage.2))]</visible>
		  <control type="image">
		    <include>VideoLanguageImageLayoutCount</include>
		    <texture>flags/language/subtitle_flag_count.png</texture>
		  </control>
			<control type="label">
				<left>0</left>
				<top>0</top>
				<width>75</width>
				<height>25</height>
				<font>FontSize_18</font>
				<textcolor>viewsinfo</textcolor>
				<align>center</align>
				<label>$VAR[SubtitleLanguageCount]</label>
			</control>
		</control>
	</include>

	<variable name="AudioLanguageCount">
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.20))">$NUMBER[20]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.19))">$NUMBER[19]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.18))">$NUMBER[18]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.17))">$NUMBER[17]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.16))">$NUMBER[16]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.15))">$NUMBER[15]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.14))">$NUMBER[14]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.13))">$NUMBER[13]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.12))">$NUMBER[12]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.11))">$NUMBER[11]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.10))">$NUMBER[10]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.9))">$NUMBER[9]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.8))">$NUMBER[8]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.7))">$NUMBER[7]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.6))">$NUMBER[6]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.5))">$NUMBER[5]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.4))">$NUMBER[4]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.3))">$NUMBER[3]</value>
		<value condition="!String.IsEmpty(ListItem.Property(AudioLanguage.2))">$NUMBER[2]</value>
	</variable>
	
	<variable name="SubtitleLanguageCount">
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.20))">$NUMBER[20]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.19))">$NUMBER[19]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.18))">$NUMBER[18]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.17))">$NUMBER[17]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.16))">$NUMBER[16]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.15))">$NUMBER[15]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.14))">$NUMBER[14]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.13))">$NUMBER[13]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.12))">$NUMBER[12]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.11))">$NUMBER[11]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.10))">$NUMBER[10]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.9))">$NUMBER[9]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.8))">$NUMBER[8]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.7))">$NUMBER[7]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.6))">$NUMBER[6]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.5))">$NUMBER[5]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.4))">$NUMBER[4]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.3))">$NUMBER[3]</value>
		<value condition="!String.IsEmpty(ListItem.Property(SubtitleLanguage.2))">$NUMBER[2]</value>
	</variable>


	<include name="CameraLogosLayout">
			<left>0</left>
			<top>0</top>
			<width>161</width>
			<height>109</height>
	    <colordiffuse>viewsinfo</colordiffuse>
	</include>

	<include name="CameraLogosFlags">
<!-- *Disabled*
		<control type="image">
      <include>CameraLogosLayout</include>
      <texture>views/list/info.png</texture>
			<visible>String.IsEmpty(ListItem.PictureCamMake)</visible>
		</control>
		-->
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/canon.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Canon) | String.Contains(ListItem.PictureCamModel,Canon)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/casio.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Casio) | String.Contains(ListItem.PictureCamModel,Casio)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/fujifilm.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,FujiFilm) | String.Contains(ListItem.PictureCamModel,FujiFilm)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/hasselbland.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Hasselbland) | String.Contains(ListItem.PictureCamModel,Hasselbland)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/kodak.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Kodak) | String.Contains(ListItem.PictureCamModel,Kodak)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/konica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Konica) | String.Contains(ListItem.PictureCamModel,Konica)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/minolta.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Minolta) | String.Contains(ListItem.PictureCamModel,Minolta)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/leica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Leica) | String.Contains(ListItem.PictureCamModel,Leica)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/nikon.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Nikon) | String.Contains(ListItem.PictureCamModel,Nikon)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/nokia.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Nokia) | String.Contains(ListItem.PictureCamModel,Nokia)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/olympus.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Olympus) | String.Contains(ListItem.PictureCamModel,Olympus)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/panasonic.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Panasonic) | String.Contains(ListItem.PictureCamModel,Panasonic)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/pentax.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Pentax) | String.Contains(ListItem.PictureCamModel,Pentax)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/polaroid.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Polaroid) | String.Contains(ListItem.PictureCamModel,Polaroid)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/samsung.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Samsung) | String.Contains(ListItem.PictureCamModel,Samsung)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/sanyo.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sanyo) | String.Contains(ListItem.PictureCamModel,Sanyo)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/sigma.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sigma) | String.Contains(ListItem.PictureCamModel,Sigma)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/sony.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sony) | String.Contains(ListItem.PictureCamModel,Sony)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/toshiba.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Toshiba) | String.Contains(ListItem.PictureCamModel,Toshiba)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
			<texture>flags/camera/yashica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Yashica) | String.Contains(ListItem.PictureCamModel,Yashica)</visible>
		</control>
	</include>

</includes>