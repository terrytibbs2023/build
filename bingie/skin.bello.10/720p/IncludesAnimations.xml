<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="CommonOpenEffect">
		<effect type="slide" start="0,AnimationsSlideMinus" end="0,0" time="AnimationsSlideTime" tween="cubic" easing="inout"/>
		<effect type="fade" start="0" end="100" time="AnimationsFadeTime" tween="cubic" easing="inout"/>
	</include>
	<include name="CommonCloseEffect">
		<effect type="slide" start="0,0" end="0,AnimationsSlideMinus" time="AnimationsSlideTime" tween="cubic" easing="inout"/>
		<effect type="fade" start="100" end="0" time="AnimationsFadeTime" tween="cubic" easing="inout"/>
	</include>
	<include name="CommonCloseEffectTwo">
		<effect type="slide" start="0,0" end="0,AnimationsSlideMinus" time="AnimationsSlideTime" delay="AnimationsDelayTime" tween="quadratic" easing="out"/>
		<effect type="fade" start="100" end="0" time="AnimationsFadeTime" delay="AnimationsDelayTime"/>
	</include>
	<include name="CommonVisibleEffect">
		<effect type="slide" start="0,AnimationsSlide" end="0,0" time="AnimationsSlideTime" tween="cubic" easing="inout"/>
		<effect type="fade" start="0" end="100" time="AnimationsFadeTime" tween="cubic" easing="inout"/>
	</include>
	<include name="CommonVisibleEffectTwo">
		<effect type="slide" start="0,AnimationsSlide" end="0,0" time="AnimationsSlideTime" delay="AnimationsDelayTime" tween="quadratic" easing="out"/>
		<effect type="fade" start="0" end="100" time="AnimationsFadeTime" delay="AnimationsDelayTime"/>
	</include>
	<include name="CommonHiddenEffect">
		<effect type="slide" start="0,0" end="0,AnimationsSlide" time="AnimationsSlideTime" tween="cubic" easing="inout"/>
		<effect type="fade" start="100" end="0" time="AnimationsFadeTime" tween="cubic" easing="inout"/>
	</include>
	<include name="CommonHiddenEffectTwo">
		<effect type="slide" start="0,0" end="0,AnimationsSlide" time="AnimationsSlideTime" delay="AnimationsDelayTime" tween="quadratic" easing="out"/>
		<effect type="fade" start="100" end="0" time="AnimationsFadeTime" delay="AnimationsDelayTime"/>
	</include>

	<include name="OpenCloseSlideAnimation">
		<animation type="WindowOpen" reversible="false">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonCloseEffect</include>
		</animation>
	</include>

	<include name="OpenCloseSlideAnimationTwo">
		<animation type="WindowOpen" reversible="false">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonCloseEffectTwo</include>
		</animation>
	</include>

	<include name="VisibleHiddenSlideAnimation">
		<animation type="Visible" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="Hidden" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="CommonDialogsAnimation">
		<include>OpenCloseSlideAnimation</include>
		<include>VisibleHiddenSlideAnimation</include>
	</include>

	<include name="HomeMenu_OpenCloseSlideAnimation">
		<animation type="WindowOpen" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonHiddenEffectTwo</include>
		</animation>
	</include>


	<include name="HomeMenu_ExtraInfo_ScrollAnimation">
		<visible>!Container(20).Scrolling + !Container(20).OnScrollNext + !Container(20).OnScrollPrevious + !Container(20).OnNext + !Container(20).OnPrevious</visible>
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="70" end="100" center="58,490" delay="100" easing="out" tween="quadratic" time="250" />
			<effect type="fade" start="0" end="100" time="200" delay="100" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="70" center="58,490" easing="in" tween="quadratic" time="250" />
			<effect type="fade" start="100" end="0" time="200" />
		</animation>
	</include>
	<include name="HomeMenu_RightExtraInfo_ScrollAnimation">
		<visible>!Container(20).Scrolling + !Container(20).OnScrollNext + !Container(20).OnScrollPrevious + !Container(20).OnNext + !Container(20).OnPrevious</visible>
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="70" end="100" center="1220,480" delay="100" easing="out" tween="quadratic" time="250" />
			<effect type="fade" start="0" end="100" time="200" delay="100" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="70" center="1220,480" easing="in" tween="quadratic" time="250" />
			<effect type="fade" start="100" end="0" time="200" />
		</animation>
	</include>
	<include name="HomeMenu_ExtraInfo_HiddenAnimation">
		<animation type="Conditional" condition="[ControlGroup(22).HasFocus + [String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart/Logo) | String.StartsWith(Container(20).ListItem.Property(widgetPath),plugin://) | String.IsEqual(Container(20).ListItem.Property(widgetType),mixed_online)]]">
			<effect type="slide" start="0,0" end="0,75" time="300" tween="sine" easing="in"/>
			<effect type="fade" start="100" end="0" time="200"/>
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="70" end="100" center="70,600" easing="out" tween="quadratic" time="250" />
			<effect type="fade" start="0" end="100" time="200" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="70" center="70,600" easing="in" tween="quadratic" time="250" />
			<effect type="fade" start="100" end="0" time="200" />
		</animation>
	</include>

	<include name="HomeWidgets_VisibleHiddenAnimation">
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="45,85,1190,0" end="45,85,1190,256" center="auto" delay="100" easing="out" tween="quadratic" time="250" />
			<effect type="fade" start="0" end="100" time="250" delay="100"/>
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="45,85,1190,256" end="45,85,1190,0" center="auto" easing="in" tween="quadratic" time="250" />
			<effect type="fade" start="100" end="0" time="250"/>
		</animation>
	</include>

	<include name="HiddenHomeWidgets_Animation">
		<animation effect="slide" start="0,0" end="0,33" condition="!String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart)">Conditional</animation>
		<animation type="Conditional" condition="ControlGroup(22).HasFocus + !String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart)" reversible="false">
			<effect type="slide" start="0,0" end="0,75" time="300" tween="sine" easing="out" />
		</animation>
		<animation type="Conditional" condition="ControlGroup(22).HasFocus" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
		</animation>
		<animation type="Conditional" condition="![ControlGroup(22).HasFocus + !String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart)]" reversible="false">
			<effect type="slide" start="0,75" end="0,0" time="300" tween="sine" easing="out" />
		</animation>
		<animation type="Conditional" condition="!ControlGroup(22).HasFocus" reversible="false">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out"/>
		</animation>
	</include>

	<include name="VisibleHomeWidgets_Animation">
		<animation type="Conditional" condition="ControlGroup(22).HasFocus + !String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart)" reversible="false">
			<effect type="slide" start="0,0" end="0,108" time="300" tween="sine" easing="out" />
		</animation>
		<animation type="Conditional" condition="![ControlGroup(22).HasFocus + !String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart)]" reversible="false">
			<effect type="slide" start="0,108" end="0,0" time="300" tween="sine" easing="out" />
		</animation>
	</include>

	<include name="HomeMenu_Submenu_HiddenAnimation">
		<animation type="Conditional" condition="ControlGroup(22).HasFocus" reversible="false">
			<effect type="slide" start="0,0" end="0,75" time="300" tween="sine" easing="out" />
			<effect type="fade" start="100" end="0" time="200" tween="sine" easing="out"/>
		</animation>
		<animation type="Conditional" condition="!ControlGroup(22).HasFocus" reversible="false">
			<effect type="slide" start="0,75" end="0,0" time="300" tween="sine" easing="out" />
			<effect type="fade" start="0" end="100" time="200" tween="sine" easing="out"/>
		</animation>
	</include>

	<include name="FanartWidget_HiddenAnimation">
		<animation type="Conditional" condition="ControlGroup(22).HasFocus + String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart/Logo)" reversible="false">
			<effect type="slide" start="0,0" end="0,45" time="300" tween="sine" easing="out" />
			<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out"/>
		</animation>
		<animation type="Conditional" condition="![ControlGroup(22).HasFocus + String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart/Logo)]" reversible="false">
			<effect type="slide" start="0,45" end="0,0" time="300" tween="sine" easing="out" />
			<effect type="fade" start="0" end="100" time="150" tween="sine" easing="out"/>
		</animation>
	</include>

	<include name="ShutdownMenuAnimation">
		<animation type="Conditional" condition="![Window.IsActive(ShutdownMenu) | [Window.IsActive(contextmenu) + ![String.IsEqual(Window(home).Property(Resume),true) | Window.IsActive(locksettings) | Window.IsActive(musicplaylisteditor) | Window.IsActive(filemanager) | Window.IsVisible(pvrchannelmanager)]]]">
			<include>CommonVisibleEffect</include>
		</animation>
	</include>

	<include name="SettingsSlideAnimations">
		<animation type="WindowOpen" reversible="false" condition="!Window.Previous(EventLog) + !Window.Previous(Settings) + !Window.Previous(InterfaceSettings) + !Window.Previous(ServiceSettings) + !Window.Previous(PlayerSettings) + !Window.Previous(MediaSettings) + !Window.Previous(PVRSettings) + !Window.Previous(SystemSettings) + !Window.Previous(Profiles) + !Window.Previous(SystemInfo) + !Window.Previous(SkinSettings)">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false" condition="!Window.Next(EventLog) + !Window.Next(Settings) + !Window.Next(InterfaceSettings) + !Window.Next(ServiceSettings) + !Window.Next(PlayerSettings) + !Window.Next(MediaSettings) + !Window.Next(PVRSettings) + !Window.Next(SystemSettings) + !Window.Next(Profiles) + !Window.Next(SystemInfo) + !Window.Next(SkinSettings)">
			<include>CommonCloseEffectTwo</include>
		</animation>
		<animation type="Visible" reversible="false" condition="!Window.Previous(EventLog) + !Window.Previous(Settings) + !Window.Previous(InterfaceSettings) + !Window.Previous(ServiceSettings) + !Window.Previous(PlayerSettings) + !Window.Previous(MediaSettings) + !Window.Previous(PVRSettings) + !Window.Previous(SystemSettings) + !Window.Previous(Profiles) + !Window.Previous(SystemInfo) + !Window.Previous(SkinSettings)">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="Hidden" reversible="false" condition="!Window.Next(EventLog) + !Window.Next(Settings) + !Window.Next(InterfaceSettings) + !Window.Next(ServiceSettings) + !Window.Next(PlayerSettings) + !Window.Next(MediaSettings) + !Window.Next(PVRSettings) + !Window.Next(SystemSettings) + !Window.Next(Profiles) + !Window.Next(SystemInfo) + !Window.Next(SkinSettings)">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="OptionsTopMenuAnimation">
		<visible allowhiddenfocus="true">Controlgroup(9000).HasFocus</visible>
		<animation type="Visible" reversible="false">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="Hidden" reversible="false">
			<include>CommonCloseEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonCloseEffect</include>
		</animation>
	</include>

	<include name="TopRightSlideAnimations">
		<animation type="Visible" reversible="false">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="Hidden" reversible="false">
			<include>CommonCloseEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonCloseEffect</include>
		</animation>
	</include>

	<include name="VolumeBarSlideAnimations">
		<animation type="Conditional" condition="String.IsEmpty(Player.SeekNumeric) + ![[Window.IsActive(VolumeBar) + !Player.Muted] | Window.IsActive(SliderDialog) | Window.IsActive(script-cu-lrclyrics-main.xml)]" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="Conditional" condition="!String.IsEmpty(Player.SeekNumeric) | [Window.IsActive(VolumeBar) + !Player.Muted] | Window.IsActive(SliderDialog) | Window.IsActive(script-cu-lrclyrics-main.xml)" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="InfoDialogs_OpenCloseAnimation">
		<animation type="WindowOpen" reversible="false">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="Visible" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="WindowClose" condition="!Window.IsActive(shutdownmenu) + !Window.IsActive(favourites)" reversible="false">
			<include>CommonCloseEffect</include>
		</animation>
		<animation type="WindowClose" condition="Window.IsActive(shutdownmenu) | Window.IsActive(favourites)" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
		<animation type="Hidden" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="InfoDialogs_ContentInfoAnimation">
		<animation type="Conditional" condition="[[Window.IsActive(PlayerControls) + [Skin.HasSetting(EnableQuickNav) | Player.HasMedia]] | Window.IsActive(script-globalsearch.xml) | Window.IsActive(favourites) | Window.IsActive(MovieInformation) | Window.IsActive(1130) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(AddonInformation) | Window.IsActive(PVRGuideInfo) | Window.IsActive(PVRRecordingInfo) | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YoutubeList.xml)] | !String.IsEmpty(Window(Home).Property(infodialogs.active))">
			<effect type="slide" start="0,0" end="0,AnimationsSlide" time="AnimationsSlideTime" tween="quadratic" easing="in"/>
			<effect type="fade" start="100" end="0" time="AnimationsFadeTime"/>
		</animation>
	</include>

	<include name="InfoDialogsVisible_ZoomAnimation">
		<animation type="Conditional"
			condition="!String.IsEmpty(Window(Home).Property(infodialogs.active))
			| [Window.IsActive(MovieInformation)
			| Window.IsActive(1130)
			| Window.IsActive(1190)
			| Window.IsActive(MusicInformation)
			| Window.IsActive(SongInformation)
			| Window.IsActive(AddonInformation)
			| Window.IsActive(PictureInfo)
			| Window.IsActive(DialogPVRInfo.xml)
			| Window.IsActive(script-globalsearch.xml)
			| Window.IsActive(script-script.extendedinfo-DialogInfo.xml)
			| Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml)
			| Window.IsActive(script-script.extendedinfo-VideoList.xml)
			| Window.IsActive(script-script.extendedinfo-YoutubeList.xml)
			| [Window.IsActive(script-skinshortcuts.xml) + Window.IsActive(SkinSettings)]
			| [Window.IsActive(AddonSettings) + !Window.IsActive(DialogSettings.xml)]
			| Window.IsActive(Favourites)
			| Window.IsActive(DialogColorPicker)
			| [Window.IsActive(PlayerControls) + [Skin.HasSetting(EnableQuickNav) | Player.HasMedia]]]">
			<effect type="slide" start="0,0" end="0,40" time="250" tween="sine" easing="out"/>
			<effect type="fade" start="100" end="0" time="200" tween="sine" easing="out"/>
		</animation>
	</include>

	<include name="InfoDialogsVisible_FadeAnimation">
		<animation effect="fade" time="300" tween="sine" easing="out">Visible</animation>
		<animation effect="fade" time="300" tween="sine" easing="in">Hidden</animation>
		<visible>![Window.IsActive(MovieInformation) | Window.IsActive(1130) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(favourites) |  Window.IsActive(playercontrols)] + String.IsEmpty(Window(Home).Property(infodialogs.active))</visible>
	</include>

	<include name="ActorInfoVisibleAnimation">
		<animation type="Conditional" condition="String.IsEqual(Window.Property(ShowActorInfo),True)">
			<effect type="slide" start="0,0" end="-1280,0" tween="quadratic" easing="in" time="500"/>
		</animation>
	</include>
	<include name="ActorInfoHiddenAnimation">
		<animation type="Conditional" condition="!String.IsEqual(Window.Property(ShowActorInfo),True)">
			<effect type="slide" start="-1280,0" end="0,0" tween="quadratic" easing="out" time="500"/>
		</animation>
	</include>

	<include name="CommonViews_VerticalAnimation">
		<include>OpenCloseSlideAnimationTwo</include>
	</include>

	<include name="CommonViews_HorizontalAnimation">
		<animation type="WindowOpen" reversible="false">
			<include>CommonVisibleEffectTwo</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonHiddenEffectTwo</include>
		</animation>
	</include>

	<include name="WallsViews_ZoomInfoAnimation">
		<animation effect="zoom" start="100" end="94" center="640,360" time="300" tween="quadratic" easing="in" condition="Control.IsVisible($PARAM[id_13]) | Control.IsVisible($PARAM[id_14])">Conditional</animation>
	</include>

	<include name="VideoWallView_Animation">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" time="650" center="640,360" start="60" end="100" tween="sine" easing="out" />
			<effect type="fade" time="650" start="0" tween="sine" easing="out" end="100" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="zoom" time="250" center="640,360" start="100" end="120" tween="sine" easing="in" />
			<effect type="fade" time="250" start="100" tween="sine" easing="in" end="0"/>
		</animation>
	</include>

	<include name="ThumbnailsFocusAnimation">
		<animation type="Focus">
			<effect type="zoom" start="95" end="100" time="200" tween="sine" easing="inout" center="auto"/>
			<effect type="fade" start="20" end="100" time="200" tween="back" easing="out"/>
		</animation>
	</include>

	<include name="ThumbnailsFocusAnimationTwo">
			<animation reversible="false" effect="fade" start="0" end="100" time="150">Focus</animation>
			<animation reversible="false" effect="fade" start="100" end="0" time="150">UnFocus</animation>
	</include>

	<include name="ListFocusAnimation">
		<animation type="Focus" reversible="false" condition="Container(550).OnPrevious | Container(570).OnPrevious | Container(120).OnPrevious | Container(150).OnPrevious | Container(450).OnPrevious | Container(2).OnPrevious | Container(3).OnPrevious | Container(5).OnPrevious | Container(6).OnPrevious | Container(11).OnPrevious | Container(12).OnPrevious | Container(13).OnPrevious | Container(20).OnPrevious | Container(21).OnPrevious | Container(50).OnPrevious | Container(51).OnPrevious | Container(100).OnPrevious | Container(58).OnPrevious | Container(112).OnPrevious | Container(5000).OnPrevious">
			<effect type="fade" start="20" end="100" time="250" tween="back" easing="out"/>
			<effect type="slide" start="0,30" end="0,0" time="250" tween="back" easing="out"/>
		</animation>
		<animation type="Focus" reversible="false" condition="Container(550).OnNext | Container(570).OnNext | Container(120).OnNext | Container(150).OnNext | Container(450).OnNext | Container(2).OnNext | Container(3).OnNext | Container(5).OnNext | Container(6).OnNext | Container(11).OnNext | Container(12).OnNext | Container(13).OnNext | Container(20).OnNext | Container(21).OnNext | Container(50).OnNext | Container(51).OnNext | Container(100).OnNext | Container(58).OnNext | Container(211).OnNext | Container(5000).OnNext">
			<effect type="fade" start="20" end="100" time="250" tween="back" easing="out"/>
			<effect type="slide" start="0,-30" end="0,0" time="250" tween="back" easing="out"/>
		</animation>
	</include>

	<include name="SlideViewFocusAnimation">
		<animation type="Focus" reversible="false" condition="Container(51).OnNext">
			<effect type="fade" start="20" end="100" time="300" delay="100" tween="sine" easing="out" />
		</animation>
		<animation type="Focus" reversible="false" condition="Container(51).OnPrevious">
			<effect type="fade" start="20" end="100" time="300" delay="100" tween="sine" easing="out" />
		</animation>
	</include>

	<include name="BannerListFocusAnimation">
		<animation type="Focus" reversible="false" condition="Container(57).OnNext | Container(111).OnNext | Container(121).OnNext | Container(131).OnNext | Container(141).OnNext | Container(151).OnNext | Container(161).OnNext | Container(171).OnNext | Container(181).OnNext">
			<effect type="slide" start="0,35" end="0,0" time="450" tween="circle" easing="out" />
			<effect type="fade" start="20" end="100" time="250" delay="100" tween="sine" easing="out" />
		</animation>
		<animation type="Focus" reversible="false" condition="Container(57).OnPrevious | Container(111).OnPrevious | Container(121).OnPrevious | Container(131).OnPrevious | Container(141).OnPrevious | Container(151).OnPrevious | Container(161).OnPrevious | Container(171).OnPrevious | Container(181).OnPrevious">
			<effect type="slide" start="0,-35" end="0,0" time="450" tween="circle" easing="out" />
			<effect type="fade" start="20" end="100" time="250" delay="100" tween="sine" easing="out" />
		</animation>
	</include>

	<include name="PVRListFocusAnimation">
		<animation type="Focus" reversible="false" condition="Container(6).OnPrevious | Container(50).OnPrevious | Container(51).OnPrevious | Container(10).OnPrevious | Container(11).OnPrevious | Container(12).OnPrevious | Container(13).OnPrevious | Container(451).OnPrevious | Container(5003).OnPrevious">
			<effect type="fade" start="20" end="100" time="700"/>
			<effect type="slide" start="0,45" end="0,0" time="400" tween="back" easing="out"/>
		</animation>
		<animation type="Focus" reversible="false" condition="Container(6).OnNext | Container(50).OnNext | Container(51).OnNext | Container(10).OnNext | Container(11).OnNext | Container(12).OnNext | Container(13).OnNext | Container(451).OnNext | Container(5003).OnNext">
			<effect type="fade" start="20" end="100" time="700"/>
			<effect type="slide" start="0,-45" end="0,0" time="400" tween="back" easing="out"/>
		</animation>
	</include>

	<!--
	<include name="PVRViews_Animation">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"  />
			<effect type="slide" start="0,55" end="0,0" time="350" tween="cubic" easing="out" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,0" end="0,55" time="350" tween="sine" easing="out" />
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"  />
			<effect type="slide" start="0,50" end="0,0" time="350" tween="cubic" easing="out" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
			<effect type="slide" start="0,0" end="0,50" time="350" tween="sine" easing="out" />
		</animation>
	</include>
	-->

	<include name="NotificationsAnimations">
		<animation type="WindowOpen" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
		<animation type="Visible" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="Hidden" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="NotificationsAnimationsTwo">
		<animation type="WindowOpen" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="WindowClose" reversible="false">
			<include>CommonHiddenEffectTwo</include>
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="slide" start="0,55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out"/>
			<effect type="fade" start="0" end="100" time="AnimationsFadeTime"/>
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="slide" start="0,0" end="0,55" time="AnimationsSlideTime" tween="quadratic" easing="out"/>
			<effect type="fade" start="100" end="0" time="AnimationsFadeTime"/>
		</animation>
	</include>

	<include name="KaiToastSlideAnimations">
		<animation type="Conditional" reversible="false" condition="!Window.IsActive(notification) + ![Window.IsActive(busydialog) + !Window.IsActive(home)]">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="Conditional" reversible="false" condition="Window.IsActive(notification) | [Window.IsActive(busydialog) + !Window.IsActive(home)]">
			<include>CommonCloseEffect</include>
		</animation>
	</include>

	<include name="ScanSlideAnimations">
		<animation type="Conditional" reversible="false" condition="!Window.IsActive(extendedprogressdialog)">
			<include>CommonOpenEffect</include>
		</animation>
		<animation type="Conditional" reversible="false" condition="Window.IsActive(extendedprogressdialog)">
			<include>CommonCloseEffect</include>
		</animation>
	</include>

	<include name="OSDAnimation">
		<animation type="WindowOpen">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="WindowClose">
			<include>CommonHiddenEffect</include>
		</animation>
		<animation type="Visible" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="Hidden" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="OSDAnimationSide">
		<animation type="WindowOpen" reversible="false">
			<effect type="slide" start="55,0" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out"/>
			<effect type="fade" start="0" end="100" time="AnimationsFadeTime"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="slide" start="0,0" end="55,0" time="AnimationsSlideTime" tween="quadratic" easing="out"/>
			<effect type="fade" start="100" end="0" time="AnimationsFadeTime"/>
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="slide" start="55,0" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out"/>
			<effect type="fade" start="0" end="100" time="AnimationsFadeTime"/>
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="slide" start="0,0" end="55,0" time="AnimationsSlideTime" tween="quadratic" easing="out"/>
			<effect type="fade" start="100" end="0" time="AnimationsFadeTime"/>
		</animation>
	</include>

	<include name="OSDControlsSimpleAnimationGeneral">
		<visible allowhiddenfocus="true">!ControlGroup(190).HasFocus</visible>
		<animation type="Visible">
			<effect type="rotatey" start="-180" end="0" center="1214,0" time="400" tween="sine" easing="inout" />
			<effect type="fade" start="0" end="100" time="10" delay="260" />
		</animation>
		<animation type="Hidden">
			<effect type="rotatey" start="0" end="-180" center="1214,0" time="400" tween="sine" easing="inout" />
			<effect type="fade" start="100" end="0" time="10" delay="140" />
		</animation>
	</include>

	<include name="OSDControlsSimpleAnimationOptions">
		<visible allowhiddenfocus="true">ControlGroup(190).HasFocus</visible>
		<animation type="Visible">
			<effect type="rotatey" start="180" end="0" center="1214,0" time="400" tween="sine" easing="inout" />
			<effect type="fade" start="0" end="100" time="10" delay="140" />
		</animation>
		<animation type="Hidden">
			<effect type="rotatey" start="0" end="180" center="1214,0" time="400" tween="sine" easing="inout" />
			<effect type="fade" start="100" end="0" time="10" delay="260" />
		</animation>
	</include>

	<include name="TextViewerHideAnimations">
		<animation type="Conditional" condition="![[String.IsEqual(Window(Home).Property(ShowTextViewer),1) + Window.IsActive(TextViewer)] | [String.IsEqual(Window(Home).Property(ShowTextViewer),2) + Window.IsActive(TextViewer)]]" reversible="false">
			<include>CommonVisibleEffect</include>
		</animation>
		<animation type="Conditional" condition="[String.IsEqual(Window(Home).Property(ShowTextViewer),1) + Window.IsActive(TextViewer)] | [String.IsEqual(Window(Home).Property(ShowTextViewer),2) + Window.IsActive(TextViewer)]" reversible="false">
			<include>CommonHiddenEffect</include>
		</animation>
	</include>

	<include name="BackgroundAnimation">
		<animation effect="zoom" start="110" end="130" center="auto" time="14000" pulse="true" condition="true">Conditional</animation>
		<animation effect="slide" start="-20,-20" end="40,40" time="15000" pulse="true" condition="true">Conditional</animation>
	</include>

	<include name="CDArtAnimations">
		<animation type="conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding | Window.IsActive(script-cu-lrclyrics-main.xml)" reversible="false">
			<effect type="slide" start="0,0" end="0,65" tween="sine" easing="out" time="400" delay="0"/>
			<effect type="fade" start="100" end="0" time="350" delay="0"/>
		</animation>
		<animation type="conditional" condition="![Player.Paused | Player.Forwarding | Player.Rewinding | Window.IsActive(script-cu-lrclyrics-main.xml)]" reversible="false">
			<effect type="slide" start="0,65" end="0,0" tween="sine" easing="out" time="400" delay="0"/>
			<effect type="fade" start="0" end="100" time="400" delay="150"/>
		</animation>
		<animation type="conditional" condition="!Player.ShowInfo + !Window.IsActive(MusicOSD)" reversible="false">
			<effect type="slide" start="0,0" end="0,65" tween="sine" easing="out" time="300" delay="0"/>
			<effect type="fade" start="100" end="0" time="100" delay="0"/>
		</animation>
		<animation type="conditional" condition="Player.ShowInfo | Window.IsActive(MusicOSD)" reversible="false">
			<effect type="slide" start="0,65" end="0,0" tween="sine" easing="out" time="400" delay="0"/>
			<effect type="fade" start="0" end="100" time="400" delay="150"/>
		</animation>
		<animation type="WindowOpen" reversible="false">
			<effect type="slide" start="0,0" end="0,-65" tween="sine" easing="out" time="400" delay="0"/>
			<effect type="fade" start="0" end="100" time="400" delay="150"/>
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="slide" start="0,-65" end="0,0" tween="sine" easing="out" time="300" delay="0"/>
			<effect type="fade" start="100" end="0" time="100" delay="0"/>
		</animation>
		<animation effect="rotate" end="-3600" center="auto" time="30000" loop="true" reversible="false" condition="true">Conditional</animation>
	</include>

	<include name="VisibleFadeEffectNowPlaying">
		<animation effect="fade" start="100" end="0" time="AnimationsFadeTime" tween="quadratic" easing="out">Hidden</animation>
		<animation effect="fade" start="0" end="100" time="AnimationsFadeTime" tween="quadratic" easing="out">Visible</animation>
		<animation effect="slide" start="0,-55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="ControlGroup(100).HasFocus + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="ControlGroup(100).HasFocus + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!ControlGroup(100).HasFocus + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!ControlGroup(100).HasFocus + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
	</include>
	<include name="VisibleFadeEffectQuickNav">
		<animation effect="fade" start="100" end="0" time="AnimationsFadeTime" tween="quadratic" easing="out">Hidden</animation>
		<animation effect="fade" start="0" end="100" time="AnimationsFadeTime" tween="quadratic" easing="out">Visible</animation>
		<animation effect="slide" start="0,-55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(150) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(150) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(150) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(150) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
	</include>
	<include name="VisibleFadeEffectMovies">
		<animation effect="fade" start="100" end="0" time="AnimationsFadeTime" tween="quadratic" easing="out">Hidden</animation>
		<animation effect="fade" start="0" end="100" time="AnimationsFadeTime" tween="quadratic" easing="out">Visible</animation>
		<animation effect="slide" start="0,-55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(200) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(200) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(200) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(200) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
	</include>
	<include name="VisibleFadeEffectTVShows">
		<animation effect="fade" start="100" end="0" time="AnimationsFadeTime" tween="quadratic" easing="out">Hidden</animation>
		<animation effect="fade" start="0" end="100" time="AnimationsFadeTime" tween="quadratic" easing="out">Visible</animation>
		<animation effect="slide" start="0,-55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(250) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(250) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(250) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(250) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
	</include>
	<include name="VisibleFadeEffectMusic">
		<animation effect="fade" start="100" end="0" time="AnimationsFadeTime" tween="quadratic" easing="out">Hidden</animation>
		<animation effect="fade" start="0" end="100" time="AnimationsFadeTime" tween="quadratic" easing="out">Visible</animation>
		<animation effect="slide" start="0,-55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(300) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,55" end="0,0" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="Control.HasFocus(300) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,-55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(300) + !String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
		<animation effect="slide" start="0,0" end="0,55" time="AnimationsSlideTime" tween="quadratic" easing="out" condition="!Control.HasFocus(300) + String.IsEmpty(Window.Property(Movement))" reversible="false">Conditional</animation>
	</include>


	<include name="CloseAnimation">
		<animation effect="fade" time="200" delay="100" reversible="false">Visible</animation>
		<animation effect="fade" time="200" reversible="false">Hidden</animation>
	</include>
	<include name="BackgroundFade">
		<animation effect="fade" time="350" tween="sine" easing="out" reversible="false">Visible</animation>
		<animation effect="fade" time="350" tween="sine" easing="in" reversible="false">Hidden</animation>
	</include>
	<include name="FanartFade">
		<animation effect="fade" time="400" tween="sine" easing="out" reversible="false">WindowOpen</animation>
		<animation effect="fade" time="400" tween="sine" easing="in" reversible="false">WindowClose</animation>
		<animation effect="fade" time="400" tween="sine" easing="out" reversible="false">Visible</animation>
		<animation effect="fade" time="400" tween="sine" easing="in" reversible="false">Hidden</animation>
	</include>
	<include name="FanartFade2">
		<animation effect="fade" time="300" tween="sine" easing="out" reversible="false">WindowOpen</animation>
		<animation effect="fade" time="300" tween="sine" easing="in" reversible="false">WindowClose</animation>
		<animation effect="fade" time="200" tween="sine" easing="out" reversible="false">Visible</animation>
		<animation effect="fade" time="200" tween="sine" easing="in" reversible="false">Hidden</animation>
	</include>
	<include name="VisibleFadeEffect">
		<animation effect="fade" time="250">Visible</animation>
		<animation effect="fade" time="250">Hidden</animation>
	</include>
	<include name="VisibleFadeEffect2">
		<animation effect="fade" time="150">Visible</animation>
		<animation effect="fade" time="150">Hidden</animation>
	</include>
	<include name="OpenCloseFadeEffect">
		<animation effect="fade" time="300">WindowOpen</animation>
		<animation effect="fade" time="300">WindowClose</animation>
	</include>

</includes>