<?xml version="1.0" encoding="UTF-8"?>
<includes> 

	<!-- ====================================== -->
	<!-- ==== Bello View VideoLibrary "66" ==== -->
	<!-- ====================================== -->
	<include name="BelloView_VideoLibrary">
		<control type="image">
			<top>48</top>
			<include>FullscreenDimensions</include>
			<texture background="true">windows/home/menu_overlay.png</texture>
			<include>HomeMenu_OpenCloseSlideAnimation</include>
			<visible>Control.IsVisible(66) + !String.IsEmpty(ListItem.Label)</visible>
		</control>
		<control type="group">
			<visible>Control.IsVisible(66)</visible>
			<include>OpenCloseSlideAnimationTwo</include>
			<control type="fixedlist" id="66">
				<left>45</left>
				<top>216</top>
				<width>1189</width>
				<height>256</height>
				<onleft>66</onleft>
				<onright>66</onright>
				<onup>9111</onup>
				<ondown>6066</ondown>
				<onfocus condition="!System.HasAddon(resource.images.languageflags.colour)">InstallAddon(resource.images.languageflags.colour)</onfocus>
				<oninfo condition="$EXP[MoviesSetsCondition]">SetProperty(ShowTextViewer,1,home)</oninfo>
				<oninfo condition="$EXP[MoviesSetsCondition]">RunScript(script.embuary.helper,action=textviewer,header=$INFO[ListItem.Label],message='"$VAR[GlobalPlotDescription]"')</oninfo>
				<oninfo condition="Container.Content(Actors)">RunScript(plugin.video.themoviedb.helper,add_query=$INFO[ListItem.Label],type=person,call_auto=1130,return)</oninfo>
				<!-- <movement>7</movement> -->
				<preloaditems>4</preloaditems>
				<orientation>horizontal</orientation>
				<viewtype label="Bello">List</viewtype>
				<pagecontrol>6066</pagecontrol>
				<scrolltime tween="quadratic" easing="out">300</scrolltime>
				<animation effect="slide" start="0,0" end="0,68" condition="Container.Content(Episodes) | [Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]">Conditional</animation>
				<visible>$EXP[BelloViewVideos_66]</visible>
				<itemlayout condition="!Container.Content(Episodes)" width="171">
					<include>HomeWidgets_Poster_ItemLayout</include>
				</itemlayout>
				<itemlayout condition="Container.Content(Episodes)" width="299">
					<include>HomeWidgets_Landscape_ItemLayout</include>
				</itemlayout>
				<focusedlayout condition="!Container.Content(Episodes)" width="171">
					<include>HomeWidgets_Poster_Focusedlayout</include>
				</focusedlayout>
				<focusedlayout condition="Container.Content(Episodes)" width="299">
					<include>HomeWidgets_Landscape_Focusedlayout</include>
				</focusedlayout>
			</control>
			<!-- Navigation Arrows -->
			<control type="image">
				<left>-4</left>
				<top>310</top>
				<include>WidgetsArrow_Left</include>
				<visible>Container(66).HasPrevious</visible>
				<animation effect="slide" start="0,0" end="0,34" condition="Container.Content(Episodes) | [Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]">Conditional</animation>
			</control>
			<control type="image">
				<left>1232</left>
				<top>310</top>
				<include>WidgetsArrow_Right</include>
				<visible>Container(66).HasNext</visible>
				<animation effect="slide" start="0,0" end="0,34" condition="Container.Content(Episodes) | [Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]">Conditional</animation>
			</control>
			<control type="scrollbar" id="6066">
				<left>45</left>
				<top>457</top>
				<width>1178</width>
				<height>6</height>
				<texturesliderbackground></texturesliderbackground>
				<texturesliderbar border="14,0,14,0">views/scrollbar/scrollbar_horizontal.png</texturesliderbar>
				<texturesliderbarfocus border="14,0,14,0">views/scrollbar/scrollbar_horizontal.png</texturesliderbarfocus>
				<textureslidernib></textureslidernib>
				<textureslidernibfocus></textureslidernibfocus>
				<onup>66</onup>
				<ondown>9555</ondown>
				<showonepage>false</showonepage>
				<orientation>horizontal</orientation>
				<animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(6066) + !Container.Scrolling">Conditional</animation>
			</control>
		</control>
		<control type="group">
			<left>45</left>
			<top>485</top>
			<visible>Control.IsVisible(66)</visible>
			<include>HomeMenu_OpenCloseSlideAnimation</include>
			<include content="HomeWidgetsTitleLabel">
				<param name="width" value="850"/>
				<param name="label" value="$VAR[ListItem_LabelVar]"/>
			</include>
			<!-- Sublabel Info -->
			<control type="grouplist">
				<left>2</left>
				<top>42</top>
				<width>850</width>
				<height>30</height>
				<itemgap>8</itemgap>
				<orientation>horizontal</orientation>
				<control type="group">
					<width>115</width>
					<visible>!$EXP[MoviesSetsCondition] + !Container.Content(Seasons) + !String.IsEmpty(ListItem.Title)</visible>
					<control type="image">
						<left>0</left>
						<top>-1</top>
						<width>118</width>
						<height>26</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$VAR[StarRating]</texture>
					</control>
				</control>
				<include content="HomeWidgetsSubIcon">
					<param name="width" value="36"/>
					<param name="icon" value="flags/sets/sets.png"/>
					<param name="visible" value="$EXP[MoviesSetsCondition] + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)"/>
				</include>
				<include>SmallDownInfo_Top250</include>
				<include content="HomeWidgetsSubLabel">
					<param name="label" value="$VAR[NetFlixSubLabelInfo]"/>
				</include>
				<include content="HomeWidgetsSubIcon">
					<param name="width" value="56"/>
					<param name="icon" value="$INFO[ListItem.mpaa,flags/mpaa/tv/,.png]"/>
					<param name="visible" value="[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + !ListItem.IsParentFolder + !String.IsEmpty(ListItem.Premiered)"/>
				</include>
				<include content="HomeWidgetsSubIcon">
					<param name="width" value="56"/>
					<param name="icon" value="$VAR[MPAAFilmRating]"/>
					<param name="visible" value="[Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Movie)] | [Container.Content(Movies) + !$EXP[MoviesSetsCondition]] + !ListItem.IsParentFolder"/>
				</include>
				<include content="HomeWidgetsSubLabel">
					<param name="label" value="$VAR[ListItemDurationVar]"/>
					<param name="visible" value="[Container.Content(Movies) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Duration)"/>
				</include>
				<include content="HomeWidgetsSubIcon">
					<param name="icon" value="$VAR[ViewsDef3DFlags]"/>
					<param name="visible" value="Container.Content(Movies) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)"/>
				</include>
				<include content="HomeWidgetsSubLabel">
					<param name="label" value="$VAR[NetFlixSeasonsLabel]"/>
					<param name="visible" value="Container.Content(TVShows) + !String.IsEmpty(ListItem.Property(TotalSeasons))"/>
				</include>
				<control type="group">
					<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) + Integer.IsGreater(ListItem.Property(unWatchedEpisodes),0) + [Container.Content(TVShows) | Container.Content(Seasons)]</visible>
					<include content="HomeWidgetsSubIcon">
						<param name="width" value="52"/>
						<param name="icon" value="views/other/episodes_count.png"/>
					</include>
					<include content="HomeWidgetsSubLabel">
						<param name="width" value="52"/>
						<param name="align" value="center"/>
						<param name="font" value="FontSize_19"/>
						<param name="label" value="$INFO[ListItem.Property(unWatchedEpisodes)]"/>
					</include>
				</control>
			</control>
			<!-- Plot Info -->
			<control type="group">
				<top>75</top>
				<include content="HomeWidgetsSubLabel">
					<param name="height" value="30"/>
					<param name="width" value="1190"/>
					<param name="font" value="FontSize_20B"/>
					<param name="label" value="$INFO[ListItem.Genre]"/>
					<param name="visible" value="!Container.Content(Episodes) + ![Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]"/>
				</include>
				<include content="HomeWidgetsSubLabel">
					<param name="height" value="30"/>
					<param name="width" value="1190"/>
					<param name="font" value="FontSize_20B"/>
					<param name="label" value="$INFO[ListItem.TVShowTitle]"/>
					<param name="visible" value="Container.Content(Episodes) | [Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]"/>
				</include>
				<include content="PlotTextbox">
					<param name="top" value="20"/>
					<param name="width" value="1190"/>
					<param name="height" value="60"/>
					<param name="font" value="TextboxFont_22"/>
					<param name="visible" value="!$EXP[MoviesSetsCondition]"/>
				</include>
				<include content="PlotTextbox">
					<param name="top" value="0"/>
					<param name="width" value="1190"/>
					<param name="height" value="90"/>
					<param name="font" value="TextboxFont_22"/>
					<param name="visible" value="$EXP[MoviesSetsCondition]"/>
				</include>
			</control>
			<!-- Media Flaggs -->
			<control type="grouplist">
				<visible>[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + !ListItem.IsParentFolder + !$EXP[MoviesSetsCondition]</visible>
				<left>0</left>
				<top>5</top>
				<width>1188</width>
				<align>right</align>
				<aligny>center</aligny>
				<itemgap>5</itemgap>
				<orientation>horizontal</orientation>
				<include>VideoTypeFlags</include>
				<include>VideoResFlags</include>
				<include>AudioChannelsFlags</include>
				<include>VideoLanguageFlags</include>
			</control>
		</control>
	</include>


	<!-- ================================== -->
	<!-- ==== Bello View Generic "660" ==== -->
	<!-- ================================== -->
	<include name="BelloView_Generic">
		<control type="image">
			<top>48</top>
			<include>FullscreenDimensions</include>
			<texture background="true">windows/home/menu_overlay.png</texture>
			<include>HomeMenu_OpenCloseSlideAnimation</include>
			<visible>$EXP[ContainerIsUpdating]</visible>
			<visible>Control.IsVisible(660) + !String.IsEmpty(ListItem.Label)</visible>
		</control>
		<control type="group">
			<visible>Control.IsVisible(660)</visible>
			<include>OpenCloseSlideAnimationTwo</include>
			<control type="fixedlist" id="660">
				<left>45</left>
				<top>262</top>
				<width>1189</width>
				<height>256</height>
				<onleft>660</onleft>
				<onright>660</onright>
				<onup>9111</onup>
				<ondown>60660</ondown>
				<oninfo condition="Container.Content(Directors)">RunScript(plugin.video.themoviedb.helper,add_query=$INFO[ListItem.Label],type=person,call_auto=1130,return)</oninfo>
				<!-- <movement>7</movement> -->
				<preloaditems>4</preloaditems>
				<orientation>horizontal</orientation>
				<viewtype label="Bello">List</viewtype>
				<pagecontrol>60660</pagecontrol>
				<scrolltime tween="quadratic" easing="out">300</scrolltime>
				<animation effect="slide" start="0,0" end="0,-46" condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),2) + $EXP[GenericVideoFilesCondition] + !Container.Content(Addons)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,21" condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),3) + $EXP[GenericVideoFilesCondition] + !Container.Content(Addons)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,21" condition="Container.Content(Images) + !Container.Content(Addons)">Conditional</animation>
				<visible>$EXP[BelloViewGeneric_660]</visible>

				<itemlayout condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),1) + $EXP[GenericVideoFilesCondition] + ![Container.Content(Images) | String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)]" height="256" width="199.5">
					<include content="HomeWidgets_Icon">
						<param name="art_type" value="$VAR[HomeWidgetsIcons]"/>
					</include>
				</itemlayout>
				<itemlayout condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),2) + $EXP[GenericVideoFilesCondition] + ![Container.Content(Addons) | String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)]" width="171">
					<include>HomeWidgets_Poster_ItemLayout</include>
				</itemlayout>
				<itemlayout condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),3) + $EXP[GenericVideoFilesCondition] + ![Container.Content(Addons) | String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)]" width="299">
					<include>HomeWidgets_Landscape_ItemLayout</include>
				</itemlayout>
				<itemlayout condition="Container.Content(Images)" width="299">
					<include>HomeWidgets_Landscape_ItemLayout</include>
				</itemlayout>
				<itemlayout condition="String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/)" width="199.5">
					<include content="HomeWidgets_Icon">
						<param name="art_type" value="$VAR[ThumbnailsArt]"/>
						<param name="fallback" value="DefaultGenre.png"/>
					</include>
				</itemlayout>
				<itemlayout condition="String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)" height="256" width="199.5">
					<include content="HomeWidgets_Icon">
						<param name="art_type" value="$VAR[ThumbnailsArt]"/>
						<param name="fallback" value="DefaultMusicGenres.png"/>
					</include>
				</itemlayout>

				<focusedlayout condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),1) + $EXP[GenericVideoFilesCondition] + ![Container.Content(Images) | String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)]" height="256" width="199.5">
					<include content="HomeWidgets_Icon">
						<param name="art_type" value="$VAR[HomeWidgetsIcons]"/>
						<param name="colordiffuse" value="$VAR[ColorDiffuseThumbs]"/>
					</include>
					<include>HomeWidgets_FocusTexture</include>
				</focusedlayout>
				<focusedlayout condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),2) + $EXP[GenericVideoFilesCondition] + ![Container.Content(Addons) | String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)]" width="171">
					<include>HomeWidgets_Poster_Focusedlayout</include>
				</focusedlayout>
				<focusedlayout condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),3) + $EXP[GenericVideoFilesCondition] + ![Container.Content(Addons) | String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)]" width="299">
					<include>HomeWidgets_Landscape_Focusedlayout</include>
				</focusedlayout>
				<focusedlayout condition="Container.Content(Images)" width="299">
					<include>HomeWidgets_Landscape_Focusedlayout</include>
				</focusedlayout>
				<focusedlayout condition="String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.IsEqual(Container.FolderPath,videodb://tvshows/genres/)" width="199.5">
					<include content="HomeWidgets_Icon">
						<param name="art_type" value="$VAR[ThumbnailsArt]"/>
						<param name="fallback" value="DefaultGenre.png"/>
						<param name="colordiffuse" value="$VAR[ColorDiffuseThumbs]"/>
					</include>
					<include>HomeWidgets_FocusTexture</include>
				</focusedlayout>
				<focusedlayout condition="String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)" height="256" width="199.5">
					<include content="HomeWidgets_Icon">
						<param name="art_type" value="$VAR[ThumbnailsArt]"/>
						<param name="fallback" value="DefaultMusicGenres.png"/>
						<param name="colordiffuse" value="$VAR[ColorDiffuseThumbs]"/>
					</include>
					<include>HomeWidgets_FocusTexture</include>
				</focusedlayout>
			</control>

			<!-- Navigation Arrows -->
			<control type="group">
				<left>-4</left>
				<top>332</top>
				<animation effect="slide" start="0,0" end="0,-18" condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),2) + $EXP[GenericVideoFilesCondition] + !Container.Content(Addons)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,11" condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),3) + $EXP[GenericVideoFilesCondition] + !Container.Content(Addons)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,11" condition="Container.Content(Images) + !Container.Content(Addons)">Conditional</animation>
				<control type="image">
					<left>0</left>
					<include>WidgetsArrow_Left</include>
					<visible>Container(660).HasPrevious</visible>
				</control>
				<control type="image">
					<left>1236</left>
					<include>WidgetsArrow_Right</include>
					<visible>Container(660).HasNext</visible>
				</control>
			</control>
			<control type="scrollbar" id="60660">
				<left>45</left>
				<top>458</top>
				<width>1189</width>
				<height>6</height>
				<texturesliderbackground></texturesliderbackground>
				<texturesliderbar border="14,0,14,0">views/scrollbar/scrollbar_horizontal.png</texturesliderbar>
				<texturesliderbarfocus border="14,0,14,0">views/scrollbar/scrollbar_horizontal.png</texturesliderbarfocus>
				<textureslidernib></textureslidernib>
				<textureslidernibfocus></textureslidernibfocus>
				<onup>660</onup>
				<ondown>9555</ondown>
				<showonepage>false</showonepage>
				<orientation>horizontal</orientation>
				<animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(60660) + !Container.Scrolling">Conditional</animation>
			</control>
		</control>
		<control type="group">
			<left>45</left>
			<top>485</top>
			<visible>Control.IsVisible(660)</visible>
			<include>HomeMenu_OpenCloseSlideAnimation</include>
			<include content="HomeWidgetsTitleLabel">
				<param name="width" value="1190"/>
				<param name="label" value="$VAR[ListItem_LabelVar]"/>
			</include>
			<include content="HomeWidgetsSubLabel">
				<param name="top" value="35"/>
				<param name="width" value="1190"/>
				<param name="label" value="$VAR[ListItem_SubLabelVar]"/>
			</include>
			<!-- Plot Info -->
			<control type="group">
				<top>70</top>
				<animation effect="slide" end="0,-10" condition="String.IsEmpty(Control.GetLabel(63))">Conditional</animation>
				<control type="label" id="63">
					<height>40</height>
					<width>1190</width>
					<textcolor>viewsinfo</textcolor>
					<font>FontSize_20B</font>
					<label>$VAR[ListItem_SubLabelTwoVar]</label>
				</control>
				<include content="PlotTextbox">
					<param name="top" value="25"/>
					<param name="width" value="1190"/>
					<param name="height" value="60"/>
					<param name="font" value="TextboxFont_22"/>
				</include>
			</control>
		</control>
	</include>

</includes>

