<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- =========================== -->
	<!-- ==== Netflix View "59" ==== -->
	<!-- =========================== -->
	<include name="NetflixView_Videos">
		<control type="group">
			<left>45</left>
			<top>420</top>
			<visible>Control.IsVisible(59)</visible>
			<include>HomeMenu_OpenCloseSlideAnimation</include>
			<control type="fixedlist" id="59">
				<left>0</left>
				<top>0</top>
				<width>1280</width>
				<height>800</height>
				<onleft>59</onleft>
				<onright>59</onright>
				<onup>9111</onup>
				<ondown>6059</ondown>
				<oninfo condition="$EXP[MoviesSetsCondition]">SetProperty(ShowTextViewer,1,home)</oninfo>
				<oninfo condition="$EXP[MoviesSetsCondition]">RunScript(script.embuary.helper,action=textviewer,header=$INFO[ListItem.Label],message='"$VAR[GlobalPlotDescription]"')</oninfo>
				<viewtype label="Netflix">List</viewtype>
				<scrolltime tween="Quadratic" easing="out">300</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<focusposition>0</focusposition>
				<pagecontrol>6059</pagecontrol>
				<visible>$EXP[NetflixViewVideos_59]</visible>
				<itemlayout condition="Container.Content(Movies) | Container.Content(Sets)" width="149.5">
					<control type="image">
						<width>142</width>
						<height>203</height>
						<texture border="30">views/other/panel.png</texture>
					</control>
					<control type="image">
						<width>142</width>
						<height>203</height>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" fallback="thumbs/fallback_poster_tp.png">$VAR[VarArtPoster]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<top>204</top>
						<width>142</width>
						<height>203</height>
						<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/panel.png</texture>
					</control>
					<control type="image">
						<top>204</top>
						<width>142</width>
						<height>203</height>
						<texture background="true" flipy="true" diffuse="views/netflix/reflection_diffuse.png" fallback="thumbs/fallback_poster_tp.png">$VAR[VarArtPoster]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<width>142</width>
						<height>203</height>
						<texture>overlays/unwatched/thumbs/UnWatched_Poster.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
				</itemlayout>
				<itemlayout condition="Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)" width="299.5">
					<control type="image">
						<left>0</left>
						<top>38</top>
						<width>291</width>
						<height>165</height>
						<texture border="30">views/other/panel.png</texture>
					</control>
					<control type="image">
						<left>0</left>
						<top>38</top>
						<width>291</width>
						<height>165</height>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[NetFlixLandscapeThumb]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<left>0</left>
						<top>204</top>
						<width>291</width>
						<height>165</height>
						<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/panel.png</texture>
					</control>
					<control type="image">
						<left>0</left>
						<top>204</top>
						<width>291</width>
						<height>165</height>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" flipy="true" diffuse="views/netflix/reflection_diffuse.png" fallback="thumbs/fallback_fanart_tp.png">$VAR[NetFlixLandscapeThumb]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<left>0</left>
						<top>38</top>
						<width>291</width>
						<height>165</height>
						<texture>overlays/unwatched/banners/UnWatched_Episodes.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<include content="ThumbnailsOnThumbInfo">
						<param name="left" value="210"/>
						<param name="top" value="162"/>
						<param name="visible" value="String.IsEqual(ListItem.DBType,episode)"/>
					</include>
				</itemlayout>
				<focusedlayout condition="Container.Content(Movies) | Container.Content(Sets)" width="149.5">
					<control type="image">
						<width>142</width>
						<height>203</height>
						<texture border="30">views/other/panel.png</texture>
					</control>
					<control type="image">
						<width>142</width>
						<height>203</height>
						<colordiffuse>$VAR[ColorDiffuseParentFolder]</colordiffuse>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" fallback="thumbs/fallback_poster_tp.png">$VAR[VarArtPoster]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<top>204</top>
						<width>142</width>
						<height>203</height>
						<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/panel.png</texture>
					</control>
					<control type="image">
						<top>204</top>
						<width>142</width>
						<height>203</height>
						<texture background="true" flipy="true" diffuse="views/netflix/reflection_diffuse.png" fallback="thumbs/fallback_poster_tp.png">$VAR[VarArtPoster]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<width>142</width>
						<height>203</height>
						<texture>overlays/unwatched/thumbs/UnWatched_Poster.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
				</focusedlayout>
				<focusedlayout condition="Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)" width="299.5">
					<control type="image">
						<left>0</left>
						<top>38</top>
						<width>291</width>
						<height>165</height>
						<texture border="30">views/other/panel.png</texture>
					</control>
					<control type="image">
						<left>0</left>
						<top>38</top>
						<width>291</width>
						<height>165</height>
							<colordiffuse>$VAR[ColorDiffuseParentFolder]</colordiffuse>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[NetFlixLandscapeThumb]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<left>0</left>
						<top>204</top>
						<width>291</width>
						<height>165</height>
						<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/panel.png</texture>
					</control>
					<control type="image">
						<left>0</left>
						<top>204</top>
						<width>291</width>
						<height>165</height>
						<colordiffuse>$VAR[ColorDiffuseParentFolder]</colordiffuse>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<texture background="true" flipy="true" diffuse="views/netflix/reflection_diffuse.png" fallback="thumbs/fallback_fanart_tp.png">$VAR[NetFlixLandscapeThumb]</texture>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<control type="image">
						<left>0</left>
						<top>38</top>
						<width>291</width>
						<height>165</height>
						<texture>overlays/unwatched/banners/UnWatched_Episodes.png</texture>
						<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
						<bordersize>ThumbsBorderSize</bordersize>
					</control>
					<include content="ThumbnailsOnThumbInfo">
						<param name="left" value="210"/>
						<param name="top" value="162"/>
						<param name="visible" value="String.IsEqual(ListItem.DBType,episode)"/>
					</include>
				</focusedlayout>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>142</width>
				<height>203</height>
				<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<texture border="30">views/other/focus_panel.png</texture>
				<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>204</top>
				<width>142</width>
				<height>203</height>
				<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/panel.png</texture>
				<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>204</top>
				<width>142</width>
				<height>203</height>
				<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/focus_panel.png</texture>
				<visible>Container.Content(Movies) | Container.Content(Sets)</visible>
			</control>

			<control type="image">
				<left>0</left>
				<top>38</top>
				<width>291</width>
				<height>165</height>
				<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<texture border="30">views/other/focus_panel.png</texture>
				<visible>Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>204</top>
				<width>291</width>
				<height>165</height>
				<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/panel.png</texture>
				<visible>Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>204</top>
				<width>291</width>
				<height>165</height>
				<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<texture border="30" flipy="true" diffuse="views/netflix/reflection_diffuse.png">views/other/focus_panel.png</texture>
				<visible>Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)</visible>
			</control>
		</control>

		<control type="group">
			<left>45</left>
			<top>130</top>
			<visible>Control.IsVisible(59)</visible>
			<include>CommonViews_VerticalAnimation</include>
			<control type="image">
				<left>0</left>
				<top>-30</top>
				<width>290</width>
				<height>110</height>
				<fadetime>100</fadetime>
				<aspectratio align="left" aligny="center">keep</aspectratio>
				<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
				<visible>Skin.HasSetting(ShowLogoAsTtile) + !$EXP[MoviesSetsCondition]</visible>
			</control>
			<include content="HomeWidgetsTitleLabel">
				<param name="width" value="550"/>
				<param name="label" value="$VAR[ListItem_LabelVar]"/>
				<param name="visible" value="![Skin.HasSetting(ShowLogoAsTtile) + ![String.IsEmpty(ListItem.Art(clearlogo)) | $EXP[MoviesSetsCondition]]] + !ListItem.IsParentFolder"/>
			</include>
			<!-- Sublabel Info -->
			<control type="grouplist">
				<left>2</left>
				<top>40</top>
				<width>850</width>
				<height>30</height>
				<itemgap>8</itemgap>
				<orientation>horizontal</orientation>
				<animation effect="slide" start="0,0" end="0,55" condition="[Skin.HasSetting(ShowLogoAsTtile) + ![String.IsEmpty(ListItem.Art(clearlogo)) | $EXP[MoviesSetsCondition]]]">Conditional</animation>
				<control type="group">
					<width>115</width>
					<visible>!$EXP[MoviesSetsCondition] + !Container.Content(Seasons) + !String.IsEmpty(ListItem.Title)</visible>
					<control type="image">
						<left>0</left>
						<top>-1</top>
						<width>118</width>
						<height>26</height>
						<aspectratio>keep</aspectratio>
						<texture background="true">$VAR[StarRating]</texture>
					</control>
				</control>
				<include content="HomeWidgetsSubIcon">
					<param name="width" value="36"/>
					<param name="icon" value="flags/sets/sets.png"/>
					<param name="visible" value="$EXP[MoviesSetsCondition] + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)"/>
				</include>
				<include>SmallDownInfo_Top250</include>
				<include content="HomeWidgetsSubLabel">
					<param name="label" value="$VAR[NetFlixSubLabelInfo]"/>
				</include>
				<include content="HomeWidgetsSubIcon">
					<param name="width" value="56"/>
					<param name="icon" value="$INFO[ListItem.mpaa,flags/mpaa/tv/,.png]"/>
					<param name="visible" value="[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + !ListItem.IsParentFolder + !String.IsEmpty(ListItem.Premiered)"/>
				</include>
				<include content="HomeWidgetsSubIcon">
					<param name="width" value="56"/>
					<param name="icon" value="$VAR[MPAAFilmRating]"/>
					<param name="visible" value="[Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Movie)] | [Container.Content(Movies) + !$EXP[MoviesSetsCondition]] + !ListItem.IsParentFolder"/>
				</include>
				<include content="HomeWidgetsSubLabel">
					<param name="label" value="$VAR[ListItemDurationVar]"/>
					<param name="visible" value="[Container.Content(Movies) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Duration)"/>
				</include>
				<include content="HomeWidgetsSubIcon">
					<param name="icon" value="$VAR[ViewsDef3DFlags]"/>
					<param name="visible" value="Container.Content(Movies) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)"/>
				</include>
				<include content="HomeWidgetsSubLabel">
					<param name="label" value="$VAR[NetFlixSeasonsLabel]"/>
					<param name="visible" value="Container.Content(TVShows) + !String.IsEmpty(ListItem.Property(TotalSeasons))"/>
				</include>
				<control type="group">
					<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) + Integer.IsGreater(ListItem.Property(unWatchedEpisodes),0) + [Container.Content(TVShows) | Container.Content(Seasons)]</visible>
					<include content="HomeWidgetsSubIcon">
						<param name="width" value="52"/>
						<param name="icon" value="views/other/episodes_count.png"/>
					</include>
					<include content="HomeWidgetsSubLabel">
						<param name="width" value="52"/>
						<param name="align" value="center"/>
						<param name="font" value="FontSize_19"/>
						<param name="label" value="$INFO[ListItem.Property(unWatchedEpisodes)]"/>
					</include>
				</control>
			</control>
		</control>
		<!-- Plot Info -->
		<control type="group">
			<left>45</left>
			<top>225</top>
			<visible>Control.IsVisible(59)</visible>
			<include>CommonViews_VerticalAnimation</include>
			<include content="HomeWidgetsSubLabel">
				<param name="width" value="450"/>
				<param name="font" value="FontSize_20B"/>
				<param name="label" value="$INFO[ListItem.Genre]"/>
				<param name="visible" value="![Container.Content(Episodes) | Container.Content(Seasons)] + ![Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)] + ![Skin.HasSetting(ShowLogoAsTtile) + !String.IsEmpty(ListItem.Art(clearlogo))]"/>
			</include>
			<include content="HomeWidgetsSubLabel">
				<param name="width" value="450"/>
				<param name="font" value="FontSize_20B"/>
				<param name="label" value="$INFO[ListItem.TVShowTitle]"/>
				<param name="visible" value="[[Container.Content(Episodes) | Container.Content(Seasons) | [Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]] + !String.StartsWith(Container.FolderPath,plugin://plugin.video)] + ![Skin.HasSetting(ShowLogoAsTtile) + !String.IsEmpty(ListItem.Art(clearlogo))]"/>
			</include>
			<include content="PlotTextbox">
				<param name="top" value="30"/>
				<param name="width" value="450"/>
				<param name="height" value="145"/>
				<param name="font" value="TextboxFont_22"/>
				<param name="visible" value="Container.Content(Movies) + !$EXP[MoviesSetsCondition]"/>
			</include>
			<include content="PlotTextbox">
				<param name="top" value="35"/>
				<param name="width" value="450"/>
				<param name="height" value="175"/>
				<param name="font" value="TextboxFont_22"/>
				<param name="visible" value="Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)"/>
			</include>
			<include content="PlotTextbox">
				<param name="top" value="-10"/>
				<param name="width" value="450"/>
				<param name="height" value="175"/>
				<param name="font" value="TextboxFont_22"/>
				<param name="visible" value="$EXP[MoviesSetsCondition]"/>
			</include>

			<control type="scrollbar" id="6059">
				<left>-2</left>
				<top>408</top>
				<width>1188</width>
				<height>6</height>
				<texturesliderbackground></texturesliderbackground>
				<texturesliderbar border="14,0,14,0">views/scrollbar/scrollbar_horizontal.png</texturesliderbar>
				<texturesliderbarfocus border="14,0,14,0">views/scrollbar/scrollbar_horizontal.png</texturesliderbarfocus>
				<textureslidernib></textureslidernib>
				<textureslidernibfocus></textureslidernibfocus>
				<onup>59</onup>
				<ondown>9555</ondown>
				<showonepage>false</showonepage>
				<orientation>horizontal</orientation>
				<animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(6059) + !Container.Scrolling">Conditional</animation>
			</control>
		</control>
	</include>

</includes>
