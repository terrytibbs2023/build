<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="defaults.xml" />
	<include file="IncludesAnimations.xml" />
	<include file="IncludesBackgrounds.xml" />
	<include file="IncludesHome.xml" />
	<include file="IncludesViews.xml" />
	<include file="IncludesFlags.xml" />
	<include file="IncludesMenus.xml" />
	<include file="IncludesNextAiredInfo.xml" />
	<include file="IncludesNotifications.xml" />
	<include file="IncludesHomeWidgets.xml" />
	<include file="IncludesStaticContent.xml" />
	<include file="IncludesWeather.xml" />
	<include file="IncludesPVR.xml" />
	<include file="script-skinshortcuts-includes.xml" />
	<include file="IncludesDialogs.xml" />
	<include file="IncludesInfoWindows.xml" />
	<include file="IncludesOSD.xml" />

	<constant name="FanartCrossfadeTime">300</constant>
	<constant name="IconCrossfadeTime">250</constant>
	<constant name="ButtonsLabelsDisableFade">40</constant>
	<constant name="ButtonsLabelsFade">70</constant>
	<constant name="ButtonsLabelsZoom">90</constant>
	<constant name="ButtonsLabelsTime">200</constant>
	<constant name="ThumbsBorderSize">8</constant>
	<constant name="AnimationsSlide">45</constant>
	<constant name="AnimationsSlideMinus">-45</constant>
	<constant name="AnimationsSlideTime">350</constant>
	<constant name="AnimationsFadeTime">300</constant>
	<constant name="AnimationsDelayTime">0</constant>

	<include name="BackgroundItems">
		<include>BackgroundContent</include>
		<include>GlobalFanart</include>
		<include>BackgroundDarkness</include>
	</include>

	<include name="BackgroundItemsPVR">
		<include>BackgroundContent</include>
		<include>BackgroundDarkness</include>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/pvr/pvr_vignette.png</texture>
			<include>FanartFade</include>
			<visible>![Window.IsActive(PlayerControls) + Player.HasMedia]</visible>
		</control>
	</include>

	<include name="CommonItems">
		<include>CommonDialogsFadeOutBG</include>
		<include>CommonScrollingLetters</include>
		<include>CommonNowPlaying</include>
		<include>CommonPageCount</include>
	</include>

	<include name="CommonItemsPVR">
		<include>CommonItems</include>
		<include>PVRControlsMenu</include>
		<include>CommonWeatherAndClock</include>
	</include>

	<include name="FullscreenDimensions">
		<width>1280</width>
		<height>720</height>
	</include>

	<include name="CommonDialogsFadeOutBG">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/bg/bg_overlay.png</texture>
			<include>FanartFade</include>
			<visible>[ControlGroup(9000).HasFocus
				| [Window.IsActive(ShutDownmenu) + !Window.IsVisible(Favourites)]
				| [Window.IsActive(ContextMenu) + ![Window.IsVisible(filemanager) | Window.IsVisible(musicplaylisteditor) | Window.IsVisible(pvrchannelmanager) | Window.IsVisible(LockSettings) | Window.IsActive(Favourites)]]
				| Window.IsActive(FileBrowser)
				| Window.IsActive(YesNodialog)
				| Window.IsActive(OKDialog)
				| [Window.IsActive(ProgressDialog) + ![Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogInfo.xml)]]
				| Window.IsActive(VirtualKeyboard)
				| Window.IsActive(NumericInput)
				| Window.IsActive(MediaFilter)
				| Window.IsActive(ProfileSettings)
				| Window.IsActive(LockSettings)
				| Window.IsActive(ContentSettings)
				| Window.IsActive(DialogSettings.xml)
				| Window.IsActive(Selectdialog)
				| Window.IsActive(DialogSelect.xml)
				| [Window.IsActive(TextViewer) + ![Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | String.IsEqual(Window(Home).Property(ShowTextViewer),1)]]
				| Window.IsActive(MediaSource)
				| Window.IsActive(PictureInfo)
				| Window.IsActive(SmartPlaylistEditor)
				| Window.IsActive(SmartPlaylistRule)
				| Window.IsActive(PeripheralSettings)
				| Window.IsActive(script-RSS_Editor.xml)
				| Window.IsActive(script-skinshortcuts.xml)
				| Window.IsActive(script-Maps Browser-dialog.xml)
				| Window.IsActive(1110)
				| Window.IsActive(1117)
				| Window.IsActive(1118)
				| Window.IsActive(1119)
				| Window.IsActive(1190)
				| Window.IsActive(PVRTimerSetting)
				| Window.IsActive(PVRGuideSearch)
				| Window.IsActive(PVRChannelManager)
				| Window.IsActive(PVRGroupManager)
			| String.IsEqual(Window.Property(resetbusy),show)] + ![Window.IsActive(MovieInformation) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(AddonInformation)]</visible>
		</control>
	</include>

	<include name="TopMenuButton">
		<height>66</height>
		<width min="0" max="860">auto</width>
		<font>FontSize_22</font>
		<textcolor>viewsinfo</textcolor>
		<focusedcolor>white</focusedcolor>
		<disabledcolor>disabled</disabledcolor>
		<texturefocus colordiffuse="$VAR[Text.GlobalColor]">dialogs/menus/topmenu_underline.png</texturefocus>
		<alttexturefocus colordiffuse="$VAR[Text.GlobalColor]">dialogs/menus/topmenu_underline.png</alttexturefocus>
		<textureradioonfocus></textureradioonfocus>
		<textureradioonnofocus></textureradioonnofocus>
		<textureradioofffocus></textureradioofffocus>
		<textureradiooffnofocus></textureradiooffnofocus>
		<textureradioondisabled></textureradioondisabled>
		<textureradiooffdisabled></textureradiooffdisabled>
		<radiowidth></radiowidth>
		<radioheight></radioheight>
		<pulseonselect>false</pulseonselect>
	</include>
	<include name="TopBigLabel">
		<height>51</height>
		<width>auto</width>
		<font>FontSize_40</font>
	</include>
	<include name="TopSmallLabel">
		<height>66</height>
		<width>auto</width>
		<font>FontSize_22</font>
		<textcolor>viewsinfo</textcolor>
	</include>

	<include name="HiddenListContainer">
		<left>-5000</left>
		<top>-5000</top>
		<width>1</width>
		<height>1</height>
		<itemlayout/>
		<focusedlayout/>
	</include>

	<include name="HiddenItem">
		<left>-5000</left>
		<top>-5000</top>
		<width>1</width>
		<height>1</height>
		<font></font>
		<texture></texture>
		<texturefocus></texturefocus>
		<textureradioonfocus></textureradioonfocus>
		<textureradioonnofocus></textureradioonnofocus>
		<textureradioofffocus></textureradioofffocus>
		<textureradiooffnofocus></textureradiooffnofocus>
		<textureup></textureup>
		<texturedown></texturedown>
		<textureupfocus></textureupfocus>
		<texturedownfocus></texturedownfocus>
		<texturebg></texturebg>
		<midtexture></midtexture>
	</include>


	<!-- ======== -->
	<!-- Settings -->
	<!-- ======== -->
	<include name="SettingsCategoryContentInfo">
		<control type="group">
			<left>45</left>
			<top>25</top>
			<include>SettingsSlideAnimations</include>
			<include>ShutdownMenuAnimation</include>
			<include>InfoDialogs_ContentInfoAnimation</include>
			<include>VisibleHiddenSlideAnimation</include>
			<visible>!ControlGroup(9000).HasFocus</visible>
			<!-- Content Info -->
			<control type="grouplist">
				<include content="CommonTopInfoGroupList">
					<param name="include" value="Logo"/>
				</include>
				<control type="label">
					<include>TopBigLabel</include>
					<label>$LOCALIZE[5]</label>
				</control>
				<control type="label">
					<include>TopSmallLabel</include>
					<label>$VAR[SettingsCategoryLabels]</label>
					<visible>Window.IsActive(Settings)</visible>
				</control>
				<control type="label">
					<include>TopSmallLabel</include>
					<label>$INFO[Control.GetLabel(20)]</label>
					<visible>Window.IsActive(SettingsCategory.xml)</visible>
				</control>
			</control>
		</control>

		<control type="group" id="9000">
			<left>30</left>
			<top>25</top>
			<include>ShutdownMenuAnimation</include>
			<include>OptionsTopMenuAnimation</include>
			<include>OptionsTopMenuHeader</include>
			<control type="grouplist" id="9111">
				<onleft>9111</onleft>
				<onright condition="!Window.IsVisible(SkinSettings) + !Window.IsVisible(EventLog)">9001</onright>
				<onright condition="Window.IsVisible(SkinSettings)">7000</onright>
				<onright condition="Window.IsVisible(EventLog)">570</onright>
				<include>OptionsTopMenuVars</include>
				<!-- Settings Category -->
				<control type="button" id="991">
					<description>Settings Level</description>
					<label>$INFO[Control.GetLabel(20),$LOCALIZE[31167]  ]</label>
					<onclick>SettingsLevelChange</onclick>
					<visible>Window.IsVisible(SettingsCategory.xml)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<control type="button" id="992">
					<description>Reset Settings Level</description>
					<label>$LOCALIZE[31168]</label>
					<onclick>SetFocus(9001)</onclick>
					<onclick>SettingsReset</onclick>
					<visible>Window.IsVisible(SettingsCategory.xml)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<!-- Skin Settings -->
				<control type="button" id="993">
					<description>Reset Skin</description>
					<label>$LOCALIZE[31169]</label>
					<onclick>SetFocus(7000)</onclick>
					<onclick>ActivateWindow(1117)</onclick>
					<visible>Window.IsVisible(SkinSettings)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<!-- EventLog -->
				<control type="togglebutton" id="994">
					<description>EventLog Sort asc</description>
					<label>$LOCALIZE[21429]: $LOCALIZE[584]</label>
					<altlabel>$LOCALIZE[21429]: $LOCALIZE[585]</altlabel>
					<usealttexture>Container.SortDirection(Ascending)</usealttexture>
					<onclick>SendClick(4)</onclick>
					<visible>Window.IsVisible(EventLog)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<control type="button" id="995">
					<description>EventLog Level</description>
					<label>$INFO[Control.GetLabel(21)]</label>
					<onclick>SendClick(21)</onclick>
					<visible>Window.IsVisible(EventLog)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<control type="button" id="996">
					<description>EventLog Clear</description>
					<label>$LOCALIZE[192]</label>
					<onclick>SendClick(20)</onclick>
					<visible>Window.IsVisible(EventLog)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<control type="togglebutton" id="997">
					<description>EventLog current level</description>
					<label>$LOCALIZE[14120]: $LOCALIZE[16039]</label>
					<altlabel>$LOCALIZE[14120]: $LOCALIZE[16041]</altlabel>
					<onclick>SendClick(22)</onclick>
					<visible>Window.IsVisible(EventLog)</visible>
					<include>TopLeftMenusButton</include>
				</control>
				<include>OptionsTopMenuEnd</include>
			</control>
		</control>
	</include>

	<include name="AddonSettingsPanel">
		<control type="group">
			<left>170</left>
			<top>148</top>
			<control type="image">
				<width>943</width>
				<height>436</height>
				<texture border="59">views/other/panel.png</texture>
			</control>
			<control type="image">
				<left>12</left>
				<top>12</top>
				<width>262</width>
				<height>412</height>
				<texture border="49">thumbs/thumb_border.png</texture>
			</control>
			<control type="image">
				<left>274</left>
				<top>12</top>
				<width>657</width>
				<height>412</height>
				<texture border="49">thumbs/thumb_border.png</texture>
			</control>
			<control type="label" id="$PARAM[headlabel_id]">
				<description>header label</description>
				<left>5</left>
				<top>-45</top>
				<width>920</width>
				<height>45</height>
				<font>FontSize_34B</font>
				<textcolor>viewsinfo</textcolor>
				<label>$PARAM[headlabel]</label>
			</control>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">windows/settings/addon_settings_separators.png</texture>
		</control>
	</include>

	<include name="SettingsPanel">
		<control type="image">
			<left>78</left>
			<top>128</top>
			<width>1127</width>
			<height>488</height>
			<texture border="59">views/other/panel.png</texture>
		</control>
		<control type="image">
			<left>90</left>
			<top>139</top>
			<width>307</width>
			<height>412</height>
			<texture border="19">thumbs/thumb_border.png</texture>
		</control>
		<control type="image">
			<left>397</left>
			<top>139</top>
			<width>796</width>
			<height>412</height>
			<texture border="19">thumbs/thumb_border.png</texture>
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$PARAM[seperators]</texture>
		</control>
	</include>

	<include name="SettingsHeaderAndFooter">
		<control type="label">
			<description>Header Categories</description>
			<left>85</left>
			<top>85</top>
			<width>305</width>
			<height>40</height>
			<font>FontSize_34B</font>
			<textcolor>viewsinfo</textcolor>
			<align>right</align>
			<label>$VAR[SettingsCategoryLabels]</label>
		</control>
		<control type="label">
			<description>Header Settings</description>
			<left>407</left>
			<top>85</top>
			<width>772</width>
			<height>40</height>
			<font>FontSize_34B</font>
			<textcolor>viewsinfo</textcolor>
			<label>$PARAM[settings_label]</label>
		</control>
		<control type="label">
			<description>Description Area</description>
			<left>95</left>
			<top>563</top>
			<width>1090</width>
			<height>35</height>
			<textcolor>disabled</textcolor>
			<font>TextboxFont_18B</font>
			<wrapmultiline>true</wrapmultiline>
			<label>$PARAM[description_label]</label>
		</control>
	</include>

	<include name="SettingsButtonLeft">
		<description>Default Category Button</description>
		<width>295</width>
		<height>50</height>
		<font>FontSize_22</font>
		<texturefocus border="1">windows/settings/settings_left_fo.png</texturefocus>
		<texturenofocus></texturenofocus>
		<align>right</align>
		<textwidth>250</textwidth>
		<textoffsetx>10</textoffsetx>
	</include>
	<include name="SettingsButton">
		<description>Default Button</description>
		<width>784</width>
		<height>50</height>
		<font>FontSize_22</font>
		<texturefocus border="1">windows/settings/settings_right_fo.png</texturefocus>
		<texturenofocus></texturenofocus>
		<textoffsetx>10</textoffsetx>
	</include>
	<include name="SettingsRadioButton">
		<description>Default RadioButton</description>
		<width>784</width>
		<height>50</height>
		<font>FontSize_22</font>
		<texturefocus border="1">windows/settings/settings_right_fo.png</texturefocus>
		<texturenofocus></texturenofocus>
		<radioposx>754</radioposx>
		<textwidth>730</textwidth>
		<textoffsetx>10</textoffsetx>
	</include>
	<include name="SettingsSpincontrolex">
		<description>Default SpinControlex</description>
		<width>784</width>
		<height>50</height>
		<font>FontSize_22</font>
		<aligny>top</aligny>
		<texturefocus border="1">windows/settings/settings_right_fo.png</texturefocus>
		<spinposx>10</spinposx>
		<textoffsetx>10</textoffsetx>
		<textoffsety>6</textoffsety>
		<reverse>yes</reverse>
	</include>
	<include name="SettingsSliderex">
		<description>Default Slider</description>
		<width>784</width>
		<height>50</height>
		<font>FontSize_22</font>
		<texturefocus border="1">windows/settings/settings_right_fo.png</texturefocus>
		<texturenofocus></texturenofocus>
		<sliderwidth>150</sliderwidth>
		<sliderheight>18</sliderheight>
		<textoffsetx>10</textoffsetx>
	</include>

	<!-- ============== -->
	<!-- Top Left Menus -->
	<!-- ============== -->
	<include name="TopLeftMenusButton">
		<width>405</width>
		<height>36</height>
		<font>FontSize_22</font>
		<textwidth>310</textwidth>
		<textoffsetx>50</textoffsetx>
		<texturefocus>dialogs/menus/topmenus_fo.png</texturefocus>
		<texturenofocus>dialogs/menus/topmenus_nf.png</texturenofocus>
		<alttexturefocus>dialogs/menus/topmenus_fo.png</alttexturefocus>
		<alttexturenofocus>dialogs/menus/topmenus_nf.png</alttexturenofocus>
		<radioposx>335</radioposx>
	</include>
	<include name="TopLeftMenusRadioButton">
		<width>405</width>
		<height>36</height>
		<font>FontSize_22</font>
		<textwidth>280</textwidth>
		<textoffsetx>50</textoffsetx>
		<texturefocus>dialogs/menus/topmenus_fo.png</texturefocus>
		<texturenofocus>dialogs/menus/topmenus_nf.png</texturenofocus>
		<radioposx>335</radioposx>
		<radioposy>-4</radioposy>
	</include>

	<!-- ================== -->
	<!-- Common Now Playing -->
	<!-- ================== -->
	<include name="NowNextPlayingString">
		<control type="label">
			<left>0</left>
			<top>4</top>
			<width>640</width>
			<height>25</height>
			<align>$PARAM[align]</align>
			<label>$PARAM[label]</label>
			<font>NotificationsFont</font>
			<textcolor>$VAR[Text.GlobalColor]</textcolor>
		</control>
	</include>

	<include name="NowPlayingLabel">
		<control type="label">
			<left>0</left>
			<top>25</top>
			<width>640</width>
			<height>25</height>
			<align>$PARAM[align]</align>
			<label>$PARAM[label]</label>
			<font>NotificationsFont</font>
			<textcolor>viewsinfo</textcolor>
		</control>
	</include>

	<include name="CommonNowPlaying">
		<control type="grouplist">
			<include>VisibleHiddenSlideAnimation</include>
			<include>KaiToastSlideAnimations</include>
			<include>ScanSlideAnimations</include>
			<visible>Player.HasMedia + !Window.IsActive(PlayerControls)</visible>
			<animation type="WindowOpen" reversible="false" condition="Window.Previous(Home) | Window.Previous(fullscreenvideo) | Window.Previous(visualisation) | Window.Previous(screencalibration) | Window.Previous(screensaver) | Window.Previous(slideshow)">
				<include>CommonVisibleEffect</include>
			</animation>
			<animation type="WindowClose" reversible="false" condition="Window.Next(Home) | Window.Next(fullscreenvideo) | Window.Next(visualisation) | Window.Next(screencalibration) | Window.Next(screensaver) | Window.Next(slideshow)">
				<include>CommonHiddenEffectTwo</include>
			</animation>
			<left>45</left>
			<top>640</top>
			<width>1000</width>
			<height>60</height>
			<align>left</align>
			<itemgap>10</itemgap>
			<orientation>horizontal</orientation>
			<!-- Player Time -->
			<control type="label">
				<height>53</height>
				<width>auto</width>
				<label>$INFO[Player.Time]</label>
				<font>FontSize_50</font>
			</control>
			<!-- DISABLED
			<control type="group">
				<width>15</width>
				<control type="image">
					<left>6</left>
					<top>8</top>
					<width>1</width>
					<height>40</height>
					<colordiffuse>viewsinfo</colordiffuse>
					<texture>windows/bg/white.png</texture>
				</control>
			</control>
			-->
			<!-- Video -->
			<control type="group">
				<visible>Player.HasVideo + !VideoPlayer.Content(LiveTV)</visible>
				<control type="group">
					<animation type="Conditional" reversible="false" condition="Integer.IsGreater(Playlist.Length(video),1)" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="0" />
						<effect type="fade" start="100" end="0" time="500" delay="10000" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<include content="NowNextPlayingString">
						<param name="label" value="$LOCALIZE[31316]..."/>
					</include>
					<include content="NowPlayingLabel">
						<param name="label" value="$VAR[NowPlayingVideosLabel]"/>
					</include>
				</control>
				<control type="group">
					<visible>Integer.IsGreater(Playlist.Length(video),1)</visible>
					<animation type="Conditional" reversible="false" condition="Integer.IsGreater(Playlist.Length(video),1)" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="10500" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<include content="NowNextPlayingString">
						<param name="label" value="$LOCALIZE[209]..."/>
					</include>
					<include content="NowPlayingLabel">
						<param name="label" value="$VAR[NowPlayingNextVideosLabel]"/>
					</include>
				</control>
			</control>

			<!-- Music -->
			<control type="group">
				<visible>Player.HasAudio</visible>
				<control type="group">
					<animation type="Conditional" reversible="false" condition="MusicPlayer.HasNext" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="0" />
						<effect type="fade" start="100" end="0" time="500" delay="10000" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<include content="NowNextPlayingString">
						<param name="label" value="$LOCALIZE[31316]..."/>
					</include>
					<include content="NowPlayingLabel">
						<param name="label" value="$INFO[Player.Title]$INFO[MusicPlayer.Artist, - ] $INFO[MusicPlayer.Album, (,) ]"/>
					</include>
				</control>
				<control type="group">
					<visible>MusicPlayer.HasNext</visible>
					<animation type="Conditional" reversible="false" condition="MusicPlayer.HasNext" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="10500" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<include content="NowNextPlayingString">
						<param name="label" value="$LOCALIZE[209]..."/>
					</include>
					<include content="NowPlayingLabel">
						<param name="label" value="$INFO[MusicPlayer.offset(1).Title]$INFO[MusicPlayer.offset(1).Artist, - ]"/>
					</include>
				</control>
			</control>
			<!-- LiveTV -->
			<control type="group">
				<visible>Player.HasVideo + VideoPlayer.Content(LiveTV)</visible>
				<control type="group">
					<animation type="Conditional" reversible="false" condition="[Pvr.IsPlayingTv | Pvr.IsPlayingRadio] + !String.IsEmpty(VideoPlayer.NextTitle)" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="0" />
						<effect type="fade" start="100" end="0" time="500" delay="10000" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<include content="NowNextPlayingString">
						<param name="label" value="$LOCALIZE[31316]..."/>
					</include>
					<include content="NowPlayingLabel">
						<param name="label" value="$INFO[VideoPlayer.ChannelNumber,,. ]$INFO[VideoPlayer.ChannelName]$INFO[Player.Title,: ]"/>
					</include>
				</control>
				<control type="group">
					<visible>[Pvr.IsPlayingTv | Pvr.IsPlayingRadio] + !String.IsEmpty(VideoPlayer.NextTitle)</visible>
					<animation type="Conditional" reversible="false" condition="[Pvr.IsPlayingTv | Pvr.IsPlayingRadio] + !String.IsEmpty(VideoPlayer.NextTitle)" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="10500" />
						<effect type="fade" start="100" end="0" time="500" delay="20000" />
					</animation>
					<include content="NowNextPlayingString">
						<param name="label" value="$LOCALIZE[209]..."/>
					</include>
					<include content="NowPlayingLabel">
						<param name="label" value="$INFO[VideoPlayer.NextTitle,, ]$INFO[VideoPlayer.NextStartTime,(,)]"/>
					</include>
				</control>
			</control>
		</control>
		<include>DebugInfo</include>
	</include>

	<include name="Logo">
		<control type="group" id="998">
			<width>43</width>
			<animation effect="slide" end="0,10" condition="[Window.IsVisible(VideoBookmarks) + Integer.IsGreater(Container(11).NumItems,0)]">Conditional</animation>
			<control type="image">
				<left>0</left>
				<top>2</top>
				<width>50</width>
				<height>50</height>
				<aspectratio align="center" scalediffuse="false">scale</aspectratio>
				<texture diffuse="icons/profiles/profile_diffuse.png">$VAR[LogoThumbVar]</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>2</top>
				<width>50</width>
				<height>50</height>
				<aspectratio>keep</aspectratio>
				<texture background="true">icons/profiles/profile_panel_small.png</texture>
			</control>
		</control>
	</include>
	<include name="LogoBig">
		<control type="group" id="997">
			<width>48</width>
			<control type="image">
				<left>0</left>
				<top>10</top>
				<width>55</width>
				<height>55</height>
				<aspectratio align="center" scalediffuse="false">scale</aspectratio>
				<texture diffuse="icons/profiles/profile_diffuse.png">$VAR[LogoThumbVar]</texture>
				<visible>!Control.IsVisible(991) + !Container(3000).IsUpdating</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>10</top>
				<width>55</width>
				<height>55</height>
				<texture>dialogs/busy/busy.png</texture>
				<animation effect="rotate" start="0" end="-360" center="auto" time="1500" loop="true" condition="true">conditional</animation>
				<visible>Container(3000).IsUpdating | Control.IsVisible(991)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>10</top>
				<width>55</width>
				<height>55</height>
				<texture>icons/profiles/profile_panel_small.png</texture>
			</control>
		</control>
	</include>

	<include name="CommonTopInfoGroupList">
		<param name="include">LogoBig</param>
		<definition>
			<left>0</left>
			<top>0</top>
			<height>70</height>
			<width>1000</width>
			<onup>$PARAM[onup]</onup>
			<ondown>$PARAM[ondown]</ondown>
			<align>left</align>
			<itemgap>16</itemgap>
			<orientation>horizontal</orientation>
			<include>$PARAM[include]</include>
		</definition>
	</include>

	<include name="PageCountLabel">
		<param name="left">65</param>
		<param name="top">45</param>
		<definition>
			<control type="label">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>auto</width>
				<height>21</height>
				<font>FontSize_18</font>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<label>$PARAM[label]</label>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>

	<include name="CommonPageCount">
		<control type="group">
			<left>110</left>
			<top>70</top>
			<include>CountAlbumTracksLabel</include>
			<include>TextViewerHideAnimations</include>
			<include>ShutdownMenuAnimation</include>
			<include>InfoDialogs_ContentInfoAnimation</include>
			<include>VisibleHiddenSlideAnimation</include>
			<visible>!ControlGroup(9000).HasFocus</visible>
			<control type="grouplist">
				<left>0</left>
				<top>0</top>
				<width>auto</width>
				<height>20</height>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<include>OpenCloseSlideAnimationTwo</include>
				<include content="PageCountLabel">
					<param name="label" value="$VAR[ContainerNumItems]"/>
				</include>
				<include content="PageCountLabel">
					<param name="label" value=" • $LOCALIZE[182]: "/>
					<param name="visible" value="[Control.IsVisible(52) | Control.IsVisible(57) | Control.IsVisible(59) | Control.IsVisible(562)] + [Container.Content(Albums) | String.IsEqual(ListItem.DBType,album)]  + ![String.IsEmpty(ListItem.Duration) | ListItem.IsParentFolder]"/>
				</include>
				<include content="CountAlbumTracksLabel">
					<param name="visible" value="[Control.IsVisible(52) | Control.IsVisible(57) | Control.IsVisible(59) | Control.IsVisible(562)]"/>
				</include>
			</control>
			<control type="list" id="8888">
				<visible>Container.Content(albums) | String.IsEqual(ListItem.DBType,album)</visible>
				<include>HiddenListContainer</include>
				<content>$VAR[CountAlbumTracksPath]</content>
			</control>
		</control>
	</include>

	<include name="CommonScrollingLetters">
		<control type="group">
			<left>875</left>
			<top>25</top>
			<visible>Container().Scrolling</visible>
			<include>TopRightSlideAnimations</include>
			<control type="grouplist">
				<right>45</right>
				<top>0</top>
				<height>70</height>
				<width>360</width>
				<align>right</align>
				<aligny>center</aligny>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<include>TopSmallLabel</include>
					<label>$LOCALIZE[31026]</label>
				</control>
				<control type="label">
					<include>TopBigLabel</include>
					<label>$INFO[Container().ListItem.SortLetter]</label>
				</control>
			</control>
		</control>
		<control type="group">
			<left>405r</left>
			<top>25</top>
			<visible>Window.IsVisible(FileManager) + [Container(20).Scrolling | Container(21).Scrolling]</visible>
			<include>TopRightSlideAnimations</include>
			<control type="grouplist">
				<left>0</left>
				<top>0</top>
				<height>70</height>
				<width>360</width>
				<align>right</align>
				<aligny>center</aligny>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<control type="label">
					<include>TopSmallLabel</include>
					<label>31026</label>
				</control>
				<control type="label">
					<include>TopBigLabel</include>
					<label>$INFO[Container(20).ListItem.SortLetter]</label>
					<visible>Control.HasFocus(20)</visible>
				</control>
				<control type="label">
					<include>TopBigLabel</include>
					<label>$INFO[Container(21).ListItem.SortLetter]</label>
					<visible>Control.HasFocus(21)</visible>
				</control>
			</control>
		</control>
	</include>

	<include name="CommonWeatherAndClock">
		<control type="group">
			<left>25</left>
			<top>45</top>
			<visible>![Container.Scrolling + [Window.IsVisible(FileManager) | Window.IsVisible(musicplaylisteditor) | Window.IsVisible(AddonBrowser.xml) | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyPics.xml) | Window.IsVisible(MyPlaylist.xml) | Window.IsVisible(MyPrograms.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(Custom_Trailers.xml) | Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)]]</visible>
			<include>TextViewerHideAnimations</include>
			<include>OpenCloseSlideAnimationTwo</include>
			<include>VisibleHiddenSlideAnimation</include>
			<include>WeatherAndClock</include>
			<animation type="Conditional" condition="[Window.IsActive(script-globalsearch.xml) | Window.IsActive(PlayerControls) | Window.IsActive(MovieInformation) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(AddonInformation) | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YoutubeList.xml)] | !String.IsEmpty(Window(Home).Property(infodialogs.active))">
				<effect type="slide" start="0,0" end="0,AnimationsSlide" time="AnimationsSlideTime" tween="quadratic" easing="in"/>
				<effect type="fade" start="100" end="0" time="AnimationsFadeTime"/>
			</animation>
		</control>
	</include>

	<include name="SettingsWeatherAndClock">
		<control type="group">
			<left>25</left>
			<top>45</top>
			<include>SettingsSlideAnimations</include>
			<include>WeatherAndClock</include>
			<animation type="Conditional" condition="[Window.IsActive(script-globalsearch.xml) | Window.IsActive(PlayerControls) | Window.IsActive(MovieInformation) | Window.IsActive(MusicInformation) | Window.IsActive(SongInformation) | Window.IsActive(AddonInformation) | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-YoutubeList.xml)] | !String.IsEmpty(Window(Home).Property(infodialogs.active))">
				<effect type="slide" start="0,0" end="0,AnimationsSlide" time="AnimationsSlideTime" tween="quadratic" easing="in"/>
				<effect type="fade" start="100" end="0" time="AnimationsFadeTime"/>
			</animation>
		</control>
	</include>

	<include name="WeatherAndClock">
		<control type="grouplist" id="1">
			<include>VolumeBarSlideAnimations</include>
			<left>0</left>
			<top>0</top>
			<width>1210</width>
			<itemgap>0</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<!-- Weather -->
			<control type="group"  id="1">
				<left>-45</left>
				<top>0</top>
				<visible>!String.Contains(Window(Weather).Property(Current.ConditionIcon),na)</visible>
				<control type="image" id="1">
					<left>0</left>
					<top>0</top>
					<height>25</height>
					<width>25</width>
					<colordiffuse>viewsinfo</colordiffuse>
					<texture>$INFO[Window(Weather).Property(Current.FanartCode),weather/icons.default.small/,.png]</texture>
					<visible>Weather.IsFetched</visible>
				</control>
				<control type="label" id="1">
					<left>-100</left>
					<top>0</top>
					<width>98</width>
					<height>28</height>
					<font>FontSize_20</font>
					<textcolor>viewsinfo</textcolor>
					<align>right</align>
					<label>$INFO[Window(Weather).Property(Current.Temperature),,°]</label>
					<visible>Weather.IsFetched</visible>
				</control>
			</control>
			<!-- Time -->
			<control type="label" id="1">
				<width min="10" max="200">auto</width>
				<height>28</height>
				<font>FontSize_20</font>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<label>$INFO[System.Time(hh:mm)]</label>
			</control>
			<control type="group" id="1">
				<visible>String.Contains(system.time,AM) | String.Contains(system.time,PM)</visible>
				<width>20</width>
				<height>20</height>
				<control type="label" id="1">
					<visible>String.Contains(system.time,AM)</visible>
					<left>2</left>
					<top>0</top>
					<width>20</width>
					<height>20</height>
					<font>ClockFont</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<label>31030</label>
				</control>
				<control type="label" id="1">
					<visible>String.Contains(system.time,PM)</visible>
					<left>2</left>
					<top>0</top>
					<width>20</width>
					<height>20</height>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<font>ClockFont</font>
					<label>31031</label>
				</control>
			</control>
			<!-- NowPlaying Finish Time -->
			<control type="label" id="1">
				<width min="10" max="200">auto</width>
				<height>28</height>
				<font>FontSize_20</font>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<label>$INFO[Player.FinishTime(hh:mm), / ]</label>
				<visible>Player.HasVideo + !Window.IsVisible(FullscreenVideo)</visible>
			</control>
			<control type="group" id="1">
				<visible>Player.HasVideo + !Window.IsVisible(FullscreenVideo)</visible>
				<visible>String.Contains(system.time,AM) | String.Contains(system.time,PM)</visible>
				<width>20</width>
				<height>20</height>
				<control type="label" id="1">
					<visible>String.Contains(system.time,AM)</visible>
					<left>2</left>
					<top>0</top>
					<width>20</width>
					<height>20</height>
					<font>ClockFont</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<label>$LOCALIZE[31030]</label>
				</control>
				<control type="label" id="1">
					<visible>String.Contains(system.time,PM)</visible>
					<left>2</left>
					<top>0</top>
					<width>20</width>
					<height>20</height>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<font>ClockFont</font>
					<label>$LOCALIZE[31031]</label>
				</control>
			</control>
		</control>

		<control type="group">
			<left>1187</left>
			<visible>PVR.IsRecording + !Window.IsActive(visualisation) + !Window.IsVisible(startup) + !Skin.Hassetting(DisableGlobalRECIndicator)</visible>
			<include>VolumeBarSlideAnimations</include>
			<animation effect="fade" start="0" end="100" delay="500" time="1000" tween="sine" easing="in" pulse="true" condition="true">Conditional</animation>
			<control type="label">
				<left>-95</left>
				<top>25</top>
				<width>100</width>
				<height>23</height>
				<font>FontSize_14B</font>
				<textcolor>viewsinfo</textcolor>
				<align>right</align>
				<label>REC</label>
			</control>
			<control type="image">
				<left>0</left>
				<top>20</top>
				<width>32</width>
				<height>32</height>
				<aspectratio align="right" aligny="center">keep</aspectratio>
				<texture>windows/pvr/rec_epg.png</texture>
			</control>
		</control>
	</include>

	<include name="IamBusyAnimation">
		<param name="font">FontSize_50</param>
		<param name="label">$LOCALIZE[31023]</param>
		<param name="visible_1">true</param>
		<param name="visible_2">true</param>
		<definition>
			<control type="grouplist">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>100%</width>
				<height>100%</height>
				<align>center</align>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<visible>$PARAM[visible_1]</visible>
				<visible>$PARAM[visible_2]</visible>
				<include>$PARAM[include]</include>
				<control type="label">
					<height>100%</height>
					<width>auto</width>
					<label>$PARAM[label]</label>
					<font>$PARAM[font]</font>
				</control>
				<control type="label">
					<height>100%</height>
					<width>100%</width>
					<label>$INFO[Control.GetLabel(555)]</label>
					<font>$PARAM[font]</font>
				</control>
			</control>
			<control type="fadelabel" id="555">
				<left>-2160</left>
				<label>....</label>
				<label>...</label>
				<label>..</label>
				<label>.</label>
				<scrollout>false</scrollout>
				<pauseatend>1000</pauseatend>
			</control>
		</definition>
	</include>

	<include name="Autocompletion">
		<control type="image">
			<left>230</left>
			<top>165</top>
			<width>820</width>
			<height>392</height>
			<texture border="31">views/other/panel.png</texture>
			<animation effect="fade" start="100" end="0" time="300" delay="600">Hidden</animation>
			<visible>String.IsEmpty(Control.GetLabel(312).index(1))</visible>
		</control>
		<control type="image">
			<left>230</left>
			<top>165</top>
			<width>820</width>
			<height>512</height>
			<texture border="31">views/other/panel.png</texture>
			<animation effect="fade" start="0" end="100" time="300" delay="600">Visible</animation>
			<visible>!String.IsEmpty(Control.GetLabel(312).index(1))</visible>
		</control>
		<control type="panel" id="7006">
			<left>251</left>
			<top>556</top>
			<width>824</width>
			<height>104</height>
			<onup>7005</onup>
			<ondown>7005</ondown>
			<orientation>vertical</orientation>
			<animation effect="fade" start="100" end="0" time="300" condition="String.IsEmpty(Container(7006).ListItem.Label)">conditional</animation>
			<itemlayout height="52" width="195.5">
				<control type="image">
					<width>191</width>
					<height>48</height>
					<texture border="4,6,4,6">dialogs/keyboard/button_nf.png</texture>
					<visible>!String.IsEmpty(Control.GetLabel(312).index(1))</visible>
				</control>
				<control type="label">
					<left>5</left>
					<width>181</width>
					<height>48</height>
					<align>center</align>
					<font>FontSize_16B</font>
					<textcolor>viewsinfo</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>!String.IsEmpty(Control.GetLabel(312).index(1))</visible>
				</control>
			</itemlayout>
			<focusedlayout height="52" width="195.5">
				<control type="image">
					<width>191</width>
					<height>48</height>
					<texture border="4,6,4,6">dialogs/keyboard/button_nf.png</texture>
					<visible>!Control.HasFocus(7006)</visible>
				</control>
				<control type="image">
					<width>191</width>
					<height>48</height>
					<texture border="4,6,4,6" colordiffuse="$VAR[Textures.GlobalColor]">dialogs/keyboard/button_fo.png</texture>
					<visible>Control.HasFocus(7006)</visible>
					<visible>!String.IsEmpty(Control.GetLabel(312).index(1))</visible>
				</control>
				<control type="label">
					<left>5</left>
					<width>181</width>
					<height>48</height>
					<align>center</align>
					<font>FontSize_16B</font>
					<textcolor>viewsinfo</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>!Control.HasFocus(7006)</visible>
					<visible>!String.IsEmpty(Control.GetLabel(312).index(1))</visible>
				</control>
				<control type="label">
					<left>5</left>
					<width>181</width>
					<height>48</height>
					<align>center</align>
					<font>FontSize_16B</font>
					<label>$INFO[ListItem.Label]</label>
					<visible>Control.HasFocus(7006)</visible>
					<visible>!String.IsEmpty(Control.GetLabel(312).index(1))</visible>
				</control>
			</focusedlayout>
			<content>plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=8</content>
		</control>
	</include>
	
	<include name="CountAlbumTracksLabel">
		<control type="label" id="7777">
			<left>0</left>
			<top>0</top>
			<width>auto</width>
			<height>20</height>
			<font>FontSize_18</font>
			<textcolor>$VAR[Text.GlobalColor]</textcolor>
			<label>$INFO[Container(8888).NumItems]</label>
			<visible>[Container.Content(Albums) | String.IsEqual(ListItem.DBType,album)] + ![String.IsEmpty(ListItem.Duration) | ListItem.IsParentFolder]</visible>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>

	<include name="AutoplayTrailerDelayValue">
		<onclick>SetProperty(Dialog.1.Label,$NUMBER[3],Home)</onclick>
		<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(AutoplayTrailerDelay,3),Home)</onclick>
		<onclick>SetProperty(Dialog.2.Label,$NUMBER[5],Home)</onclick>
		<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(AutoplayTrailerDelay,5),Home)</onclick>
		<onclick>SetProperty(Dialog.3.Label,$NUMBER[7],Home)</onclick>
		<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(AutoplayTrailerDelay,7),Home)</onclick>
		<onclick>SetProperty(Dialog.4.Label,$NUMBER[10],Home)</onclick>
		<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(AutoplayTrailerDelay,10),Home)</onclick>
		<onclick>SetProperty(Dialog.5.Label,-,Home)</onclick>
	</include>

	<variable name="AutoplayTrailer">
		<value condition="!String.IsEmpty(ListItem.Trailer)">PlayMedia($INFO[ListItem.Trailer])</value>
		<value>PlayMedia($INFO[Window(Home).Property(TMDbHelper.ListItem.Trailer)])</value>
	</variable>

	<variable	name="AutoplayTrailerDelayLabel">
		<value condition=" String.IsEqual(Skin.String(AutoplayTrailerDelay),3)">$NUMBER[3]</value>
		<value condition=" String.IsEqual(Skin.String(AutoplayTrailerDelay),5)">$NUMBER[5]</value>
		<value condition=" String.IsEqual(Skin.String(AutoplayTrailerDelay),7)">$NUMBER[7]</value>
		<value condition=" String.IsEqual(Skin.String(AutoplayTrailerDelay),10)">$NUMBER[10]</value>
	</variable>

	<variable name="ProfileThumbVar">
		<value condition="!String.IsEqual(System.ProfileThumb,DefaultUser.png)">$INFO[System.ProfileThumb]</value>
		<value condition="Window.IsVisible(LoginScreen) | Window.IsVisible(Custom_StartExit.xml)">icons/profiles/profile_icon_big.png</value>
		<value>icons/profiles/profile_icon_small.png</value>
	</variable>

	<variable name="LogoThumbVar">
		<value condition="[String.IsEqual(Skin.String(LogoThumb),1) + Window.IsVisible(LoginScreen)]">icons/logo/bello_header_big.png</value>
		<value condition="[String.IsEqual(Skin.String(LogoThumb),1) + !Window.IsVisible(LoginScreen)]">icons/logo/bello_header_small.png</value>
		<value condition="String.IsEqual(Skin.String(LogoThumb),2)">$VAR[ProfileThumbVar]</value>
		<value condition="String.IsEqual(Skin.String(LogoThumb),3)">icons/logo/kodi_header.png</value>
	</variable>

	<variable name="LogoThumbLabel">
		<value condition="String.IsEqual(Skin.String(LogoThumb),1)">Bello</value>
		<value condition="String.IsEqual(Skin.String(LogoThumb),2)">$LOCALIZE[20065]</value>
		<value condition="String.IsEqual(Skin.String(LogoThumb),3)">Kodi</value>
	</variable>
	
	<variable name="NowPlayingNextVideosLabel">
		<value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.offset(1).Title]$INFO[VideoPlayer.offset(1).Year, (,)]</value>
		<value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.offset(1).Title] $INFO[VideoPlayer.offset(1).TVShowTitle, (,] $INFO[VideoPlayer.offset(1).Season,]$INFO[VideoPlayer.offset(1).Episode,x,)]</value>
		<value condition="![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes) | VideoPlayer.Content(LiveTV)]">$INFO[VideoPlayer.offset(1).Title]$INFO[VideoPlayer.offset(1).Genre, (,)]</value>
	</variable>
	
	<variable name="NowPlayingVideosLabel">
		<value condition="VideoPlayer.Content(Movies)">$INFO[Player.Title]$INFO[VideoPlayer.Year, (,)]</value>
		<value condition="VideoPlayer.Content(Episodes)">$INFO[Player.Title] $INFO[VideoPlayer.TVShowTitle, (,] $INFO[VideoPlayer.Season,]$INFO[VideoPlayer.Episode,x,)]</value>
		<value condition="![VideoPlayer.Content(Movies) | VideoPlayer.Content(Episodes) | VideoPlayer.Content(LiveTV)]">$INFO[Player.Title]$INFO[VideoPlayer.Genre, (,)]</value>
	</variable>

	<variable name="GlobalFanartVar">
		<value condition="[Window.IsActive(Custom_Trailers.xml) + String.Contains(ListItem.FolderPath,plugin.video.youtube)]">$INFO[ListItem.Thumb]</value>
		<value condition="[Container.Content(images) | String.IsEqual(Container(20).ListItem.Property(widgetTarget),pictures)] + !String.IsEmpty(ListItem.FileNameAndPath)">$INFO[ListItem.FileNameAndPath]</value>
		<value condition="[Window.IsActive(script-script.extendedinfo-VideoList.xml) | Window.IsActive(script-script.extendedinfo-DialogInfo.xml) | Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsActive(script-script.extendedinfo-YoutubeList.xml)] + !String.IsEmpty(Container(500).ListItem.Property(Fanart_small))">$INFO[Container(500).ListItem.Property(Fanart_small)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(DailyBG))">$INFO[ListItem.Property(DailyBG)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(HourlyBG))">$INFO[ListItem.Property(HourlyBG)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
		<value condition="![String.StartsWith(Container(20).ListItem.Property(widgetRatio),Fanart) + ![Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]">$INFO[ListItem.Art(fanart)]</value>
	</variable>

	<variable name="StatusSkinShortcuts">
		<value condition="System.HasAddon(script.skinshortcuts)">$INFO[System.AddonVersion(script.skinshortcuts),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusThemovieDBHelper">
		<value condition="System.HasAddon(plugin.video.themoviedb.helper)">$INFO[System.AddonVersion(plugin.video.themoviedb.helper),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusEmbuaryHelper">
		<value condition="System.HasAddon(script.embuary.helper)">$INFO[System.AddonVersion(script.embuary.helper),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusMetadataEditor">
		<value condition="System.HasAddon(script.metadata.editor)">$INFO[System.AddonVersion(script.metadata.editor),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<!-- DISABLED
	<variable name="StatusSmartishWidgets">
		<value condition="System.HasAddon(service.smartish.widgets)">$INFO[System.AddonVersion(service.smartish.widgets),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	-->
	<variable name="StatusArtistSlideshow">
		<value condition="System.HasAddon(script.artistslideshow)">$INFO[System.AddonVersion(script.artistslideshow),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusGlobalSearch">
		<value condition="System.HasAddon(script.globalsearch)">$INFO[System.AddonVersion(script.globalsearch),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<!-- DISABLED
	<variable name="StatusT9Search">
		<value condition="System.HasAddon(script.module.kodi65)">$INFO[System.AddonVersion(script.module.kodi65),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	-->
	<variable name="StatusAutoCompletion">
		<value condition="System.HasAddon(plugin.program.autocompletion)">$INFO[System.AddonVersion(plugin.program.autocompletion),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusCULRCLyrics">
		<value condition="System.HasAddon(script.cu.lrclyrics)">$INFO[System.AddonVersion(script.cu.lrclyrics),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<!-- DISABLED
	<variable name="StatusTVShowNextAired">
		<value condition="System.HasAddon(script.tv.show.next.aired)">$INFO[System.AddonVersion(script.tv.show.next.aired),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	-->
	<variable name="StatusUpNextNotification">
		<value condition="System.HasAddon(service.upnext)">$INFO[System.AddonVersion(service.upnext),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusAudioProfiles">
		<value condition="System.HasAddon(service.audio.profiles)">$INFO[System.AddonVersion(service.audio.profiles),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<!-- DISABLED
	<variable name="StatusArtworkBeef">
		<value condition="System.HasAddon(script.artwork.beef)">$INFO[System.AddonVersion(script.artwork.beef),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusIMDBUpdate">
		<value condition="System.HasAddon(script.imdbupdate)">$INFO[System.AddonVersion(script.imdbupdate),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	-->
	<variable name="StatusImageResourceSelect">
		<value condition="System.HasAddon(script.image.resource.select)">$INFO[System.AddonVersion(script.image.resource.select),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusWeatherIconsOutline">
		<value condition="System.HasAddon(resource.images.weathericons.outline)">$INFO[System.AddonVersion(resource.images.weathericons.outline),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusWeatherIconsOutlineHD">
		<value condition="System.HasAddon(resource.images.weathericons.outline-hd)">$INFO[System.AddonVersion(resource.images.weathericons.outline-hd),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusWeatherFanartSingle">
		<value condition="System.HasAddon(resource.images.weatherfanart.single)">$INFO[System.AddonVersion(resource.images.weatherfanart.single),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusMusicGenreiconsText">
		<value condition="System.HasAddon(resource.images.musicgenreicons.text)">$INFO[System.AddonVersion(resource.images.musicgenreicons.text),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>
	<variable name="StatusLanguageFlagsColour">
		<value condition="System.HasAddon(resource.images.languageflags.colour)">$INFO[System.AddonVersion(resource.images.languageflags.colour),v.]</value>
		<value>$LOCALIZE[31017]</value>
	</variable>

	<variable name="ContainerNumItems">
		<value condition="Integer.IsGreater(Container(25).NumItems,0)">$INFO[Container(25).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(25).NumItems, $LOCALIZE[31024] ]</value> <!-- Home Widgets -->
		<value condition="Control.HasFocus(150) + Integer.IsGreater(Container(150).NumItems,0)">$INFO[Container(150).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(150).NumItems, $LOCALIZE[31024] ]</value>
		<value condition="Control.HasFocus(200) + Integer.IsGreater(Container(200).NumItems,0) + ![Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)]">$INFO[Container(200).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(200).NumItems, $LOCALIZE[31024] ]</value>
		<value condition="Control.HasFocus(250) + Integer.IsGreater(Container(250).NumItems,0)">$INFO[Container(250).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(250).NumItems, $LOCALIZE[31024] ]</value>
		<value condition="Control.HasFocus(300) + Integer.IsGreater(Container(300).NumItems,0)">$INFO[Container(300).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(300).NumItems, $LOCALIZE[31024] ]</value>
		<value condition="Control.HasFocus(350) + Integer.IsGreater(Container(350).NumItems,0)">$INFO[Container(350).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(350).NumItems, $LOCALIZE[31024] ]</value>
		<value condition="Window.IsVisible(DialogSelect.xml) + Integer.IsGreater(Container(5).NumItems,0)">$INFO[Container(5).CurrentItem]$INFO[Container(5).NumItems, / ]</value> <!-- Visualisation Preset List -->
		<value condition="Window.IsVisible(DialogSelect.xml) + Integer.IsGreater(Container(3).NumItems,0)">$INFO[Container(3).CurrentItem]$INFO[Container(3).NumItems, / ]</value> <!-- Select Dialog -->
		<value condition="Window.IsVisible(DialogSelect.xml) + Integer.IsGreater(Container(6).NumItems,0)">$INFO[Container(6).CurrentItem]$INFO[Container(6).NumItems, / ]</value> <!-- Select Dialog -->
		<value condition="Window.IsVisible(FileBrowser.xml) + Integer.IsGreater(Container(450).NumItems,0)">$INFO[Container(450).CurrentItem,, / ]$INFO[Container(450).NumItems]</value> <!-- File Browser -->
		<value condition="Window.IsVisible(FileBrowser.xml) + Integer.IsGreater(Container(451).NumItems,0)">$INFO[Container(451).CurrentItem,, / ]$INFO[Container(451).NumItems]</value> <!-- File Browser -->
		<value condition="Window.IsVisible(FileManager) + Control.HasFocus(20) + Integer.IsGreater(Container(20).NumItems,0)">$INFO[Container(20).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(20).NumItems, $LOCALIZE[31024] ]</value> <!-- File Manager -->
		<value condition="Window.IsVisible(FileManager) + Control.HasFocus(21) + Integer.IsGreater(Container(21).NumItems,0)">$INFO[Container(21).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(21).NumItems, $LOCALIZE[31024] ]</value> <!-- File Manager -->
		<value condition="Window.IsVisible(MusicPlaylistEditor) + Control.HasFocus(100) + Integer.IsGreater(Container(100).NumItems,0)">$INFO[Container(100).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(100).NumItems, $LOCALIZE[31024] ]</value> <!-- Music Playlist Editor -->
		<value condition="Window.IsVisible(script-skinshortcuts.xml) + Integer.IsGreater(Container(211).NumItems,0)">$INFO[Container(211).CurrentItem]$INFO[Container(211).NumItems, / ]</value> <!-- Skin Shortcut script dialog -->
		<value condition="[Window.IsVisible(VideoBookmarks) | Window.IsVisible(PVROSDChannels) | Window.IsVisible(PVRChannelGuide)] + Integer.IsGreater(Container(11).NumItems,0)">$INFO[Container(11).CurrentItem,$LOCALIZE[31025] ]$INFO[Container(11).NumItems, $LOCALIZE[31024] ]</value> <!-- Video Bookmarks -->
		<value condition="[Window.IsActive(TVGuide) | Window.IsActive(RadioGuide)] + Integer.IsGreater(Container(10).NumItems,0)">$INFO[Container(10).NumItems,$LOCALIZE[31028] ]$INFO[Control.GetLabel(3), • ]</value> <!-- Video Bookmarks -->
		<value condition="!Window.IsVisible(VideoBookmarks)">$INFO[Container().CurrentItem,$LOCALIZE[31025] ]$INFO[Container().NumItems, $LOCALIZE[31024] ]$INFO[Control.GetLabel(3), • ]</value>
	</variable>

	<variable name="Textures.GlobalColor">
		<value condition="!String.IsEmpty(Skin.String(Textures.GlobalColor))">$INFO[Skin.String(Textures.GlobalColor)]</value>
		<value>FF12B2E7</value>
	</variable>

	<variable name="Text.GlobalColor">
		<value condition="!String.IsEmpty(Skin.String(Text.GlobalColor))">$INFO[Skin.String(Text.GlobalColor)]</value>
		<value>FF12B2E7</value>
	</variable>

	<variable name="BG.GlobalColor">
		<value condition="!String.IsEmpty(Skin.String(BG.GlobalColor))">$INFO[Skin.String(BG.GlobalColor)]</value>
		<value>FFCB2BFF</value>
	</variable>

	<variable name="CustomDialogOKHeadLabel">
		<value condition="Window.IsVisible(SkinSettings)">$LOCALIZE[31169]</value>
		<value condition="Window.IsVisible(SubtitleSearch)">KODI $LOCALIZE[24012]</value>
		<value>$LOCALIZE[10043]</value>
	</variable>

	<variable name="CustomDialogOKMessage">
		<value condition="Window.IsVisible(Favourites)">$LOCALIZE[31431]</value>
		<value condition="Window.IsVisible(SkinSettings)">$LOCALIZE[31433]</value>
		<value condition="Window.IsVisible(Weather)">$LOCALIZE[412][CR]$LOCALIZE[31432]</value>
		<value condition="Window.IsVisible(SubtitleSearch)">$LOCALIZE[24109]</value>
		<value condition="Window.IsVisible(FullscreenVideo) | Window.IsVisible(Visualisation)">$LOCALIZE[31110]</value>
	</variable>

	<variable name="CustomColorsContentInfo">
		<value condition=" String.IsEqual(Window(SkinSettings).Property(CustomColor),textures)">$LOCALIZE[31126]</value>
		<value condition=" String.IsEqual(Window(SkinSettings).Property(CustomColor),text)">$LOCALIZE[31127]</value>
		<value condition=" String.IsEqual(Window(SkinSettings).Property(CustomColor),BG)">$LOCALIZE[31128]</value>
	</variable>

	<variable name="SettingsCategoryLabels">
		<value condition="Container(9001).HasFocus(1) | Window.IsVisible(InterfaceSettings)">$LOCALIZE[14206]</value>
		<value condition="Container(9001).HasFocus(2) | Window.IsVisible(MediaSettings)">$LOCALIZE[14211]</value>
		<value condition="Container(9001).HasFocus(3) | Window.IsVisible(PlayerSettings)">$LOCALIZE[14200]</value>
		<value condition="Container(9001).HasFocus(4) | Window.IsVisible(PVRSettings)">$LOCALIZE[31000]</value>
		<value condition="Container(9001).HasFocus(5) | Window.IsVisible(ServiceSettings)">$LOCALIZE[14036]</value>
		<value condition="Container(9001).HasFocus(6) | Window.IsVisible(SystemSettings)">$LOCALIZE[13000]</value>
		<value condition="Container(9001).HasFocus(7)">$LOCALIZE[24001]</value>
		<value condition="Container(9001).HasFocus(8) | Window.IsVisible(Profiles)">$LOCALIZE[13200]</value>
		<value condition="Container(9001).HasFocus(9)">$LOCALIZE[130]</value>
		<value condition="Container(9001).HasFocus(10) | Window.IsVisible(SkinSettings)">$LOCALIZE[166]</value>
		<value condition="Window.IsVisible(SystemInfo)">$LOCALIZE[13000]</value>
		<value condition="Window.IsVisible(EventLog)">$LOCALIZE[13000] - $LOCALIZE[14111]</value>
	</variable>

	<variable name="FocusUnFocusColor">
		<value condition="![Control.HasFocus(650) | Control.HasFocus(50) | Control.HasFocus(8333)]">viewsinfo</value>
		<value>white</value>
	</variable>

	<variable name="StarRating">
		<value condition="Integer.IsLess(ListItem.Rating,1)">rating/0,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,2)">rating/1,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,3)">rating/2,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,4)">rating/3,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,5)">rating/4,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,6)">rating/5,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,7)">rating/6,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,8)">rating/7,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,9)">rating/8,0.png</value>
		<value condition="Integer.IsLess(ListItem.Rating,10)">rating/9,0.png</value>
		<value>rating/10,0.png</value>
	</variable>
	<variable name="StarRatingProperty">
		<value condition="Integer.IsLess(ListItem.Property(Rating),1)">rating/0,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),2)">rating/1,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),3)">rating/2,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),4)">rating/3,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),5)">rating/4,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),6)">rating/5,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),7)">rating/6,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),8)">rating/7,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),9)">rating/8,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(Rating),10)">rating/9,0.png</value>
		<value>rating/10,0.png</value>
	</variable>
	<variable name="UserStarRatingProperty">
		<value condition="Integer.IsLess(ListItem.Property(UserRating),1)">rating/0,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),2)">rating/1,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),3)">rating/2,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),4)">rating/3,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),5)">rating/4,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),6)">rating/5,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),7)">rating/6,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),8)">rating/7,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),9)">rating/8,0.png</value>
		<value condition="Integer.IsLess(ListItem.Property(UserRating),10)">rating/9,0.png</value>
		<value>rating/10,0.png</value>
	</variable>
	<variable name="PlayerStarRating">
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,1)">rating/0,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,2)">rating/1,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,3)">rating/2,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,4)">rating/3,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,5)">rating/4,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,6)">rating/5,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,7)">rating/6,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,8)">rating/7,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,9)">rating/8,0.png</value>
		<value condition="Player.HasVideo + Integer.IsLess(VideoPlayer.Rating,10)">rating/9,0.png</value>
		<value condition="Player.HasVideo">rating/10,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,1)">rating/0,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,2)">rating/1,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,3)">rating/2,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,4)">rating/3,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,5)">rating/4,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,6)">rating/5,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,7)">rating/6,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,8)">rating/7,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,9)">rating/8,0.png</value>
		<value condition="Player.HasAudio + Integer.IsLess(MusicPlayer.Rating,10)">rating/9,0.png</value>
		<value condition="Player.HasAudio">rating/10,0.png</value>
	</variable>

	<variable name="VideoDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>

	<variable name="ListItemDurationVar">
		<value condition="Integer.IsLess(ListItem.Duration,600)">$INFO[ListItem.Duration]</value>
		<value condition="Integer.IsLess(ListItem.Duration,3600)">$INFO[ListItem.Duration(mm),,min]</value>
		<value>$INFO[ListItem.Duration(h),,h ]$INFO[ListItem.Duration(mm),,min]</value>
	</variable>

	<include name="OnLoadDialogsClose">
		<onload condition="Window.IsActive(contextmenu)">Dialog.Close(contextmenu)</onload>
		<onload condition="Window.IsActive(movieinformation) + String.IsEmpty(Window(Home).Property(TMDbHelper.Path.Current))">Dialog.Close(movieinformation)</onload>
		<onload condition="Window.IsActive(musicinformation)">Dialog.Close(musicinformation)</onload>
		<onload condition="Window.IsActive(songinformation)">Dialog.Close(songinformation)</onload>
		<onload condition="Window.IsActive(addoninformation)">Dialog.Close(addoninformation)</onload>
		<onload condition="Window.IsActive(locksettings)">Dialog.Close(locksettings)</onload>
		<onload condition="Window.IsActive(profilesettings)">Dialog.Close(profilesettings)</onload>
		<onload condition="Window.IsActive(yesnodialog)">Dialog.Close(yesnodialog)</onload>
		<onload condition="Window.IsActive(visualisationpresetlist)">Dialog.Close(visualisationpresetlist)</onload>
		<onload condition="Window.IsActive(subtitlesearch)">Dialog.Close(subtitlesearch)</onload>
		<onload condition="Window.IsActive(osdsubtitlesettings)">Dialog.Close(osdsubtitlesettings)</onload>
		<onload condition="Window.IsActive(osdvideosettings)">Dialog.Close(osdvideosettings)</onload>
		<onload condition="Window.IsActive(osdaudiosettings)">Dialog.Close(osdaudiosettings)</onload>
		<onload condition="Window.IsActive(videobookmarks)">Dialog.Close(videobookmarks)</onload>
		<onload condition="Window.IsActive(filebrowser)">Dialog.Close(filebrowser)</onload>
		<onload condition="Window.IsActive(networksetup)">Dialog.Close(networksetup)</onload>
		<onload condition="Window.IsActive(mediasource)">Dialog.Close(mediasource)</onload>
		<onload condition="Window.IsActive(contentsettings)">Dialog.Close(contentsettings)</onload>
		<onload condition="Window.IsActive(peripheralsettings)">Dialog.Close(peripheralsettings)</onload>
		<onload condition="Window.IsActive(smartplaylisteditor)">Dialog.Close(smartplaylisteditor)</onload>
		<onload condition="Window.IsActive(smartplaylistrule)">Dialog.Close(smartplaylistrule)</onload>
		<onload condition="Window.IsActive(busydialog)">Dialog.Close(busydialog)</onload>
		<onload condition="Window.IsActive(pictureinfo)">Dialog.Close(pictureinfo)</onload>
		<onload condition="Window.IsActive(addonsettings)">Dialog.Close(addonsettings)</onload>
		<onload condition="Window.IsActive(videoosd)">Dialog.Close(videoosd)</onload>
		<onload condition="Window.IsActive(musicosd)">Dialog.Close(musicosd)</onload>
		<onload condition="Window.IsActive(sliderdialog)">Dialog.Close(sliderdialog)</onload>
		<onload condition="Window.IsActive(selectdialog)">Dialog.Close(selectdialog)</onload>
		<onload condition="Window.IsActive(DialogSelect.xml)">Dialog.Close(DialogSelect.xml)</onload>
		<onload condition="Window.IsActive(okdialog)">Dialog.Close(okdialog)</onload>
		<onload condition="Window.IsActive(textviewer)">Dialog.Close(textviewer)</onload>
		<onload condition="Window.IsActive(mediafilter)">Dialog.Close(mediafilter)</onload>
		<onload condition="Window.IsActive(dialogcolorpicker)">Dialog.Close(dialogcolorpicker)</onload>
		<onload condition="Window.IsActive(PVROSDChannels)">Dialog.Close(PVROSDChannels)</onload>
		<onload condition="Window.IsActive(PVRChannelGuide)">Dialog.Close(PVRChannelGuide)</onload>
		<onload condition="Window.IsActive(PVRGuideInfo)">Dialog.Close(PVRGuideInfo)</onload>
		<onload condition="Window.IsActive(PVRRecordingInfo)">Dialog.Close(PVRRecordingInfo)</onload>
		<onload condition="Window.IsActive(PVRTimerSetting)">Dialog.Close(PVRTimerSetting)</onload>
		<onload condition="Window.IsActive(PVRGroupManager)">Dialog.Close(PVRGroupManager)</onload>
		<onload condition="Window.IsActive(PVRChannelManager)">Dialog.Close(PVRChannelManager)</onload>
		<onload condition="Window.IsActive(PVRGuideSearch)">Dialog.Close(PVRGuideSearch)</onload>
		<onload condition="Window.IsActive(1110)">Dialog.Close(1110)</onload>
		<onload condition="Window.IsActive(1112)">Dialog.Close(1112)</onload>
		<onload condition="Window.IsActive(1113)">Dialog.Close(1113)</onload>
		<onload condition="Window.IsActive(1117)">Dialog.Close(1117)</onload>
		<onload condition="Window.IsActive(1118)">Dialog.Close(1118)</onload>
		<onload condition="Window.IsActive(1119)">Dialog.Close(1119)</onload>
		<onload condition="Window.IsActive(1120)">Dialog.Close(1120)</onload>
		<onload condition="Window.IsActive(1120)">Dialog.Close(1125)</onload>
		<onunload condition="Window.IsActive(script-script.extendedinfo-DialogInfo.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-script.extendedinfo-DialogVideoInfo.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-script.extendedinfo-VideoList.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-script.extendedinfo-YoutubeList.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-cu-lrclyrics-main.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-upnext-upnext.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-upnext-upnext-simple.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-upnext-stillwatching.xml)">PreviousMenu</onunload>
		<onunload condition="Window.IsActive(script-upnext-stillwatching-simple.xml)">PreviousMenu</onunload>
	</include>

	<include name="DebugInfo">
		<control type="label" id="1">
			<top>-5</top>
			<textcolor>FF40FFFF</textcolor>
			<font>FontSize_18B</font>
			<label>$INFO[Window.Property(xmlfile)][COLOR=FF00FF00]$INFO[System.CurrentWindow,: ][/COLOR]</label>
			<visible>Skin.HasSetting(ShowDebugInfo)</visible>
		</control>
	</include>


	<include name="DebugWidgets">
	  <control type="grouplist">
			<top>20</top>
			<itemgap>-12</itemgap>
			<visible>Window.IsVisible(Home.xml) + Skin.HasSetting(ShowDebugInfo)</visible>
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>[COLOR=FFFF0000]widget:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widget)][/COLOR] || [COLOR=FFFF0000]widgetName:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetName)][/COLOR] || [COLOR=FFFF0000]widgetRatio:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetRatio)][/COLOR] || [COLOR=FFFF0000]widgetAutoHide:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetAutoHide)][/COLOR]</label>
			</control>
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>[COLOR=FFFF0000]widgetType:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetType)][/COLOR] || [COLOR=FFFF0000]widgetTarget:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetTarget)][/COLOR] || [COLOR=FFFF0000]widgetSortby:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetSortby)][/COLOR] || [COLOR=FFFF0000]widgetOrderBy:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetOrderBy)][/COLOR] || [COLOR=FFFF0000]widgetLimit:[/COLOR] [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetLimit)][/COLOR]</label>
			</control>
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>[COLOR=FFFF0000]DBType:[/COLOR] [COLOR=FF00FF00]$INFO[ListItem.DBType][/COLOR] || [COLOR=FFFF0000]DBID Number:[/COLOR][COLOR=FF00FF00] $INFO[ListItem.DBID][/COLOR] || [COLOR=FFFF0000]IMDB Number:[/COLOR][COLOR=FF00FF00] $INFO[ListItem.IMDBNumber][/COLOR] || [COLOR=FFFF0000]TMDB Number:[/COLOR][COLOR=FF00FF00] $INFO[ListItem.Property(tmdb_id)][/COLOR]</label>
			</control>
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>ListItem.Property(widgetPath): [COLOR=FF00FF00]$INFO[Container(20).ListItem.Property(widgetPath)][/COLOR]</label>
			</control>
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>ListItem.FolderPath: [COLOR=FF00FF00]$INFO[ListItem.FolderPath][/COLOR]</label>
			</control>
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>Main Menu Path: $INFO[Container.ListItem.Property(path)]</label>
			</control>
			<!--
			<control type="label">
				<font>TextboxFont_15B</font>
				<align>center</align>
				<label>ListItem.Art(fanart): $INFO[ListItem.Art(fanart)]</label>
			</control>
			-->
		</control>
		<control type="label">
			<left>5</left>
			<bottom>40</bottom>
			<font>FontSize_15B</font>
			<align>center</align>
			<label>[COLOR=FFFF0000]Trailer: [/COLOR][COLOR=FF00FF00]$INFO[ListItem.Trailer][/COLOR] || [COLOR=FFFF0000]TMDb Traler: [/COLOR][COLOR=FF00FF00]$INFO[Window(Home).Property(TMDbHelper.ListItem.Trailer)][/COLOR]</label>
			<visible>Skin.HasSetting(ShowDebugInfo) + !Player.HasMedia</visible>
		</control>
	</include>



	<!--
	Custom Windows IDs (This is for references purpose only)
	========================================================
	Custom_DialogOK.xml							id=1110
	Custom_DialogVisualization.xml	id=1112
	Custom_Colours.xml							id=1113
	Custom_StartExit.xml						id=1114
	Custom_Reset.xml								id=1117
	Custom_ManageDialog.xml					id=1118
	Custom_CustomItems.xml					id=1119
	Custom_Trailers.xml							id=1120
	Custom_Search.xml								id=1125
	Custom_RSS.xml									id=3002
	Custom_TMDBInfo.xml							id=1130
	Custom_HubMovies.xml						id=1140
	Custom_HubTVShows.xml						id=1150
	Custom_HubMusic.xml							id=1160
	Custom_HubAddons.xml						id=1170
	Custom_HubLiveTV.xml						id=1180
	-->
</includes>