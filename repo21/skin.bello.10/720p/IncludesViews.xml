<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="ViewsPVR.xml" />
	<include file="ViewsBello.xml" />
	<include file="ViewsThumbnails.xml" />
	<include file="View_List_50.xml" />
	<include file="View_Slide_51.xml" />
	<include file="View_Gallery_52.xml" />
	<include file="View_Posters2_64.xml" />
	<include file="View_Posters_55.xml" />
	<include file="View_Banners_57.xml" />
	<include file="View_Tiles_562.xml" />
	<include file="View_Showtime_65.xml" />
	<include file="View_VideoWall_580.xml" />
	<include file="View_Netflix_59.xml" />
	<include file="View_3DWallVideos_53.xml" />
	<include file="View_3DWallMusic_59.xml" />
	<include file="View_Wall_54.xml" />
	<include file="View_WallList_58.xml" />

	<include name="VideoViews">
		<control type="group">
			<include>TextViewerHideAnimations</include>
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Videos</include> <!-- id = 50 -->
			<include condition="!Skin.HasSetting(BelloViewVideos)">BelloView_VideoLibrary</include> <!-- id = 66 -->
			<include condition="!Skin.HasSetting(SlideViewVideos)">SlideView_Videos</include> <!-- id = 51 -->
			<include condition="!Skin.HasSetting(GalleryViewVideos)">GalleryView_Videos</include> <!-- id = 52 -->
			<include condition="!Skin.HasSetting(ThumbnailsVideos)">ThumbnailsView_Videos_Posters</include> <!-- id = 561 -->
			<include condition="!Skin.HasSetting(TilesViewVideos)">TilesView_Videos</include> <!-- id = 562 -->
			<include condition="!Skin.HasSetting(PostersViewVideos2)">PostersView_Videos2</include> <!-- id = 64 -->
			<include condition="!Skin.HasSetting(BannersViewVideos)">BannersView_Videos</include> <!-- id = 57 -->
			<include condition="!Skin.HasSetting(NetflixViewVideos)">NetflixView_Videos</include> <!-- id = 59 -->
			<include condition="!Skin.HasSetting(BelloViewVideos)">BelloView_Generic</include> <!-- id = 660 -->
			<include condition="!Skin.HasSetting(ThumbnailsVideos)">ThumbnailsView_Generic</include> <!-- id = 56 -->
			<include condition="!Skin.HasSetting(ThumbnailsVideos)">ThumbnailsView_Multisize</include> <!-- id = 560 -->
		</control>
		<include condition="!Skin.HasSetting(3DWallViewVideos)">3DWallView_Videos</include> <!-- id = 53 -->
		<include condition="!Skin.HasSetting(WallViewVideos)">WallView_Videos</include> <!-- id = 54 -->
		<include condition="!Skin.HasSetting(ListWallViewVideos)">ListWallView_Videos</include> <!-- id = 58 -->
		<include condition="!Skin.HasSetting(VideoWallViewVideos)">VideoWallView_Videos</include> <!-- id = 580 -->
		<include condition="!Skin.HasSetting(ShowtimeViewVideos)">ShowtimeView_Videos</include> <!-- id = 65 -->
		<include condition="!Skin.HasSetting(PostersViewVideos)">PostersView_Videos</include> <!-- id = 55 -->
	</include>

	<include name="MusicViews">
		<control type="group">
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Generic</include> <!-- id = 50 -->
			<include condition="!Skin.HasSetting(SlideViewMusic)">SlideView_Music</include> <!-- id = 51 -->
			<include condition="!Skin.HasSetting(GalleryViewMusic)">GalleryView_Music</include> <!-- id = 52 -->
			<include condition="!Skin.HasSetting(TilesViewMusic)">TilesView_Music</include> <!-- id = 562 -->
			<include condition="!Skin.HasSetting(BannersViewMusic)">BannersView_Music</include> <!-- id = 57 -->
			<include condition="!Skin.HasSetting(BelloViewMusic)">BelloView_Generic</include> <!-- id = 660 -->
			<include condition="!Skin.HasSetting(ThumbnailsMusic)">ThumbnailsView_Generic</include> <!-- id = 56 -->
			<include condition="!Skin.HasSetting(ThumbnailsMusic)">ThumbnailsView_Multisize</include> <!-- id = 560 -->
		</control>
		<include condition="!Skin.HasSetting(3DWallViewMusic)">3DWallView_Music</include> <!-- id = 59 -->
	</include>

	<include name="AddonsViews">
		<control type="group">
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Generic</include> <!-- id = 50 -->
			<include>BelloView_Generic</include> <!-- id = 660 -->
			<include>ThumbnailsView_Generic</include> <!-- id = 56 -->
			<include>ThumbnailsView_Multisize</include> <!-- id = 560 -->
		</control>
	</include>

	<include name="PicturesViews">
		<control type="group">
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Generic</include> <!-- id = 50 -->
			<include>GalleryView_Music</include> <!-- id = 52 -->
			<include>BelloView_Generic</include> <!-- id = 660 -->
			<include>ThumbnailsView_Generic</include> <!-- id = 56 -->
			<include>ThumbnailsView_Multisize</include> <!-- id = 560 -->
		</control>
	</include>

	<include name="VideoPlaylistViews">
		<control type="group">
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Videos</include> <!-- id = 50 -->
			<include>BelloView_VideoLibrary</include> <!-- id = 66 -->
		</control>
	</include>

	<include name="MusicPlaylistViews">
		<control type="group">
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Generic</include> <!-- id = 50 -->
			<include>BelloView_Generic</include> <!-- id = 660 -->
			<include>ThumbnailsView_Multisize</include> <!-- id = 560 -->
		</control>
	</include>

	<include name="FavouritesBrowserViews">
		<control type="group">
			<include>InfoDialogsVisible_ZoomAnimation</include>
			<include>ListView_Generic</include>
			<include>BelloView_Generic</include>
		</control>
	</include>

	<expression name="BelloViewVideos_66">$EXP[MoviesTVShowsCondition] | Container.Content(Episodes) | Container.Content(MusicVideos) | Container.Content(Actors) | Window.IsVisible(VideoPlaylist)</expression>
	<expression name="SlideViewVideos_51">$EXP[MoviesTVShowsCondition] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="GalleryViewVideos_52">[$EXP[MoviesTVShowsCondition] | Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="ThumbnailsViewPosters_561">$EXP[MoviesTVShowsCondition] | Container.Content(MusicVideos) | Container.Content(Actors) | Window.IsVisible(VideoPlaylist)</expression>
	<expression name="TilesViewVideos_562">[$EXP[MoviesTVShowsCondition] | Container.Content(Episodes) | Container.Content(MusicVideos)] + !$EXP[MoviesSetsCondition] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="PostersViewVideos_55">[Container.Content(Movies) | Container.Content(Sets)] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="PostersViewVideos2_64">[Container.Content(Movies) | Container.Content(Sets)] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="BannersViewVideos_57">[$EXP[MoviesTVShowsCondition] | Container.Content(Episodes)] + !$EXP[MoviesSetsCondition] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="NetflixViewVideos_59">[$EXP[MoviesTVShowsCondition] | Container.Content(Episodes)] + !String.StartsWith(Container.FolderPath,plugin://)</expression>
	<expression name="WallViewsCondition">[Container.Content(Movies) | Container.Content(TVShows)] + !String.StartsWith(Container.FolderPath,plugin://)</expression>

	<expression name="SlideViewMusic_51">$EXP[MusicCondition] | Container.Content(MusicVideos)</expression>
	<expression name="GalleryViewMusic_52">[$EXP[MusicCondition] | Container.Content(MusicVideos)] + ![String.StartsWith(Container.Folderpath,plugin://) | String.IsEmpty(Container.Folderpath)]</expression>
	<expression name="TilesViewMusic_562">$EXP[MusicCondition] | Container.Content(MusicVideos) | Window.IsVisible(MusicPlaylist)</expression>
	<expression name="BannersViewMusic_57">$EXP[MusicCondition] | Container.Content(MusicVideos) | Window.IsVisible(MusicPlaylist)</expression>
	<expression name="3DWallViewMusic_59">$EXP[MusicCondition]</expression>

	<expression name="GalleryViewPictures_52">Container.HasFiles + !Container.Content(addons)</expression>

	<expression name="ThumbnailsViewVideos_560">[Container.Content(Episodes) | [Container.Content(Videos) + String.StartsWith(Container.FolderPath,plugin://)]] + ![String.StartsWith(Container.FolderPath,plugin://) + $EXP[MoviesTVShowsCondition]]</expression>
	<expression name="ThumbnailsViewMusic_560">$EXP[MusicCondition] | Container.Content(MusicVideos) | Window.IsVisible(MusicPlaylist)</expression>
	<expression name="ThumbnailsViewPictures_560">![Container.Content() | Container.Content(Addons)]</expression>
	<expression name="ThumbnailsViewAddons_560">Container.Content(Addons)</expression>

	<expression name="BelloViewGeneric_660">![Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Sets) | String.IsEqual(ListItem.DBType,set) | Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo) | Window.IsVisible(VideoPlaylist) | Container.Content(Actors)]</expression>
	<expression name="ThumbnailsViewGeneric_56">![$EXP[MusicCondition] | $EXP[MoviesTVShowsCondition] | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo) | Window.IsVisible(VideoPlaylist) | Container.Content(Actors) | Container.Content(Addons) | Container.Content(Images) | [Container.Content(Videos) + String.StartsWith(Container.FolderPath,plugin://)]]</expression>

	<expression name="MoviesSetsCondition">[Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets/) | String.IsEqual(ListItem.DBType,set)]</expression>
	<expression name="MoviesTVShowsCondition">Container.Content(Movies) | $EXP[MoviesSetsCondition] | Container.Content(TVShows) | Container.Content(Seasons)</expression>
	<expression name="MusicCondition">Container.Content(Artists) | Container.Content(Albums) | Container.Content(Songs)</expression>
	<expression name="GenericVideoFilesCondition">[Window.IsVisible(Videos) + Container.Content(Files) + Container.HasFiles] | Container.Content(Videos) | Container.Content(Favourites)</expression>
	<expression name="VideoDBTypesCondition">String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,musicvideo)</expression>

	<expression name="InfoDialogsCondition">!Window.IsActive(progressdialog) + !Window.IsActive(DialogConfirm.xml) + !Window.IsActive(FileBrowser) + !Window.IsActive(TextViewer)	+ !Window.IsActive(SelectDialog) + !Window.IsActive(DialogSelect.xml) + !Window.IsActive(VirtualKeyboard) + !Window.IsActive(NumericInput)</expression>	
	
	<expression name="ContainerIsUpdating">![Container(50).IsUpdating | Container(51).IsUpdating | Container(52).IsUpdating | Container(53).IsUpdating | Container(54).IsUpdating | Container(55).IsUpdating | Container(56).IsUpdating | Container(57).IsUpdating | Container(58).IsUpdating | Container(59).IsUpdating | Container(64).IsUpdating | Container(65).IsUpdating | Container(66).IsUpdating | Container(560).IsUpdating | Container(561).IsUpdating | Container(562).IsUpdating| Container(563).IsUpdating| Container(660).IsUpdating]</expression>

	<expression name="CustomSearchCondition">[String.IsEqual(Window(home).Property(TMDBSearch),true) | String.IsEqual(Window(home).Property(YouTubeSearch),true) | String.IsEqual(Window(home).Property(AddonsSearch),true)]</expression>

	<expression name="VideosThumbsSize">[$EXP[GenericVideoFilesCondition] + Skin.HasSetting(ShowSmallVideoThumbs)]</expression>
	<expression name="MusicThumbsSize">[$EXP[MusicCondition] + Skin.HasSetting(ShowSmallMusicThumbs)]</expression>
	<expression name="PicturesThumbsSize">[Container.Content(Images) + Skin.HasSetting(ShowSmallPicturesThumbs)]</expression>
	<expression name="AddonsThumbsSize">[Container.Content(Addons) + Skin.HasSetting(ShowSmallAddonsThumbs)]</expression>

	<expression name="CustumHubsCondition">[Window.IsVisible(Custom_HubMovies.xml) | Window.IsVisible(Custom_HubTVShows.xml) | Window.IsVisible(Custom_HubMusic.xml)]</expression>

	<!--
	<expression name="VideoPlayerHasNoContent">Player.HasVideo + Player.Playing + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv) | Pvr.IsPlayingRecording]</expression>
	<expression name="VideoPlayerHasContent">VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos) | Pvr.IsPlayingRecording</expression>
	-->

	<!-- =================== -->
	<!-- ==== List View ==== -->
	<!-- =================== -->
	<include name="ListViewVars">
		<left>34</left>
		<top>150</top>
		<width>1190</width>
		<height>450</height>
		<onleft>6050</onleft>
		<onright>9444</onright>
		<onup>50</onup>
		<ondown>50</ondown>
		<oninfo condition="Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets/)">SetProperty(ShowTextViewer,1,home)</oninfo>
		<oninfo condition="Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets/)">RunScript(script.embuary.helper,action=textviewer,header=$INFO[ListItem.Label],message='"$VAR[GlobalPlotDescription]"')</oninfo>
		<oninfo condition="Container.Content(Actors) | Container.Content(Directors)">RunScript(plugin.video.themoviedb.helper,add_query=$INFO[ListItem.Label],type=person,call_auto=1130,return)</oninfo>
		<viewtype label="535">List</viewtype>
		<pagecontrol>6050</pagecontrol>
		<scrolltime tween="cubic" easing="out">300</scrolltime>
	</include>

	<include name="ListView_LabelOne">
		<param name="textcolor">viewsinfo</param>
		<param name="label">$VAR[ListView_FirstLabelVar]</param>
		<param name="fallback">․ ․ ․</param>
		<definition>
			<control type="label">
				<left>5</left>
				<top>0</top>
				<width>65</width>
				<height>44</height>
				<font>FontSize_22</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<align>center</align>
				<label fallback="$PARAM[fallback]">$PARAM[label]</label>
				<visible>!ListItem.IsParentFolder</visible>
			</control>
		</definition>
	</include>
	<include name="ListView_LabelTwo">
		<param name="left">93</param>
		<param name="textcolor">viewsinfo</param>
		<param name="label">$VAR[ListItem_LabelVar]</param>
		<definition>
			<control type="label">
				<left>$PARAM[left]</left>
				<top>0</top>
				<width>420</width>
				<height>44</height>
				<font>FontSize_22</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<align>$PARAM[align]</align>
				<label fallback="$PARAM[fallback]">$PARAM[label]</label>
				<visible>$PARAM[visible]</visible>
				<animation effect="slide" start="0,0" end="$PARAM[animation_end]" time="220" tween="sine" easing="inout" condition="$PARAM[animation_condition]">Conditional</animation>
			</control>
		</definition>
	</include>

	<include name="ListView_UnWatched">
		<param name="colordiffuse">viewsinfo</param>
		<definition>
			<control type="image">
				<left>70</left>
				<top>14</top>
				<width>16</width>
				<height>16</height>
				<texture background="true" colordiffuse="$PARAM[colordiffuse]">overlays/unwatched/list/UnWatched.png</texture>
				<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>

	<include name="ListView_Arrows">
		<control type="group">
			<left>62</left>
			<top>135</top>
			<visible>!String.IsEmpty(ListItem.Label)</visible>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>24</width>
				<height>20</height>
				<texture colordiffuse="viewsinfo">views/scrollbar/arrow.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>460</top>
				<width>24</width>
				<height>20</height>
				<texture colordiffuse="viewsinfo" flipy="true">views/scrollbar/arrow.png</texture>
			</control>
		</control>
	</include>

	<include name="ListView_Scrollbar">
		<control type="scrollbar" id="6050">
			<left>32</left>
			<top>165</top>
			<width>6</width>
			<height>425</height>
			<texturesliderbackground></texturesliderbackground>
			<texturesliderbar border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbar>
			<texturesliderbarfocus border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbarfocus>
			<textureslidernib></textureslidernib>
			<textureslidernibfocus></textureslidernibfocus>
			<onleft>9111</onleft>
			<onright>50</onright>
			<showonepage>false</showonepage>
			<orientation>vertical</orientation>
			<animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(6050) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>

	<include name="ListView_PosterAndFanart">
		<control type="group">
			<left>384</left>
			<top>-8</top>
			<control type="image">
				<width>1121</width>
				<height>592</height>
				<texture background="true" colordiffuse="$VAR[Textures.GlobalColor]">views/list/shine.png</texture>
				<visible>!Skin.Hassetting(DisableVideoListView_PosterGlow)</visible>
			</control>
			<!-- Poster Art -->
			<control type="image">
				<left>222</left>
				<top>145</top>
				<width>650</width>
				<height>302</height>
				<texture background="true" border="70">views/other/panel.png</texture>
				<bordersize>21</bordersize>
			</control>
			<control type="image">
				<left>247</left>
				<top>170</top>
				<width>172</width>
				<height>252</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_poster_tp.png">$VAR[VarArtPoster]</texture>
				<bordertexture border="15">thumbs/thumb_border.png</bordertexture>
				<fadetime>IconCrossfadeTime</fadetime>
				<bordersize>6</bordersize>
			</control>
			<control type="image">
				<left>247</left>
				<top>170</top>
				<width>172</width>
				<height>252</height>
				<texture background="true">views/list/overlay_poster.png</texture>
				<bordersize>6</bordersize>
			</control>
			<!-- Fanart Art-->
			<control type="image">
				<left>415</left>
				<top>170</top>
				<width>432</width>
				<height>252</height>
				<texture background="true" border="15">thumbs/thumb_border.png</texture>
			</control>
			<control type="image">
				<left>415</left>
				<top>170</top>
				<width>432</width>
				<height>252</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtFanart]</texture>
				<fadetime>IconCrossfadeTime</fadetime>
				<bordersize>6</bordersize>
				<visible>![[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)]
				+ ![[Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)]</visible>
			</control>
			<control type="image">
				<left>415</left>
				<top>170</top>
				<width>432</width>
				<height>252</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtFanart]</texture>
				<fadetime>IconCrossfadeTime</fadetime>
				<bordersize>40</bordersize>
				<visible>[[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)]
				| [[Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)]</visible>
			</control>
			<control type="image">
				<left>415</left>
				<top>170</top>
				<width>432</width>
				<height>252</height>
				<texture background="true">views/list/overlay_fanart.png</texture>
				<bordersize>6</bordersize>
			</control>
			<!-- StarRating -->
			<control type="image">
				<left>276</left>
				<top>434</top>
				<width>120</width>
				<height>23</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture background="true">$VAR[StarRating]</texture>
				<visible>!$EXP[MoviesSetsCondition]</visible>
			</control>
			<!-- Info -->
			<control type="label">
				<left>422</left>
				<top>432</top>
				<width>430</width>
				<font>FontSize_20</font>
				<align>center</align>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<label>$VAR[ListView_BlueLabelVar]</label>
			</control>
			<control type="textbox">
				<left>422</left>
				<top>458</top>
				<width>428</width>
				<height>145</height>
				<font>TextboxFont_22</font>
				<textcolor>viewsinfo</textcolor>
				<align>justify</align>
				<autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<label>$VAR[GlobalPlotDescription]</label>
				<visible>!$EXP[MoviesSetsCondition]</visible>
			</control>
			<control type="textbox">
				<left>245</left>
				<top>429</top>
				<width>605</width>
				<height>175</height>
				<font>TextboxFont_22</font>
				<textcolor>viewsinfo</textcolor>
				<align>justify</align>
				<autoscroll delay="4000" time="2000" repeat="8000">!Window.IsActive(Textviewer)</autoscroll>
				<label>$VAR[GlobalPlotDescription]</label>
				<visible>$EXP[MoviesSetsCondition]</visible>
			</control>
			<control type="grouplist">
				<left>243</left>
				<top>466</top>
				<width>195</width>
				<height>200</height>
				<itemgap>1.5</itemgap>
				<visible>!String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>170</width>
					<label>$VAR[ListView_InfoRow1]</label>
					<font>TextboxFont_18</font>
					<textcolor>viewsinfo</textcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>170</width>
					<label>$VAR[ListView_InfoRow2]</label>
					<font>TextboxFont_18</font>
					<textcolor>viewsinfo</textcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>170</width>
					<label>$VAR[ListView_InfoRow3]</label>
					<font>TextboxFont_18</font>
					<textcolor>viewsinfo</textcolor>
				</control>
			</control>
		</control>
	</include>

	<include name="ListView_ThumbAndFanart">
		<control type="group">
			<left>393</left>
			<top>12</top>
			<control type="image">
				<width>1108</width>
				<height>525</height>
				<texture background="true" colordiffuse="$VAR[Textures.GlobalColor]">views/list/shine.png</texture>
				<visible>![Skin.Hassetting(DisableAddonsListView_PosterGlow) + Window.IsVisible(AddonBrowser.xml) + Container.HasFiles]</visible>
				<visible>![Skin.Hassetting(DisableVideoListView_PosterGlow) + String.IsEqual(Container.FolderPath,addons://sources/video)]</visible>
				<visible>![Skin.Hassetting(DisableMusicListView_ThumbGlow) + [Container.Content(Albums) | Container.Content(Artists) | Container.Content(Songs) | String.IsEqual(Container.FolderPath,addons://sources/audio)]]</visible>
				<visible>![Skin.Hassetting(DisablePicturesListView_PosterGlow) + Window.IsVisible(MyPics.xml) + Container.HasFiles]</visible>
			</control>
			<!-- Thumb -->
			<control type="image">
				<left>218</left>
				<top>125</top>
				<width>645</width>
				<height>274</height>
				<texture background="true" border="70">views/other/panel.png</texture>
				<bordersize>21</bordersize>
			</control>
			<control type="image">
				<left>243</left>
				<top>150</top>
				<width>226</width>
				<height>224</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<bordertexture border="15">thumbs/thumb_border.png</bordertexture>
				<fadetime>IconCrossfadeTime</fadetime>
				<bordersize>6</bordersize>
			</control>
			<control type="image">
				<left>243</left>
				<top>150</top>
				<width>226</width>
				<height>224</height>
				<texture background="true" >views/list/overlay_square.png</texture>
				<bordersize>6</bordersize>
			</control>
			<!-- Fanart -->
			<control type="image">
				<left>465</left>
				<top>150</top>
				<width>373</width>
				<height>224</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtMusicFanart]</texture>
				<bordertexture border="15">thumbs/thumb_border.png</bordertexture>
				<fadetime>IconCrossfadeTime</fadetime>
				<bordersize>6</bordersize>
			</control>
			<control type="image">
				<left>465</left>
				<top>150</top>
				<width>373</width>
				<height>224</height>
				<texture background="true" >views/list/overlay_fanart.png</texture>
				<bordersize>6</bordersize>
			</control>
			<!-- StarRating -->
			<control type="image">
				<left>298</left>
				<top>397</top>
				<width>120</width>
				<height>23</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture background="true">$VAR[StarRating]</texture>
			</control>
			<!-- Info -->
			<control type="label">
				<left>473</left>
				<top>393</top>
				<width>370</width>
				<font>FontSize_20</font>
				<align>center</align>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<label>$VAR[ListView_BlueLabelVar]</label>
			</control>
			<control type="textbox">
				<left>427</left>
				<top>435</top>
				<width>410</width>
				<height>145</height>
				<font>TextboxFont_22</font>
				<textcolor>viewsinfo</textcolor>
				<align>justify</align>
				<autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<label fallback="195">$VAR[GlobalPlotDescription]</label>
			</control>
			<control type="grouplist">
				<left>243</left>
				<top>443</top>
				<width>195</width>
				<height>200</height>
				<itemgap>1.5</itemgap>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListView_InfoRow1]</label>
					<font>TextboxFont_18</font>
					<textcolor>viewsinfo</textcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListView_InfoRow2]</label>
					<font>TextboxFont_18</font>
					<textcolor>viewsinfo</textcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListView_InfoRow3]</label>
					<font>TextboxFont_18</font>
					<textcolor>viewsinfo</textcolor>
				</control>
			</control>
		</control>
	</include>

	<include name="ListView_Thumb">
		<control type="group">
			<right>45</right>
			<top>163</top>
			<width>256</width>
			<visible>$EXP[ContainerIsUpdating]</visible>
			<visible>Control.IsVisible(50) + !String.IsEmpty(ListItem.Label)</visible>
			<control type="image">
				<width>256</width>
				<height>400</height>
				<aspectratio align="right" aligny="top">keep</aspectratio>
				<texture>$INFO[Listitem.Icon]</texture>
				<bordertexture border="31">views/other/panel.png</bordertexture>
				<bordersize>ThumbsBorderSize</bordersize>
				<visible>![String.Contains(ListItem.FolderPath,/genres/) | String.Contains(ListItem.FolderPath,/studios/)]</visible>
			</control>
			<control type="image">
				<width>256</width>
				<height>256</height>
				<texture background="true"  border="31">views/other/panel.png</texture>
				<visible>[String.Contains(ListItem.FolderPath,/genres/) | String.Contains(ListItem.FolderPath,/studios/)]</visible>
			</control>
			<control type="image">
				<width>256</width>
				<height>256</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="DefaultGenre.png">$VAR[ViewsGenres]</texture>
				<bordersize>ThumbsBorderSize</bordersize>
				<visible>String.StartsWith(ListItem.FolderPath,videodb://movies/genres/) | String.StartsWith(ListItem.FolderPath,videodb://tvshows/genres/)</visible>
			</control>
			<control type="image">
				<width>256</width>
				<height>256</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="DefaultMusicGenres.png">$VAR[ViewsGenres]</texture>
				<bordersize>ThumbsBorderSize</bordersize>
				<visible>String.StartsWith(ListItem.FolderPath,musicdb://genres/) | String.StartsWith(ListItem.FolderPath,videodb://musicvideos/genres/)</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>20</top>
				<width>216</width>
				<height>216</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture background="true" fallback="DefaultStudios.png">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
				<bordersize>ThumbsBorderSize</bordersize>
				<visible>String.Contains(ListItem.FolderPath,/studios/)</visible>
			</control>
		</control>
	</include>


	<!-- ====================== -->
	<!-- ==== Banners View ==== -->
	<!-- ====================== -->
	<include name="BannersView_Panel">
		<control type="image">
			<left>11</left>
			<top>11</top>
			<width>719</width>
			<height>231</height>
			<texture background="true" border="39">views/other/panel.png</texture>
		</control>
	</include>


	<!-- ========================= -->
	<!-- ==== Thumbnails View ==== -->
	<!-- ========================= -->
	<include name="Thumbnails_PanelVars">
		<left>40</left>
		<top>108</top>
		<width>1200</width>
		<height>485</height>
		<onleft>9111</onleft>
		<onright>60560</onright>
		<onup>560</onup>
		<ondown>560</ondown>
		<orientation>vertical</orientation>
		<pagecontrol>60560</pagecontrol>
		<preloaditems>6</preloaditems>
		<viewtype label="31085">Thumbs</viewtype>
		<scrolltime tween="Quadratic" easing="out">350</scrolltime>
	</include>

	<include name="ThumbnailsLayout">
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<texture border="30">views/other/panel.png</texture>
		</control>
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<texture background="true" fallback="DefaultGenre.png">$VAR[ThumbnailsArt]</texture>
			<bordersize>ThumbsBorderSize</bordersize>
			<visible>!Window.IsVisible(MyMusicNav.xml)</visible>
		</control>
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<texture background="true" fallback="DefaultMusicGenres.png">$VAR[ThumbnailsArt]</texture>
			<bordersize>ThumbsBorderSize</bordersize>
			<visible>!Window.IsVisible(MyVideoNav.xml)</visible>
		</control>
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<texture background="true">$VAR[AddonStatus]</texture>
			<bordersize>ThumbsBorderSize</bordersize>
		</control>
	</include>

	<include name="ThumbnailsBig_ItemLayout">
		<include content="ThumbnailsLayout">
			<param name="width" value="231"/>
			<param name="height" value="234"/>
			<param name="colordiffuse" value="ffffffff"/>
		</include>
	</include>

	<include name="ThumbnailsSmall_ItemLayout">
		<include content="ThumbnailsLayout">
			<param name="width" value="163"/>
			<param name="height" value="154"/>
			<param name="colordiffuse" value="ffffffff"/>
		</include>
	</include>

	<include name="ThumbnailsBig_FocusedLayout">
		<include content="ThumbnailsLayout">
			<param name="width" value="231"/>
			<param name="height" value="234"/>
			<param name="colordiffuse" value="$VAR[ColorDiffuseThumbs]"/>
		</include>
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>231</width>
			<height>234</height>
			<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
			<texture border="30">views/other/focus_panel.png</texture>
			<include>ThumbnailsFocusAnimation</include>
		</control>
	</include>

	<include name="ThumbnailsSamll_FocusedLayout">
		<include content="ThumbnailsLayout">
			<param name="width" value="163"/>
			<param name="height" value="154"/>
			<param name="colordiffuse" value="$VAR[ColorDiffuseThumbs]"/>
		</include>
		<control type="image">
			<left>5</left>
			<top>5</top>
			<width>163</width>
			<height>154</height>
			<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
			<texture border="30">views/other/focus_panel.png</texture>
			<include>ThumbnailsFocusAnimation</include>
		</control>
	</include>

	<include name="ThumbnailsGenericThumb">
		<param name="width">222</param>
		<param name="height">210</param>
		<param name="aspectratio">scale</param>
		<definition>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio>$PARAM[aspectratio]</aspectratio>
				<texture background="true" colordiffuse="$PARAM[colordiffuse]" fallback="$PARAM[fallback]">$VAR[ThumbnailsArt]</texture>
				<bordersize>ThumbsBorderSize</bordersize>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>


	<include name="Thumbnails_Scrollbar">
		<control type="scrollbar" id="60560">
			<right>30</right>
			<top>100</top>
			<width>6</width>
			<height>488</height>
			<texturesliderbackground></texturesliderbackground>
			<texturesliderbar border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbar>
			<texturesliderbarfocus border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbarfocus>
			<textureslidernib></textureslidernib>
			<textureslidernibfocus></textureslidernibfocus>
			<onleft>560</onleft>
			<onright>9444</onright>
			<showonepage>false</showonepage>
			<orientation>vertical</orientation>
			<animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(60560) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>


	<!-- ==================== -->
	<!-- ==== Tiles View ==== -->
	<!-- ==================== -->
	<include name="TilesViewLayout">
		<control type="group">
			<left>10</left>
			<top>3</top>
			<control type="label">
				<left>$PARAM[text_left]</left>
				<top>10</top>
				<width>375</width>
				<height>18</height>
				<label>$VAR[ListItem_LabelVar]</label>
				<font>FontSize_22B</font>
				<textcolor>$PARAM[titletextcolor]</textcolor>
				<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
				<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
			</control>
			<control type="label">
				<left>$PARAM[text_left]</left>
				<width>375</width>
				<height>84</height>
				<label>$VAR[ListItem_SubLabelVar]</label>
				<font>FontSize_22</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
				<selectedcolor>$PARAM[textcolor]</selectedcolor>
				<visible>!Container.Content(Episodes)</visible>
			</control>
			<control type="label">
				<left>$PARAM[text_left]</left>
				<width>375</width>
				<height>84</height>
				<label>$INFO[ListItem.TVShowTitle]</label>
				<font>FontSize_22</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
				<selectedcolor>$PARAM[textcolor]</selectedcolor>
				<visible>Container.Content(Episodes)</visible>
			</control>
		</control>
		<control type="image">
			<left>-5</left>
			<top>60</top>
			<width>400</width>
			<height>230</height>
			<texture background="true" border="31">thumbs/thumb_border.png</texture>
		</control>
		<control type="image">
			<top>65</top>
			<width>390</width>
			<height>220</height>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<aspectratio aligny="center" align="center">keep</aspectratio>
			<texture background="true">$VAR[VarArtMusicFanart]</texture>
			<bordersize>1</bordersize>
			<visible>Window.IsVisible(MyMusicNav.xml)</visible>
		</control>
		<control type="image">
			<top>65</top>
			<width>390</width>
			<height>220</height>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<aspectratio aligny="center" align="center">scale</aspectratio>
			<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtFanart]</texture>
			<bordersize>1</bordersize>
			<visible>!Window.IsVisible(MyMusicNav.xml) + ![Container.Content(TVShows) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)]
				+ ![[Container.Content(TVShows) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
				+ ![Container.Content(Seasons) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)]
				+ ![[Container.Content(Seasons) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))]
				+ ![Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),2)]
				+ ![[Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
			</visible>
		</control>
		<control type="image">
			<top>65</top>
			<width>390</width>
			<height>220</height>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<aspectratio aligny="center" align="center">scale</aspectratio>
			<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[LandscapeVars]</texture>
			<bordersize>1</bordersize>
			<visible>[[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)]
				| [Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),2)]
			</visible>
		</control>
		<control type="image">
			<left>10</left>
			<top>75</top>
			<width>370</width>
			<height>200</height>
			<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
			<aspectratio aligny="center" align="center">keep</aspectratio>
			<texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[ClearlogoVars]</texture>
			<bordersize>1</bordersize>
			<visible>[[Container.Content(TVShows) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
				| [[Container.Content(Seasons) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))]
				| [[Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
			</visible>
		</control>
		<control type="image">
			<top>65</top>
			<width>390</width>
			<height>220</height>
			<texture background="true">overlays/unwatched/tiles/UnWatched.png</texture>
			<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
			<bordersize>1</bordersize>
		</control>
		<control type="image">
			<left>0</left>
			<top>268</top>
			<width>390</width>
			<height>220</height>
			<colordiffuse>$PARAM[textcolor]</colordiffuse>
			<texture background="true">thumbs/fallback_sets.png</texture>
			<visible>$EXP[MoviesSetsCondition]</visible>
		</control>
		<control type="group">
			<left>10</left>
			<top>240</top>
			<control type="textbox">
				<left>$PARAM[text_left]</left>
				<top>55</top>
				<width>370</width>
				<height>120</height>
				<font>TextboxFont_22</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
				<label>$VAR[GlobalPlotDescription]</label>
				<autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<visible>!$EXP[MoviesSetsCondition]</visible>
			</control>
			<control type="label">
				<left>$PARAM[text_left]</left>
				<top>195</top>
				<width>370</width>
				<height>22</height>
				<textcolor>$PARAM[textcolor]</textcolor>
				<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
				<selectedcolor>$PARAM[textcolor]</selectedcolor>
				<font>FontSize_22</font>
				<label>$VAR[ListItem_SubLabelTwoVar]</label>
				<visible>Container.Content(Artists) | Container.Content(Albums) | Container.Content(Songs)</visible>
			</control>
			<!-- Small Down Info -->
			<control type="group">
				<left>$PARAM[text_left]</left>
				<top>195</top>
				<visible>![Container.Content(Artists) | Container.Content(Albums) | Container.Content(Songs)]</visible>
				<include>SmallDownInfo_Top250</include>
				<control type="image">
					<colordiffuse>$PARAM[textcolor]</colordiffuse>
					<include>SmallDownInfo_Def3DFlags</include>
					<animation effect="slide" start="0,0" end="60,0" time="0" tween="sine" easing="inout" condition="!String.IsEmpty(ListItem.Top250)">Conditional</animation>
				</control>
				<control type="image">
					<colordiffuse>$PARAM[textcolor]</colordiffuse>
					<include>SmallDownInfo_MPAATVFlags</include>
				</control>
				<control type="label">
					<left>41</left>
					<top>0</top>
					<width>335</width>
					<textcolor>$PARAM[textcolor]</textcolor>
					<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					<selectedcolor>$PARAM[textcolor]</selectedcolor>
					<include>SmallDownInfo_SmallGlobalInfo</include>
					<visible>!String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
					<animation effect="slide" start="0,0" end="-45,0" time="0" tween="sine" easing="inout" condition="String.IsEmpty(ListItem.VideoResolution)">Conditional</animation>
					<animation effect="slide" start="0,0" end="68,0" time="0" tween="sine" easing="inout" condition="[Container.Content(TVShows) | Container.Content(Seasons)] + !String.IsEmpty(ListItem.mpaa)">Conditional</animation>
					<animation effect="slide" start="0,0" end="60,0" time="0" tween="sine" easing="inout" condition="!String.IsEmpty(ListItem.Top250)">Conditional</animation>
				</control>
			</control>
		</control>
	</include>


	<!-- =============== -->
	<!-- Small Down Info -->
	<!-- =============== -->
	<include name="SmallDownInfo_Def3DFlags">
		<width>36</width>
		<height>24</height>
		<colordiffuse>viewsinfo</colordiffuse>
		<aspectratio>keep</aspectratio>
		<texture>$VAR[ViewsDef3DFlags]</texture>
		<visible>[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.VideoResolution)</visible>
	</include>
	<include name="SmallDownInfo_Sets">
		<width>36</width>
		<height>24</height>
		<colordiffuse>viewsinfo</colordiffuse>
		<aspectratio>keep</aspectratio>
		<texture background="true">flags/sets/sets.png</texture>
		<visible>$EXP[MoviesSetsCondition] + !ListItem.IsParentFolder</visible>
	</include>
	<include name="SmallDownInfo_MPAATVFlags">
		<width>56</width>
		<height>24</height>
		<colordiffuse>viewsinfo</colordiffuse>
		<aspectratio>keep</aspectratio>
		<texture background="true" fallback="flags/mpaa/tv/tv-na.png">$INFO[ListItem.mpaa,flags/mpaa/tv/,.png]</texture>
		<visible>[Container.Content(TVShows) | Container.Content(Seasons)] + !String.IsEmpty(ListItem.mpaa)</visible>
	</include>
	<include name="SmallDownInfo_SmallGlobalInfo">
		<height>24</height>
		<width>auto</width>
		<textcolor>viewsinfo</textcolor>
		<selectedcolor>viewsinfo</selectedcolor>
		<font>FontSize_22</font>
		<scroll>false</scroll>
		<label>$VAR[SmallGlobalInfo]</label>
	</include>
	<include name="SmallDownInfo_OverlayUnWatched">
		<width>24</width>
		<height>24</height>
		<colordiffuse>viewsinfo</colordiffuse>
		<aspectratio>keep</aspectratio>
		<texture background="true">overlays/unwatched/info/UnWatched.png</texture>
		<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
	</include>

	<include name="SmallDownInfo_Top250">
		<control type="group">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>52</width>
			<height>24</height>
			<visible>!String.IsEmpty(Container().ListItem.Top250)</visible>
			<control type="image">
				<width>52</width>
				<height>24</height>
				<texture background="true">views/other/imdb_flag.png</texture>
			</control>
			<control type="label">
				<width>52</width>
				<height>24</height>
				<font>FontSize_16B</font>
				<textcolor>FF000000</textcolor>
				<shadowcolor>22FFFFFF</shadowcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[Container().ListItem.Top250,#]</label>
			</control>
		</control>
	</include>

	<include name="PlotTextbox">
		<param name="textcolor">viewsinfo</param>
		<param name="font">FontSize_22</param>
		<param name="label">$VAR[GlobalPlotDescription]</param>
		<definition>
			<control type="textbox">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<font>$PARAM[font]</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<autoscroll delay="6000" time="2000" repeat="6000">Skin.HasSetting(AutoScroll)</autoscroll>
				<label>$PARAM[label]</label>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>

	<include name="ThumbnailsOnThumbInfo">
		<param name="left">158</param>
		<param name="top">120</param>
		<param name="width">66</param>
		<param name="label">$VAR[ThumbnailsOnThumbLabel]</param>
		<param name="visible">true</param>
		<definition>
			<control type="image">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>25</height>
				<aspectratio>keep</aspectratio>
				<texture>views/other/episode_number.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="label">
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>66</width>
				<height>25</height>
				<font>FontSize_15B</font>
				<align>center</align>
				<label>$PARAM[label]</label>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>

	<include name="ViewsBigInfo_BigLabel">
		<param name="textcolor">viewsinfo</param>
		<definition>
			<control type="label">
				<height>60</height>
				<width>auto</width>
				<textcolor>$PARAM[textcolor]</textcolor>
				<font>FontSize_50</font>
				<label>$PARAM[label]</label>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	<include name="ViewsBigInfo_SmallLabel">
		<param name="textcolor">viewsinfo</param>
		<definition>
			<control type="label">
				<height>89</height>
				<width>auto</width>
				<textcolor>$PARAM[textcolor]</textcolor>
				<font>FontSize_15B</font>
				<label>$PARAM[label]</label>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>

	<include name="ViewsBigInfo_GroupListVertical">
		<param name="align">right</param>
		<param name="textcolor">viewsinfo</param>
		<definition>
			<control type="grouplist">
				<width>100%</width>
				<height>80</height>
				<itemgap>0</itemgap>
				<visible>$PARAM[visible]</visible>
				<control type="label">
					<height>20</height>
					<width>auto</width>
					<align>$PARAM[align]</align>
					<textcolor>$PARAM[textcolor]</textcolor>
					<font>FontSize_15B</font>
					<label>$PARAM[label_small] </label>
				</control>
				<control type="label">
					<height>40</height>
					<width>auto</width>
					<align>$PARAM[align]</align>
					<textcolor>$PARAM[textcolor]</textcolor>
					<font>FontSize_50</font>
					<label>$PARAM[label_big]</label>
				</control>
			</control>
		</definition>
	</include>

	<include name="ViewsBigInfo_Horizontal">
		<include content="ViewsBigInfo_BigLabel">
			<param name="label" value="$VAR[MovieSetCount]"/>
			<param name="visible" value="$EXP[MoviesSetsCondition] + ![Control.IsVisible(53) | Control.IsVisible(54)]"/>
		</include>
		<include content="ViewsBigInfo_SmallLabel">
			<param name="label" value="$LOCALIZE[345]"/>
			<param name="visible" value="![String.IsEmpty(ListItem.Year) | $EXP[MoviesSetsCondition]]"/>
		</include>
		<include content="ViewsBigInfo_BigLabel">
			<param name="label" value="$INFO[ListItem.Year]"/>
			<param name="visible" value="!$EXP[MoviesSetsCondition]"/>
		</include>
		<control type="image">
			<width>50</width>
			<visible>![String.IsEmpty(ListItem.Rating) | String.StartsWith(ListItem.Path,videodb://movies/sets/)]</visible>
		</control>
		<include content="ViewsBigInfo_SmallLabel">
			<param name="label" value="$LOCALIZE[563]"/>
			<param name="visible" value="![String.IsEmpty(ListItem.Rating) | $EXP[MoviesSetsCondition]]"/>
		</include>
		<include content="ViewsBigInfo_BigLabel">
			<param name="label" value="$INFO[ListItem.Rating]"/>
			<param name="visible" value="!$EXP[MoviesSetsCondition]"/>
		</include>
		<control type="image">
			<width>50</width>
			<visible>![String.IsEmpty(ListItem.Top250) | String.StartsWith(ListItem.Path,videodb://movies/sets/)]</visible>
		</control>
		<include content="ViewsBigInfo_SmallLabel">
			<param name="textcolor" value="FFF2BE42"/>
			<param name="label" value="#IMDb"/>
			<param name="visible" value="![String.IsEmpty(ListItem.Top250) | $EXP[MoviesSetsCondition]]"/>
		</include>
		<include content="ViewsBigInfo_BigLabel">
			<param name="textcolor" value="FFF2BE42"/>
			<param name="label" value="$INFO[ListItem.Top250]"/>
			<param name="visible" value="!$EXP[MoviesSetsCondition]"/>
		</include>
		<control type="image">
			<width>50</width>
			<visible>!String.IsEmpty(ListItem.Duration)</visible>
		</control>
		<include content="ViewsBigInfo_SmallLabel">
			<param name="label" value="$LOCALIZE[180]"/>
			<param name="visible" value="![String.IsEmpty(ListItem.Duration) | $EXP[MoviesSetsCondition]]"/>
		</include>
		<include content="ViewsBigInfo_BigLabel">
			<param name="label" value="$VAR[ListItemDurationVar]"/>
			<param name="visible" value="!$EXP[MoviesSetsCondition]"/>
		</include>
		<control type="image">
			<width>50</width>
			<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
		</control>
		<include content="ViewsBigInfo_SmallLabel">
			<param name="label" value="$LOCALIZE[169]"/>
			<param name="visible" value="![String.IsEmpty(ListItem.VideoResolution) | $EXP[MoviesSetsCondition]]"/>
		</include>
		<include content="ViewsBigInfo_BigLabel">
			<param name="label" value="$INFO[ListItem.VideoResolution]"/>
			<param name="visible" value="!$EXP[MoviesSetsCondition]"/>
		</include>
	</include>

	<include name="GalleryView_OverlayArrows">
		<control type="image">
			<left>52</left>
			<top>214</top>
			<width>663</width>
			<height>160</height>
			<texture>views/gallery/title_overlay.png</texture>
		</control>
		<!-- Navigation Arrows -->
		<control type="image">
			<left>50</left>
			<top>153</top>
			<width>74</width>
			<height>74</height>
			<texture>views/gallery/arrow_left.png</texture>
		</control>
		<control type="image">
			<left>643</left>
			<top>153</top>
			<width>74</width>
			<height>74</height>
			<texture>views/gallery/arrow_right.png</texture>
		</control>
	</include>



	<!-- ========================= -->
	<!-- ==== Options TopMenu ==== -->
	<!-- ========================= -->
	<include name="OptionsTopMenuVars">
		<left>0</left>
		<top>63</top>
		<width>405</width>
		<height max="598">auto</height>
		<itemgap>0</itemgap>
		<onleft>50</onleft>
		<onright>50</onright>
		<onback condition="![Window.IsActive(TVGuide) | Window.IsActive(RadioGuide)]">50</onback>
		<visible>![Skin.HasSetting(EnableKioskMode) + ![Window.IsActive(ShutdownMenu) | Window.IsActive(ContextMenu)]]</visible>
	</include>

	<include name="OptionsTopMenuHeader">
		<param name="top_texture">dialogs/menus/topmenus_options.png</param>
		<param name="top_label">$LOCALIZE[31115]</param>
		<definition>
		<control type="image">
			<top>-12</top>
			<width>405</width>
			<height>75</height>
			<texture>$PARAM[top_texture]</texture>
		</control>
		<control type="label">
			<left>75</left>
			<label>$PARAM[top_label]</label>
			<include>TopBigLabel</include>
		</control>
		</definition>
	</include>
	<include name="OptionsTopMenuEnd">
		<param name="end_id">9998</param>
		<definition>
			<control type="image" id="$PARAM[end_id]">
				<width>405</width>
				<height>22</height>
				<texture>dialogs/menus/bottom.png</texture>
			</control>
			<include>TopMenusPlayerControls</include>
		</definition>
	</include>


	<include name="ViewsTopMenuHeader">
		<param name="top_texture">dialogs/menus/topmenus_options.png</param>
		<definition>
		<control type="image">
			<top>-12</top>
			<width>405</width>
			<height>75</height>
			<texture>$PARAM[top_texture]</texture>
		</control>
		<control type="label">
			<left>75</left>
			<label>$LOCALIZE[31116]</label>
			<include>TopBigLabel</include>
		</control>
		<!--
		<control type="image">
			<top>567</top>
			<width>405</width>
			<height>22</height>
			<texture>dialogs/menus/bottom.png</texture>
			<include>ViewsMenuAnimation</include>
		</control>
		-->
		</definition>
	</include>
	<include name="ViewsTopMenuEnd">
		<param name="end_id">9998</param>
		<definition>
			<control type="image" id="$PARAM[end_id]">
				<width>405</width>
				<height>22</height>
				<texture>dialogs/menus/bottom.png</texture>
			</control>
		</definition>
	</include>

	<include name="TopMenusPlayerControls">
		<control type="grouplist" id="180">
			<width>380</width>
			<height>53</height>
			<align>center</align>
			<itemgap>-8</itemgap>
			<onleft>180</onleft>
			<onright>180</onright>
			<orientation>horizontal</orientation>
			<visible>Player.HasMedia</visible>
			<control type="button" id="181">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/previous_fo.png</texturefocus>
				<texturenofocus>osd/controls/previous_nf.png</texturenofocus>
				<onclick>PlayerControl(Previous)</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="button" id="182">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/channelUP_fo.png</texturefocus>
				<texturenofocus>osd/controls/channelUP_nf.png</texturenofocus>
				<onclick>PlayerControl(Previous)</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="button" id="183">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/rw_fo.png</texturefocus>
				<texturenofocus>osd/controls/rw_nf.png</texturenofocus>
				<onclick>PlayerControl(Rewind)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="togglebutton" id="184">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/pause_fo.png</texturefocus>
				<texturenofocus>osd/controls/pause_nf.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/play_fo.png</alttexturefocus>
				<alttexturenofocus>osd/controls/play_nf.png</alttexturenofocus>
				<onclick>PlayerControl(Play)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="button" id="185">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/stop_fo.png</texturefocus>
				<texturenofocus>osd/controls/stop_nf.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="button" id="186">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/ff_fo.png</texturefocus>
				<texturenofocus>osd/controls/ff_nf.png</texturenofocus>
				<onclick>PlayerControl(Forward)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="button" id="187">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/next_fo.png</texturefocus>
				<texturenofocus>osd/controls/next_nf.png</texturenofocus>
				<onclick>PlayerControl(Next)</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>!VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="button" id="188">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/channelDOWN_fo.png</texturefocus>
				<texturenofocus>osd/controls/channelDOWN_nf.png</texturenofocus>
				<onclick>PlayerControl(Next)</onclick>
				<onclick>SetFocus(50)</onclick>
				<visible>VideoPlayer.Content(LiveTV)</visible>
			</control>
			<control type="button" id="189">
				<include>OSDControlsButton</include>
				<texturefocus colordiffuse="$VAR[Textures.GlobalColor]">osd/controls/fs_fo.png</texturefocus>
				<texturenofocus>osd/controls/fs_nf.png</texturenofocus>
				<onclick>SetFocus(50)</onclick>
				<onclick>FullScreen</onclick>
			</control>
		</control>
	</include>

	<variable name="ActiveViewList">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[535])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewBello">
		<value condition="String.IsEqual(Container.Viewmode,Bello)">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewSlide">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31080])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewGallery">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31081])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewTiles">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31090])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewThubnails">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31085])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewPosters">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31084])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewPosters2">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31084] 2)">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewBanners">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31086])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveView3DWall">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31082])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewWall">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31083])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewListWall">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31088])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewVideoWall">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31087])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewShowtime">
		<value condition="String.IsEqual(Container.Viewmode,$LOCALIZE[31089])">$LOCALIZE[19074]</value>
	</variable>
	<variable name="ActiveViewNetflix">
		<value condition="String.IsEqual(Container.Viewmode,Netflix)">$LOCALIZE[19074]</value>
	</variable>


	<!-- ============================== -->
	<!-- ==== Jump To First Letter ==== -->
	<!-- ============================== -->
	<include name="JumpToFirstSortLetter">
		<control type="panel" id="9444">
			<left>1242</left>
			<top>4</top>
			<width>35</width>
			<height>720</height>
			<onleft>50</onleft>
			<onright>9000</onright>
			<onup>9444</onup>
			<ondown>9444</ondown>
			<orientation>vertical</orientation>
			<animation type="WindowOpen" reversible="false">
				<effect type="slide" start="100,0" end="0,0" time="300" delay="0" tween="sine" easing="out" />
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="slide" start="0,0" end="100,0" time="300" delay="0" tween="sine" easing="in" />
			</animation>
			<animation type="Visible" reversible="false">
				<effect type="slide" start="100,0" end="0,0" time="300" delay="0" tween="sine" easing="out" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="slide" start="0,0" end="100,0" time="300" delay="0" tween="sine" easing="in" />
			</animation>
			<visible allowhiddenfocus="true">Control.HasFocus(9444) + ![Window.IsActive(ShutdownMenu) | Window.IsActive(Favourites) | Window.IsActive(PlayerControls)]</visible>
			<itemlayout height="26.5" width="32">
				<control type="image" id="998">
					<width>34</width>
					<height>22</height>
					<colordiffuse>viewsinfo</colordiffuse>
					<texture border="2">views/other/sortletter.png</texture>
					<animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
				</control>
				<control type="label">
					<width>34</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>viewsinfo</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
				</control>
				<control type="label">
					<width>34</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
				</control>
			</itemlayout>
			<focusedlayout height="26.5" width="32">
				<control type="image" id="998">
					<width>34</width>
					<height>22</height>
					<colordiffuse>$VAR[Text.GlobalColor]</colordiffuse>
					<texture border="2">views/other/sortletter.png</texture>
				</control>
				<control type="label">
					<width>34</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>viewsinfo</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>!String.IsEmpty(ListItem.Property(NotAvailable))</visible>
					<animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
				</control>
				<control type="label">
					<width>34</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>String.IsEmpty(ListItem.Property(NotAvailable))</visible>
				</control>
			</focusedlayout>
			<content>plugin://script.embuary.helper/?info=jumptoletter&amp;showall=true&amp;reload=$INFO[Container.NumItems]</content>
		</control>
		<control type="panel" id="9555">
			<left>6</left>
			<top>692</top>
			<height>25</height>
			<width>1280</width>
			<onleft>9555</onleft>
			<onright>9555</onright>
			<onup>50</onup>
			<ondown>9000</ondown>
			<orientation>horizontal</orientation>
			<animation type="WindowOpen" reversible="false">
				<effect type="slide" start="0,100" end="0,0" time="300" delay="0" tween="sine" easing="out" />
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="slide" start="0,0" end="0,100" time="300" delay="0" tween="sine" easing="in" />
			</animation>
			<animation type="Visible" reversible="false">
				<effect type="slide" start="0,100" end="0,0" time="300" delay="0" tween="sine" easing="out" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="slide" start="0,0" end="0,100" time="300" delay="0" tween="sine" easing="in" />
			</animation>
			<visible allowhiddenfocus="true">Control.HasFocus(9555) + ![Window.IsActive(ShutdownMenu) | Window.IsActive(Favourites) | Window.IsActive(PlayerControls)]</visible>
			<itemlayout height="26.5" width="47.3">
				<control type="image" id="998">
					<width>38</width>
					<height>22</height>
					<colordiffuse>viewsinfo</colordiffuse>
					<texture border="2">views/other/sortletter.png</texture>
					<animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
				</control>
				<control type="label">
					<width>38</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>viewsinfo</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<animation effect="fade" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
				</control>
				<control type="label">
					<width>38</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
				</control>
			</itemlayout>
			<focusedlayout height="26.5" width="47.3">
				<control type="image" id="998">
					<width>38</width>
					<height>22</height>
					<colordiffuse>$VAR[Text.GlobalColor]</colordiffuse>
					<texture border="2">views/other/sortletter.png</texture>
				</control>
				<control type="label">
					<width>38</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>viewsinfo</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>!String.IsEmpty(ListItem.Property(NotAvailable))</visible>
					<animation effect="fade" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
				</control>
				<control type="label">
					<width>38</width>
					<height>24</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>FontSize_14B</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					<visible>String.IsEmpty(ListItem.Property(NotAvailable))</visible>
				</control>
			</focusedlayout>
			<content>plugin://script.embuary.helper/?info=jumptoletter&amp;showall=true&amp;reload=$INFO[Container.NumItems]</content>
		</control>
	</include>


	<include name="HiddenDefaultButtons">
		<control type="button" id="2">
			<description>View</description>
			<visible>false</visible>
		</control>
		<control type="button" id="3">
			<description>Short by</description>
			<visible>false</visible>
		</control>
	</include>



	<!-- =================== -->
	<!-- ==== Variables ==== -->
	<!-- =================== -->
	<variable name="CountAlbumTracksPath">
		<value condition="ListItem.IsFolder + String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.FolderPath]</value>
	</variable>

	<variable name="ListView_InfoRow1">
		<value condition="[Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Director)">[B]$LOCALIZE[20339][/B][CR]$INFO[ListItem.Director]</value>
		<value condition="[Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Director)">[B]$LOCALIZE[20339][/B][CR]$LOCALIZE[195]</value>
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.DateAdded)">[B]$LOCALIZE[570][/B][CR]$INFO[ListItem.DateAdded]</value>
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.DateAdded)">[B]$LOCALIZE[570][/B][CR]$LOCALIZE[195]</value>
		<value condition="[Container.Content(Addons) | String.StartsWith(Container.FolderPath,plugin)] + !String.IsEmpty(ListItem.AddonCreator)">[B]$LOCALIZE[24000] $LOCALIZE[31041][/B][CR]$INFO[ListItem.AddonCreator]</value>
		<value condition="[Container.Content(Addons) | String.StartsWith(Container.FolderPath,plugin)] + String.IsEmpty(ListItem.AddonCreator)">[B]$LOCALIZE[24000] $LOCALIZE[31041][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Born))">[B]$LOCALIZE[21893][/B][CR]$INFO[ListItem.Property(Artist_Born)]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Formed))">[B]$LOCALIZE[21894][/B][CR]$INFO[ListItem.Property(Artist_Formed)]</value>
		<value condition="Container.Content(Artists) + [String.IsEmpty(ListItem.Property(Artist_Formed)) + String.IsEmpty(ListItem.Property(Artist_Born))]">[B]$LOCALIZE[21894][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Mood))">[B]$LOCALIZE[175][/B][CR]$INFO[ListItem.Property(Album_Mood)]</value>
		<value condition="Container.Content(Albums) + String.IsEmpty(ListItem.Property(Album_Mood))">[B]$LOCALIZE[175][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.Genre)">[B]$LOCALIZE[515][/B][CR]$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(Songs) + String.IsEmpty(ListItem.Genre)">[B]$LOCALIZE[515][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Images) + !String.IsEmpty(ListItem.PictureDatetime)">[B]$LOCALIZE[21820][/B][CR]$INFO[ListItem.PictureDatetime]</value>
		<value condition="Container.Content(Images) + String.IsEmpty(ListItem.PictureDatetime)">[B]$LOCALIZE[21820][/B][CR]$LOCALIZE[195]</value>
	</variable>
	<variable name="ListView_InfoRow2">
		<value condition="[Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Writer)">[B]$LOCALIZE[20417][/B][CR]$INFO[ListItem.Writer]</value>
		<value condition="[Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Writer)">[B]$LOCALIZE[20417][/B][CR]$LOCALIZE[195]</value>
		<value condition="[Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo)] + !String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$INFO[ListItem.Studio]</value>
		<value condition="[Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo)] + String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$LOCALIZE[195]</value>
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Premiered)">[B]$LOCALIZE[31004][/B][CR]$INFO[ListItem.Premiered]</value>
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Premiered)">[B]$LOCALIZE[31004][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Addons) + !String.IsEmpty(ListItem.AddonType)">[B]$LOCALIZE[24000] $LOCALIZE[467][/B][CR]$INFO[ListItem.AddonType]</value>
		<value condition="Container.Content(Addons) + String.IsEmpty(ListItem.AddonType)">[B]$LOCALIZE[24000] $LOCALIZE[467][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Mood))">[B]$LOCALIZE[175][/B][CR]$INFO[ListItem.Property(Artist_Mood)]</value>
		<value condition="Container.Content(Artists) + String.IsEmpty(ListItem.Property(Artist_Mood))">[B]$LOCALIZE[175][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Style))">[B]$LOCALIZE[176][/B][CR]$INFO[ListItem.Property(Album_Style)]</value>
		<value condition="Container.Content(Albums) + String.IsEmpty(ListItem.Property(Album_Style))">[B]$LOCALIZE[176][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.TrackNumber)">[B]$LOCALIZE[31005][/B][CR]$INFO[ListItem.TrackNumber,#]</value>
		<value condition="Container.Content(Songs) + String.IsEmpty(ListItem.TrackNumber)">[B]$LOCALIZE[31005][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Images) + !String.IsEmpty(ListItem.PictureResolution)">[B]$LOCALIZE[169][/B][CR]$INFO[ListItem.PictureResolution]</value>
		<value condition="Container.Content(Images) + String.IsEmpty(ListItem.PictureResolution)">[B]$LOCALIZE[169][/B][CR]$LOCALIZE[195]</value>
	</variable>
	<variable name="ListView_InfoRow3">
		<value condition="[Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Duration)">[B]$LOCALIZE[2050][/B][CR]$VAR[ListItemDurationVar]</value>
		<value condition="[Container.Content(Movies) | String.IsEqual(ListItem.DBType,movie) | Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Container.Content(MusicVideos) | String.IsEqual(ListItem.DBType,musicvideo) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Duration)">[B]$LOCALIZE[2050][/B][CR]$LOCALIZE[195]</value>
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$INFO[ListItem.Studio]</value>
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season)] + String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Addons) + !String.IsEmpty(ListItem.Property(Addon.ID))">[B]$LOCALIZE[24000] ID[/B][CR]$INFO[ListItem.Property(Addon.ID)]</value>
		<value condition="Container.Content(Addons) + String.IsEmpty(ListItem.Property(Addon.ID))">[B]$LOCALIZE[24000] ID[/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Style))">[B]$LOCALIZE[176][/B][CR]$INFO[ListItem.Property(Artist_Style)]</value>
		<value condition="Container.Content(Artists) + String.IsEmpty(ListItem.Property(Artist_Style))">[B]$LOCALIZE[176][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Label))">[B]$LOCALIZE[21899][/B][CR]$INFO[ListItem.Property(Album_Label)]</value>
		<value condition="Container.Content(Albums) + String.IsEmpty(ListItem.Property(Album_Label))">[B]$LOCALIZE[21899][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.FileExtension)">[B]$LOCALIZE[561] $LOCALIZE[467][/B][CR]$INFO[ListItem.FileExtension]</value>
		<value condition="Container.Content(Songs) + String.IsEmpty(ListItem.FileExtension)">[B]$LOCALIZE[561] $LOCALIZE[467][/B][CR]$LOCALIZE[195]</value>
		<value condition="Container.Content(Images) + !String.IsEmpty(ListItem.PictureCamModel)">[B]$LOCALIZE[21823][/B][CR]$INFO[ListItem.PictureCamModel]</value>
		<value condition="Container.Content(Images) + String.IsEmpty(ListItem.PictureCamModel)">[B]$LOCALIZE[21823][/B][CR]$LOCALIZE[195]</value>
	</variable>

	<variable name="ListView_FirstLabelVar">
		<value condition="Container.Content(Songs)">$INFO[ListItem.TrackNumber,#]</value>
		<value condition="![String.Contains(ListItem.FolderPath,/years/) | String.IsEmpty(ListItem.Year)]">$INFO[ListItem.Year]</value>
	</variable>

	<variable name="ListView_BlueLabelVar">
		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.Album)">$INFO[ListItem.Artist]$INFO[ListItem.Album, - ]</value>
		<value condition="[Container.Content(Albums) | String.IsEqual(ListItem.DBType,album)] + ![String.IsEmpty(ListItem.Duration) | ListItem.IsParentFolder]">$INFO[Control.GetLabel(7777),$LOCALIZE[182]: ]$VAR[ListItemDurationVar,  •  $LOCALIZE[180]: ]</value>
		<value condition="[Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Window.IsVisible(VideoPlaylist)] + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]">$INFO[ListItem.Season,$LOCALIZE[20373] ,  •  ]$INFO[ListItem.Episode,$LOCALIZE[20359] ,  •  ]$INFO[ListItem.Premiered,$LOCALIZE[31003] ]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_YearsActive))">$INFO[ListItem.Property(Artist_YearsActive)]</value>
		<value condition="!String.IsEmpty(ListItem.AddonSummary)">$INFO[ListItem.AddonSummary]</value>
		<value condition="!$EXP[MusicCondition]">$INFO[ListItem.Genre]</value>
	</variable>

	<variable name="ListItem_LabelVar">
		<value condition="[Container.Content(Albums) + Control.IsVisible(560)] + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Label]$INFO[ListItem.Artist, - ]</value>
		<value condition="[Container.Content(Songs) + [Control.IsVisible(50) | Control.IsVisible(59)]] + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Title]$INFO[ListItem.Artist, - ]</value>
		<value condition="[Container.Content(Songs) + [Control.IsVisible(52) | Control.IsVisible(560)]] + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Title]$VAR[ListItemDurationVar, (,)]</value>
		<value condition="[[Container.Content(Albums) | Container.Content(Songs)] + !String.IsEmpty(ListItem.Title)]">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>

	<variable name="ListItem_SubLabelVar">
		<value condition="[[Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode) | Window.IsVisible(VideoPlaylist)] + Control.IsVisible(560)] + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]">$INFO[ListItem.Premiered, $LOCALIZE[31003] , • ,]$INFO[ListItem.Rating]$VAR[ListItemDurationVar, • ,]</value>
		<value condition="[Container.Content(Songs) + [Control.IsVisible(52) | Control.IsVisible(560)]] + !String.IsEmpty(ListItem.Album)">$INFO[ListItem.Artist]$INFO[ListItem.Album, - ]$INFO[ListItem.TrackNumber, ($LOCALIZE[554] #,)]</value>
		<value condition="[Container.Content(Songs) + [Control.IsVisible(51) | Control.IsVisible(57) | Control.IsVisible(562) | Control.IsVisible(660)]] + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]$INFO[ListItem.Album, - ]</value>
		<value condition="[Container.Content(Albums) + Control.IsVisible(560)] + ![String.IsEmpty(ListItem.Duration) | ListItem.IsParentFolder]">$INFO[ListItem.Year,,  •  ]$INFO[Control.GetLabel(7777),$LOCALIZE[182]: ]$VAR[ListItemDurationVar,  •  $LOCALIZE[180]: ]</value> -->
		<value condition="[[Container.Content(Songs) | Container.Content(Files)] + [Control.IsVisible(50) | Control.IsVisible(660)]] + !String.IsEmpty(ListItem.Duration)">$VAR[ListItemDurationVar]</value>
		<value condition="!String.isempty(ListItem.Appearances)">$INFO[ListItem.Appearances,$LOCALIZE[38026]: ]</value>
		<value condition="Window.IsVisible(Pictures) + [Control.IsVisible(52) | Control.IsVisible(560) | Control.IsVisible(660)]  + !String.IsEmpty(ListItem.PictureResolution)">$INFO[ListItem.PictureDateTime,, • ]$INFO[ListItem.PictureResolution]$INFO[ListItem.PictureCamModel, • ]</value>
		<value condition="![Container.Content(Seasons) | Container.Content(Albums) | String.Contains(ListItem.FolderPath,/genres/) | String.IsEmpty(ListItem.Genre)]">$INFO[ListItem.Genre]</value>
		<value condition="!ListItem.Property(Addon.IsEnabled) + !Container.Content(MusicVideos) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
		<value condition="String.IsEqual(Container.FolderPath,addons://recently_updated/) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
		<value condition="!String.IsEmpty(ListItem.AddonVersion)">$INFO[ListItem.AddonVersion,v.]</value>
		<value condition="Control.IsVisible(50) + !ListItem.IsParentFolder">․ ․ ․</value>
	</variable>

	<variable name="ListItem_SubLabelTwoVar">
		<value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_YearsActive),$LOCALIZE[21898]: ]</value>
		<value condition="[Container.Content(Albums) | String.IsEqual(ListItem.DBType,album)] + ![String.IsEmpty(ListItem.Duration) | ListItem.IsParentFolder | Control.IsVisible(562) | Control.IsVisible(57)]">$INFO[ListItem.Year,,  •  ]$INFO[Control.GetLabel(7777),$LOCALIZE[182]: ]$VAR[ListItemDurationVar,  •  $LOCALIZE[180]: ]</value>
		<value condition="[Container.Content(Albums) + [Control.IsVisible(57) | Control.IsVisible(562)]] + ![String.IsEmpty(ListItem.Duration) | ListItem.IsParentFolder]">$INFO[ListItem.Year,,  •  ]$VAR[ListItemDurationVar,$LOCALIZE[180]: ]</value>
		<value condition="Container.Content(Songs)">$INFO[ListItem.TrackNumber,$LOCALIZE[554] #,  •  ,]$INFO[ListItem.Duration]</value>
		<value condition="Container.Content(MusicVideos)">$INFO[ListItem.Year]$INFO[ListItem.Rating, • ,]$INFO[ListItem.Duration, • ,]</value>
	</variable>

	<variable name="SmallGlobalInfo">
		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/) + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)">$LOCALIZE[20457]</value>
		<value condition="[Container.Content(Movies) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Year)">$VAR[ListItemDurationVar]</value>
		<value condition="[Container.Content(Movies) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]$INFO[ListItem.Rating, • ,]$VAR[ListItemDurationVar, • ,]</value>
		<value condition="[Container.Content(Movies) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered,$LOCALIZE[31004]: ]</value>
		<value condition="Container.Content(TVShows) | Container.Content(Seasons) + ![String.StartsWith(ListItem.Label,$LOCALIZE[20366]) | String.IsEmpty(ListItem.Property(UnWatchedEpisodes))]">$INFO[ListItem.Year]$INFO[ListItem.Rating, • ,]$INFO[ListItem.Property(UnWatchedEpisodes), • , $LOCALIZE[16101]]</value>
		<value condition="Container.Content(TVShows) | Container.Content(Seasons) + String.StartsWith(ListItem.Label,$LOCALIZE[20366])">$INFO[ListItem.Property(UnWatchedEpisodes),, $LOCALIZE[16101]]</value>
		<value condition="[Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Rating)">$INFO[ListItem.Premiered, $LOCALIZE[31003] , • ,]$INFO[ListItem.Rating]$VAR[ListItemDurationVar, • ,]</value>
		<value condition="[Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)]">$INFO[ListItem.Premiered, $LOCALIZE[31003] ]$VAR[ListItemDurationVar, • ,]</value>
		<value condition="Container.Content(Albums)">$INFO[ListItem.Property(Album_Artist)]</value>
		<value condition="Container.Content(Artists)">$INFO[ListItem.Genre]</value>
	</variable>

	<variable name="GlobalPlotDescription">
		<value condition="Container.Content(Artists) | String.IsEqual(ListItem.DBType,artist)">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="Container.Content(Albums) | String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="Container.Content(Songs) | String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Comment]</value>
		<value condition="Container.Content(Addons)">$INFO[ListItem.AddonDescription]</value>
		<value condition="String.IsEqual(ListItem.DBType,set) + Integer.IsGreater(Container(9994).NumItems,1) + !Container(9994).IsUpdating + !$EXP[CustumHubsCondition]">$VAR[MovieSetInfo]</value>
		<value condition="String.IsEqual(ListItem.DBType,set) + Integer.IsEqual(Container(9994).NumItems,1) + !Container(9994).IsUpdating + !$EXP[CustumHubsCondition]">[B]$INFO[Container(9994).ListItemAbsolute(0).Label]$INFO[Container(9994).ListItemAbsolute(0).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(0).Plot]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>

	<variable name="NetFlixSubLabelInfo">
		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/) + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)">$LOCALIZE[20457]</value>
		<value condition="[Container.Content(Movies) + String.StartsWith(Container.FolderPath,plugin://plugin.video)] + !String.IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate),$LOCALIZE[31004]: ]</value>
		<value condition="Container.Content(Episodes) | [Window.IsVisible(VideoPlaylist) + String.IsEqual(ListItem.DBType,Episode)]">$INFO[ListItem.Premiered]</value>
		<value condition="!String.isempty(ListItem.Appearances)">$INFO[ListItem.Appearances,$LOCALIZE[38026]: ]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>

	<variable name="NetFlixSeasonsLabel">
		<value condition="Container.Content(TVShows) + Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[33054]]</value>
		<value condition="Container.Content(TVShows) + !Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[20373]]</value>
	</variable>

	<variable name="FanartThumbsOptionsLabels">
		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),1)">$LOCALIZE[20445]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),2)">$LOCALIZE[31218]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)">$LOCALIZE[31219]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),1)">$LOCALIZE[20445]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),2)">$LOCALIZE[31218]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)">$LOCALIZE[31219]</value>
		<value condition="Control.IsVisible(52) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(GalleryViewWideThumbTVShows),1)">$LOCALIZE[20445]</value>
		<value condition="Control.IsVisible(52) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(GalleryViewWideThumbTVShows),2)">$LOCALIZE[31218]</value>
		<value condition="Control.IsVisible(52) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(GalleryViewWideThumbTVShows),3)">$LOCALIZE[31219]</value>
		<value condition="Control.IsVisible(52) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(GalleryViewWideThumbMovies),1)">$LOCALIZE[20445]</value>
		<value condition="Control.IsVisible(52) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(GalleryViewWideThumbMovies),2)">$LOCALIZE[31218]</value>
		<value condition="Control.IsVisible(52) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(GalleryViewWideThumbMovies),3)">$LOCALIZE[31219]</value>
		<value condition="Control.IsVisible(562) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),1)">$LOCALIZE[20445]</value>
		<value condition="Control.IsVisible(562) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)">$LOCALIZE[31218]</value>
		<value condition="Control.IsVisible(562) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)">$LOCALIZE[31219]</value>
		<value condition="Control.IsVisible(562) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(TileViewWideThumbMovies),1)">$LOCALIZE[20445]</value>
		<value condition="Control.IsVisible(562) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(TileViewWideThumbMovies),2)">$LOCALIZE[31218]</value>
		<value condition="Control.IsVisible(562) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(TileViewWideThumbMovies),3)">$LOCALIZE[31219]</value>
	</variable>

	<variable name="BelloGenericAspectRatioLabels">
		<value condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),1)">$LOCALIZE[31223]</value>
		<value condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),2)">$LOCALIZE[20021]</value>
		<value condition="String.IsEqual(Skin.String(BelloGenericAspectRatioThumbs),3)">$LOCALIZE[31218]</value>
	</variable>

	<variable name="AddonStatus">
		<value condition="[String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24170]) | String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24171])] + !ListItem.Property(addon.isenabled)">overlays/addons_status/status_broken.png</value>
		<value condition="ListItem.Property(addon.orphaned)">overlays/addons_status/status_orphaned.png</value>
		<value condition="ListItem.Property(addon.isinstalled) + !ListItem.Property(addon.isenabled) + Window.IsActive(addonbrowser)">overlays/addons_status/status_broken.png</value>
		<value condition="ListItem.Property(addon.hasupdate) | ListItem.Property(addon.isupdate)">overlays/addons_status/status_update.png</value>
		<value condition="ListItem.Property(addon.isenabled) + String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24169]) + ![String.Contains(Container.FolderPath,addons://user) | String.Contains(Container.FolderPath,addons://recently_updated/)]">overlays/addons_status/status_enabled.png</value>
		<value condition="ListItem.Property(addon.isenabled) + String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24170])">overlays/addons_status/status_deprecated.png</value>
		<value condition="ListItem.Property(addon.isenabled) + String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24171])">overlays/addons_status/status_broken.png</value>
		<value condition="String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)">overlays/unwatched/thumbs/UnWatched_Square.png</value>
	</variable>

	<variable name="ColorDiffuseThumbs">
		<value condition="ListItem.IsParentFolder | [String.Contains(ListItem.Icon,Default) + String.IsEmpty(ListItem.DBType)]">$VAR[Textures.GlobalColor]</value>
		<value>FFFFFFFF</value>
	</variable>

	<variable name="ColorDiffuseParentFolder">
		<value condition="String.StartsWith(ListItem.Icon,DefaultFolderBack)">$VAR[Textures.GlobalColor]</value>
		<value>FFFFFFFF</value>
	</variable>

	<variable name="AddonStateColor">
		<value condition="String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24170]) | String.IsEqual(ListItem.AddonLifecycleType,$LOCALIZE[24171])">invalid</value>
		<value condition="ListItem.Property(Addon.IsInstalled) + !ListItem.Property(Addon.IsEnabled)">invalid</value>
		<value condition="!Control.IsVisible(563)">viewsinfo</value>
	</variable>

	<variable name="CurrentPlayList">
		<value condition="Window.IsActive(Videos) + !String.IsEqual(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
		<value condition="Window.IsActive(Music) + !String.IsEqual(Playlist.Length(music),0)">ActivateWindow(musicplaylist)</value>
	</variable>

	<variable name="ContentInfoVideos">
		<value condition="![[Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.StartsWith(Container.FolderPath,plugin://plugin.video)]">$LOCALIZE[3]</value>
		<value condition="[Container.Content(Movies) | Container.Content(Sets)]  + !String.StartsWith(Container.FolderPath,plugin://plugin.video)">$LOCALIZE[20342]</value>
		<value condition="[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + !String.StartsWith(Container.FolderPath,plugin://plugin.video)">$LOCALIZE[31002]</value>
		<value condition="Container.Content(MusicVideos)">$LOCALIZE[20389]</value>
	</variable>


	<variable name="VarArtPoster">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(Seasons) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="Container.Content(Seasons) + String.IsEmpty(ListItem.Art(season.poster)) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="Control.IsVisible(561) | Control.IsVisible(57) | Control.IsVisible(59)">$INFO[ListItem.ActualIcon,thumbs/,/folderback_poster_tp.png]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_poster_big_tp.png]</value>
	</variable>

	<variable name="VarArtFanart">
		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),2)">$VAR[LandscapeVars]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)">$VAR[ClearlogoVars]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),2)">$VAR[LandscapeVars]</value>
		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)">$VAR[ClearlogoVars]</value>
		<value condition="[Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="![String.IsEmpty(ListItem.Art(fanart)) | String.StartsWith(Container.FolderPath,plugin://plugin.video.youtube/)]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="![String.IsEmpty(ListItem.Property(Fanart_Image)) | String.StartsWith(Container.FolderPath,plugin://plugin.video.youtube/)]">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="Control.IsVisible(562)">$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_tp.png]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_big_tp.png]</value>
	</variable>

	<variable name="VarArtMusicFanart">
		<value condition="[Control.IsVisible(562) + Container.Content(Artists)] + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="[Control.IsVisible(50) + Container.Content(Addons)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="[Control.IsVisible(50) + Container.Content(Artists)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="[Control.IsVisible(50) + Container.Content(Albums)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="[Control.IsVisible(50) + Container.Content(Songs)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="[Control.IsVisible(52) + Container.Content(Artists)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_big_tp.png]</value>
		<value condition="[Control.IsVisible(52) + Container.Content(Albums)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_big_tp.png]</value>
		<value condition="[Control.IsVisible(52) + Container.Content(Songs)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_big_tp.png]</value>
		<value condition="[Control.IsVisible(562) + Container.Content(Artists)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="[Control.IsVisible(562) + Container.Content(Albums)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="[Control.IsVisible(562) + Container.Content(Songs)] + !ListItem.IsParentFolder">$INFO[ListItem.ActualIcon,thumbs/,/fallback_fanart_tp.png]</value>
		<value condition="Control.IsVisible(562)">$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_tp.png]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_big_tp.png]</value>
	</variable>

	<variable name="VarArtThumb">
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
	</variable>

	<variable name="VarArtThumbSquare">
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_square_tp.png]</value>
	</variable>

	<variable name="VarVideoWallThumb">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
	</variable>

	<variable name="VarGalleryGenericArt">
		<value condition="$EXP[MusicCondition]">$VAR[VarArtMusicFanart]</value>
		<value condition="Container.Content(Images) + [Container.HasFiles + !String.IsEmpty(ListItem.FileName)]">$INFO[ListItem.FileNameAndPath]</value>
		<value condition="Container.Content(Images) + [!Container.HasFiles | String.IsEmpty(ListItem.FileName)]">$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="NetFlixLandscapeThumb">
		<value condition="[Container.Content(TVShows) | String.IsEqual(ListItem.DBType,tvshow)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[Container.Content(Seasons) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[Container.Content(Episodes) | String.IsEqual(ListItem.DBType,episode)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
	</variable>

	<variable name="VarArtBanner">
		<value condition="!String.IsEmpty(ListItem.Art(season.banner))">$INFO[ListItem.Art(season.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_banner_tp.png]</value>
	</variable>

	<variable name="LandscapeVars">
		<value condition="!String.IsEmpty(ListItem.Art(season.landscape))">$INFO[ListItem.Art(season.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="Control.IsVisible(562)">$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_big_tp.png]</value>
	</variable>

	<variable name="ClearlogoVars">
		<value condition="[Container.Content(TVShows) | Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="Container.Content(Seasons) | Container.Content(Episodes) + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="Control.IsVisible(562)">$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_big_tp.png]</value>
	</variable>

	<variable name="ThumbnailsOnThumbLabel">
		<value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
		<value condition="![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</value>
		<value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
	</variable>

	<variable name="WallViewsGlows">
		<value condition="Control.IsVisible(53) + Skin.Hassetting(Disable3DWallView_PosterGlow)">views/wall/poster_shadow.png</value>
		<value condition="Control.IsVisible(54) + Skin.Hassetting(DisableWallView_PosterGlow)">views/wall/poster_shadow.png</value>
		<value condition="Control.IsVisible(58) + Skin.Hassetting(DisableListWallView_PosterGlow)">views/wall/poster_shadow.png</value>
		<value condition="Control.IsVisible(59) + Skin.Hassetting(Disable3DWallMusicView_ThumbGlow)">views/wall/square_shadow.png</value>
		<value condition="Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(58)">views/wall/poster_blue_shadow.png</value>
		<value condition="Control.IsVisible(59)">views/wall/square_blue_shadow.png</value>
		<value condition="Control.IsVisible(64)">views/posters/bg_bottom_shadow.png</value>
	</variable>

	<variable name="ViewsDef3DFlags">
		<value condition="Container().ListItem.IsStereoscopic | String.Contains(Container().ListItem.FilenameAndPath,.3d.) | String.Contains(Container().ListItem.FileNameAndPath,-3D.) | String.Contains(Container().ListItem.FilenameAndPath,hsbs) | String.Contains(Container().ListItem.FilenameAndPath,sbs) | String.Contains(Container().ListItem.FilenameAndPath,half-sbs)">flags/def/3d.png</value>
		<value>$INFO[Container().ListItem.VideoResolution,flags/def/,.png]</value>
	</variable>

	<variable name="ViewsGenres">
		<value condition="String.IsEqual(Container.FolderPath,videodb://movies/genres/) | String.StartsWith(ListItem.FolderPath,videodb://movies/genres/)">$INFO[ListItem.Label,special://skin/extras/moviesgenres/,.jpg]</value>
		<value condition="String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) | String.StartsWith(ListItem.FolderPath,videodb://tvshows/genres/)">$INFO[ListItem.Label,special://skin/extras/tvshowsgenres/,.jpg]</value>
		<value>$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
	</variable>

<!--
		<value condition="[String.IsEqual(Window(Home).Property(MediaHub),movies_hub) | String.IsEqual(Window(Home).Property(MediaHub),tvshows_hub)] + String.IsEqual(ListItem.DBType,genre)">DefaultGenre.png</value>
		<value condition="String.IsEqual(Window(Home).Property(MediaHub),music_hub) + String.IsEqual(ListItem.DBType,genre)">DefaultMusicGenres.png</value>
-->

	<variable name="ThumbnailsArt">
		<value condition="String.Contains(ListItem.FolderPath,/years/)">DefaultYear.png</value>
		<value condition="String.Contains(ListItem.FolderPath,/studios/)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="String.Contains(ListItem.FolderPath,/countries/)">DefaultCountry.png</value>
		<value condition="String.Contains(ListItem.FolderPath,/tags/)">DefaultTags.png</value>
		<value condition="String.Contains(ListItem.FolderPath,/directors/)">DefaultDirector.png</value>
		<value condition="String.Contains(ListItem.FolderPath,/playlists/video/)">DefaultVideoPlaylists.png</value>
		<value condition="String.Contains(ListItem.FolderPath,/playlists/music/)">DefaultMusicPlaylists.png</value>
		<value condition="String.Contains(ListItem.FolderPath,/user/all)">DefaultFolder.png</value>
		<value condition="String.IsEqual(ListItem.DBType,genre)">$VAR[ViewsGenres]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>

<variable name="MovieSetInfo">
<value>[B]$INFO[Container(9994).NumItems,, $LOCALIZE[342]][/B]$INFO[Container(9994).ListItemAbsolute(0).Label,[CR]]$INFO[Container(9994).ListItemAbsolute(0).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(1).Label]$INFO[Container(9994).ListItemAbsolute(1).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(2).Label]$INFO[Container(9994).ListItemAbsolute(2).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(3).Label]$INFO[Container(9994).ListItemAbsolute(3).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(4).Label]$INFO[Container(9994).ListItemAbsolute(4).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(5).Label]$INFO[Container(9994).ListItemAbsolute(5).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(6).Label]$INFO[Container(9994).ListItemAbsolute(6).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(7).Label]$INFO[Container(9994).ListItemAbsolute(7).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(8).Label]$INFO[Container(9994).ListItemAbsolute(8).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(9).Label]$INFO[Container(9994).ListItemAbsolute(9).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(10).Label]$INFO[Container(9994).ListItemAbsolute(10).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(11).Label]$INFO[Container(9994).ListItemAbsolute(11).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(12).Label]$INFO[Container(9994).ListItemAbsolute(12).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(13).Label]$INFO[Container(9994).ListItemAbsolute(13).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(14).Label]$INFO[Container(9994).ListItemAbsolute(14).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(15).Label]$INFO[Container(9994).ListItemAbsolute(15).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(16).Label]$INFO[Container(9994).ListItemAbsolute(16).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(17).Label]$INFO[Container(9994).ListItemAbsolute(17).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(18).Label]$INFO[Container(9994).ListItemAbsolute(18).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(19).Label]$INFO[Container(9994).ListItemAbsolute(19).Year, (,)[CR]]$INFO[Container(9994).ListItemAbsolute(20).Label]$INFO[Container(9994).ListItemAbsolute(20).Year, (,)[CR]]
[B]$INFO[Container(9994).ListItemAbsolute(0).Label]$INFO[Container(9994).ListItemAbsolute(0).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(0).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(1).Label]$INFO[Container(9994).ListItemAbsolute(1).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(1).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(2).Label]$INFO[Container(9994).ListItemAbsolute(2).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(2).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(3).Label]$INFO[Container(9994).ListItemAbsolute(3).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(3).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(4).Label]$INFO[Container(9994).ListItemAbsolute(4).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(4).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(5).Label]$INFO[Container(9994).ListItemAbsolute(5).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(5).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(6).Label]$INFO[Container(9994).ListItemAbsolute(6).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(6).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(7).Label]$INFO[Container(9994).ListItemAbsolute(7).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(7).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(8).Label]$INFO[Container(9994).ListItemAbsolute(8).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(8).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(9).Label]$INFO[Container(9994).ListItemAbsolute(9).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(9).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(10).Label]$INFO[Container(9994).ListItemAbsolute(10).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(10).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(11).Label]$INFO[Container(9994).ListItemAbsolute(11).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(11).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(12).Label]$INFO[Container(9994).ListItemAbsolute(12).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(12).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(13).Label]$INFO[Container(9994).ListItemAbsolute(13).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(13).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(14).Label]$INFO[Container(9994).ListItemAbsolute(14).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(14).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(15).Label]$INFO[Container(9994).ListItemAbsolute(15).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(15).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(16).Label]$INFO[Container(9994).ListItemAbsolute(16).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(16).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(17).Label]$INFO[Container(9994).ListItemAbsolute(17).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(17).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(18).Label]$INFO[Container(9994).ListItemAbsolute(18).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(18).Plot,,[CR][CR]][B]$INFO[Container(9994).ListItemAbsolute(19).Label]$INFO[Container(9994).ListItemAbsolute(19).Year, (,)[CR]][/B]$INFO[Container(9994).ListItemAbsolute(19).Plot,,[CR]]</value>
</variable>

	<variable name="MovieSetCount">
		<value condition="Control.IsVisible(580) + !Integer.IsGreater(Container(9994).NumItems,1)">$INFO[Container(9994).NumItems,, $LOCALIZE[20338] ]</value>
		<value condition="Control.IsVisible(580) + Integer.IsGreater(Container(9994).NumItems,1)">$INFO[Container(9994).NumItems,, $LOCALIZE[342] ]</value>
		<value condition="!Integer.IsGreater(Container(9994).NumItems,1)">$INFO[Container(9994).NumItems,$LOCALIZE[20457] (, $LOCALIZE[20338]) ]</value>
		<value>$INFO[Container(9994).NumItems,$LOCALIZE[20457] (, $LOCALIZE[342]) ]</value>
	</variable>


	<variable name="WallViewsBigPoster0">
		<value condition="!String.IsEmpty(ListItem(0).Art(poster))">$INFO[ListItem(0).Art(poster)]</value>
		<value condition="ListItem(0).IsParentFolder">$INFO[ListItem(0).ActualIcon,thumbs/,/folderback_poster_big_tp.png]</value>
		<value>thumbs/fallback_poster_big.png</value>
	</variable>
	<variable name="WallViewsBigPoster-1">
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="ListItem(-1).IsParentFolder">$INFO[ListItem(-1).ActualIcon,thumbs/,/folderback_poster_big_tp.png]</value>
		<value>thumbs/fallback_poster_big.png</value>
	</variable>
	<variable name="WallViewsBigPoster+1">
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="ListItem(1).IsParentFolder">$INFO[ListItem(1).ActualIcon,thumbs/,/folderback_poster_big_tp.png]</value>
		<value>thumbs/fallback_poster_big.png</value>
	</variable>


</includes>